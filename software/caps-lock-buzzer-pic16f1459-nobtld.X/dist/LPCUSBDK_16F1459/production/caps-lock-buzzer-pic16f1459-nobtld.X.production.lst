

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 03 18:39:25 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	swtext1,local,class=CONST,delta=2
    21                           	psect	swtext2,local,class=CONST,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	swtext3,local,class=CONST,delta=2
    24                           	psect	swtext4,local,class=CONST,delta=2
    25                           	psect	swtext5,local,class=CONST,delta=2
    26                           	psect	text34,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext6,local,class=CONST,delta=2
    28                           	psect	swtext7,local,class=CONST,delta=2
    29                           	psect	swtext8,local,class=CONST,delta=2
    30                           	psect	swtext9,local,class=CONST,delta=2
    31                           	psect	text39,local,class=CODE,merge=1,delta=2
    32                           	psect	text43,local,class=CODE,merge=1,delta=2
    33                           	psect	text47,local,class=CODE,merge=1,delta=2
    34                           	psect	pa_nodes0,global,class=CODE,delta=2
    35                           	dabs	1,0x20,32,_BDT
    36                           	dabs	1,0x48,8,_CtrlTrfData
    37                           	dabs	1,0x40,8,_SetupPkt
    38                           	dabs	1,0xA0,8,_inputReport
    39                           	dabs	1,0x120,1,_outputReport
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1459 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011D                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0197                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  0211                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0213                     	;# 
   160  0214                     	;# 
   161  0214                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  0394                     	;# 
   173  0395                     	;# 
   174  0396                     	;# 
   175  039A                     	;# 
   176  039B                     	;# 
   177  0611                     	;# 
   178  0612                     	;# 
   179  0613                     	;# 
   180  0613                     	;# 
   181  0614                     	;# 
   182  0615                     	;# 
   183  0616                     	;# 
   184  0616                     	;# 
   185  0691                     	;# 
   186  0692                     	;# 
   187  0693                     	;# 
   188  0694                     	;# 
   189  0695                     	;# 
   190  0E8E                     	;# 
   191  0E8F                     	;# 
   192  0E90                     	;# 
   193  0E91                     	;# 
   194  0E92                     	;# 
   195  0E93                     	;# 
   196  0E94                     	;# 
   197  0E94                     	;# 
   198  0E95                     	;# 
   199  0E96                     	;# 
   200  0E97                     	;# 
   201  0E98                     	;# 
   202  0E99                     	;# 
   203  0E9A                     	;# 
   204  0E9B                     	;# 
   205  0E9C                     	;# 
   206  0E9D                     	;# 
   207  0E9E                     	;# 
   208  0E9F                     	;# 
   209  0FE4                     	;# 
   210  0FE5                     	;# 
   211  0FE6                     	;# 
   212  0FE7                     	;# 
   213  0FE8                     	;# 
   214  0FE9                     	;# 
   215  0FEA                     	;# 
   216  0FEB                     	;# 
   217  0FED                     	;# 
   218  0FEE                     	;# 
   219  0FEF                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  0111                     	;# 
   267  0112                     	;# 
   268  0113                     	;# 
   269  0114                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0117                     	;# 
   273  0118                     	;# 
   274  0119                     	;# 
   275  011D                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  018E                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0197                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019E                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020D                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0216                     	;# 
   310  0216                     	;# 
   311  0217                     	;# 
   312  0217                     	;# 
   313  0391                     	;# 
   314  0392                     	;# 
   315  0393                     	;# 
   316  0394                     	;# 
   317  0395                     	;# 
   318  0396                     	;# 
   319  039A                     	;# 
   320  039B                     	;# 
   321  0611                     	;# 
   322  0612                     	;# 
   323  0613                     	;# 
   324  0613                     	;# 
   325  0614                     	;# 
   326  0615                     	;# 
   327  0616                     	;# 
   328  0616                     	;# 
   329  0691                     	;# 
   330  0692                     	;# 
   331  0693                     	;# 
   332  0694                     	;# 
   333  0695                     	;# 
   334  0E8E                     	;# 
   335  0E8F                     	;# 
   336  0E90                     	;# 
   337  0E91                     	;# 
   338  0E92                     	;# 
   339  0E93                     	;# 
   340  0E94                     	;# 
   341  0E94                     	;# 
   342  0E95                     	;# 
   343  0E96                     	;# 
   344  0E97                     	;# 
   345  0E98                     	;# 
   346  0E99                     	;# 
   347  0E9A                     	;# 
   348  0E9B                     	;# 
   349  0E9C                     	;# 
   350  0E9D                     	;# 
   351  0E9E                     	;# 
   352  0E9F                     	;# 
   353  0FE4                     	;# 
   354  0FE5                     	;# 
   355  0FE6                     	;# 
   356  0FE7                     	;# 
   357  0FE8                     	;# 
   358  0FE9                     	;# 
   359  0FEA                     	;# 
   360  0FEB                     	;# 
   361  0FED                     	;# 
   362  0FEE                     	;# 
   363  0FEF                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0015                     	;# 
   382  0016                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001C                     	;# 
   390  008C                     	;# 
   391  008D                     	;# 
   392  008E                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0097                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  009F                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  0111                     	;# 
   411  0112                     	;# 
   412  0113                     	;# 
   413  0114                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0117                     	;# 
   417  0118                     	;# 
   418  0119                     	;# 
   419  011D                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422  018E                     	;# 
   423  0191                     	;# 
   424  0191                     	;# 
   425  0192                     	;# 
   426  0193                     	;# 
   427  0193                     	;# 
   428  0194                     	;# 
   429  0195                     	;# 
   430  0196                     	;# 
   431  0197                     	;# 
   432  0199                     	;# 
   433  019A                     	;# 
   434  019B                     	;# 
   435  019B                     	;# 
   436  019C                     	;# 
   437  019D                     	;# 
   438  019E                     	;# 
   439  019F                     	;# 
   440  020C                     	;# 
   441  020D                     	;# 
   442  0211                     	;# 
   443  0211                     	;# 
   444  0212                     	;# 
   445  0212                     	;# 
   446  0213                     	;# 
   447  0213                     	;# 
   448  0214                     	;# 
   449  0214                     	;# 
   450  0215                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0216                     	;# 
   454  0216                     	;# 
   455  0217                     	;# 
   456  0217                     	;# 
   457  0391                     	;# 
   458  0392                     	;# 
   459  0393                     	;# 
   460  0394                     	;# 
   461  0395                     	;# 
   462  0396                     	;# 
   463  039A                     	;# 
   464  039B                     	;# 
   465  0611                     	;# 
   466  0612                     	;# 
   467  0613                     	;# 
   468  0613                     	;# 
   469  0614                     	;# 
   470  0615                     	;# 
   471  0616                     	;# 
   472  0616                     	;# 
   473  0691                     	;# 
   474  0692                     	;# 
   475  0693                     	;# 
   476  0694                     	;# 
   477  0695                     	;# 
   478  0E8E                     	;# 
   479  0E8F                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E93                     	;# 
   484  0E94                     	;# 
   485  0E94                     	;# 
   486  0E95                     	;# 
   487  0E96                     	;# 
   488  0E97                     	;# 
   489  0E98                     	;# 
   490  0E99                     	;# 
   491  0E9A                     	;# 
   492  0E9B                     	;# 
   493  0E9C                     	;# 
   494  0E9D                     	;# 
   495  0E9E                     	;# 
   496  0E9F                     	;# 
   497  0FE4                     	;# 
   498  0FE5                     	;# 
   499  0FE6                     	;# 
   500  0FE7                     	;# 
   501  0FE8                     	;# 
   502  0FE9                     	;# 
   503  0FEA                     	;# 
   504  0FEB                     	;# 
   505  0FED                     	;# 
   506  0FEE                     	;# 
   507  0FEF                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000D                     	;# 
   522  000E                     	;# 
   523  0011                     	;# 
   524  0012                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  008C                     	;# 
   535  008D                     	;# 
   536  008E                     	;# 
   537  0091                     	;# 
   538  0092                     	;# 
   539  0095                     	;# 
   540  0096                     	;# 
   541  0097                     	;# 
   542  0098                     	;# 
   543  0099                     	;# 
   544  009A                     	;# 
   545  009B                     	;# 
   546  009B                     	;# 
   547  009C                     	;# 
   548  009D                     	;# 
   549  009E                     	;# 
   550  009F                     	;# 
   551  010C                     	;# 
   552  010D                     	;# 
   553  010E                     	;# 
   554  0111                     	;# 
   555  0112                     	;# 
   556  0113                     	;# 
   557  0114                     	;# 
   558  0115                     	;# 
   559  0116                     	;# 
   560  0117                     	;# 
   561  0118                     	;# 
   562  0119                     	;# 
   563  011D                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  018E                     	;# 
   567  0191                     	;# 
   568  0191                     	;# 
   569  0192                     	;# 
   570  0193                     	;# 
   571  0193                     	;# 
   572  0194                     	;# 
   573  0195                     	;# 
   574  0196                     	;# 
   575  0197                     	;# 
   576  0199                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019E                     	;# 
   583  019F                     	;# 
   584  020C                     	;# 
   585  020D                     	;# 
   586  0211                     	;# 
   587  0211                     	;# 
   588  0212                     	;# 
   589  0212                     	;# 
   590  0213                     	;# 
   591  0213                     	;# 
   592  0214                     	;# 
   593  0214                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0216                     	;# 
   598  0216                     	;# 
   599  0217                     	;# 
   600  0217                     	;# 
   601  0391                     	;# 
   602  0392                     	;# 
   603  0393                     	;# 
   604  0394                     	;# 
   605  0395                     	;# 
   606  0396                     	;# 
   607  039A                     	;# 
   608  039B                     	;# 
   609  0611                     	;# 
   610  0612                     	;# 
   611  0613                     	;# 
   612  0613                     	;# 
   613  0614                     	;# 
   614  0615                     	;# 
   615  0616                     	;# 
   616  0616                     	;# 
   617  0691                     	;# 
   618  0692                     	;# 
   619  0693                     	;# 
   620  0694                     	;# 
   621  0695                     	;# 
   622  0E8E                     	;# 
   623  0E8F                     	;# 
   624  0E90                     	;# 
   625  0E91                     	;# 
   626  0E92                     	;# 
   627  0E93                     	;# 
   628  0E94                     	;# 
   629  0E94                     	;# 
   630  0E95                     	;# 
   631  0E96                     	;# 
   632  0E97                     	;# 
   633  0E98                     	;# 
   634  0E99                     	;# 
   635  0E9A                     	;# 
   636  0E9B                     	;# 
   637  0E9C                     	;# 
   638  0E9D                     	;# 
   639  0E9E                     	;# 
   640  0E9F                     	;# 
   641  0FE4                     	;# 
   642  0FE5                     	;# 
   643  0FE6                     	;# 
   644  0FE7                     	;# 
   645  0FE8                     	;# 
   646  0FE9                     	;# 
   647  0FEA                     	;# 
   648  0FEB                     	;# 
   649  0FED                     	;# 
   650  0FEE                     	;# 
   651  0FEF                     	;# 
   652  0000                     	;# 
   653  0001                     	;# 
   654  0002                     	;# 
   655  0003                     	;# 
   656  0004                     	;# 
   657  0005                     	;# 
   658  0006                     	;# 
   659  0007                     	;# 
   660  0008                     	;# 
   661  0009                     	;# 
   662  000A                     	;# 
   663  000B                     	;# 
   664  000C                     	;# 
   665  000D                     	;# 
   666  000E                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001B                     	;# 
   677  001C                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  009F                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  0111                     	;# 
   699  0112                     	;# 
   700  0113                     	;# 
   701  0114                     	;# 
   702  0115                     	;# 
   703  0116                     	;# 
   704  0117                     	;# 
   705  0118                     	;# 
   706  0119                     	;# 
   707  011D                     	;# 
   708  018C                     	;# 
   709  018D                     	;# 
   710  018E                     	;# 
   711  0191                     	;# 
   712  0191                     	;# 
   713  0192                     	;# 
   714  0193                     	;# 
   715  0193                     	;# 
   716  0194                     	;# 
   717  0195                     	;# 
   718  0196                     	;# 
   719  0197                     	;# 
   720  0199                     	;# 
   721  019A                     	;# 
   722  019B                     	;# 
   723  019B                     	;# 
   724  019C                     	;# 
   725  019D                     	;# 
   726  019E                     	;# 
   727  019F                     	;# 
   728  020C                     	;# 
   729  020D                     	;# 
   730  0211                     	;# 
   731  0211                     	;# 
   732  0212                     	;# 
   733  0212                     	;# 
   734  0213                     	;# 
   735  0213                     	;# 
   736  0214                     	;# 
   737  0214                     	;# 
   738  0215                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0216                     	;# 
   742  0216                     	;# 
   743  0217                     	;# 
   744  0217                     	;# 
   745  0391                     	;# 
   746  0392                     	;# 
   747  0393                     	;# 
   748  0394                     	;# 
   749  0395                     	;# 
   750  0396                     	;# 
   751  039A                     	;# 
   752  039B                     	;# 
   753  0611                     	;# 
   754  0612                     	;# 
   755  0613                     	;# 
   756  0613                     	;# 
   757  0614                     	;# 
   758  0615                     	;# 
   759  0616                     	;# 
   760  0616                     	;# 
   761  0691                     	;# 
   762  0692                     	;# 
   763  0693                     	;# 
   764  0694                     	;# 
   765  0695                     	;# 
   766  0E8E                     	;# 
   767  0E8F                     	;# 
   768  0E90                     	;# 
   769  0E91                     	;# 
   770  0E92                     	;# 
   771  0E93                     	;# 
   772  0E94                     	;# 
   773  0E94                     	;# 
   774  0E95                     	;# 
   775  0E96                     	;# 
   776  0E97                     	;# 
   777  0E98                     	;# 
   778  0E99                     	;# 
   779  0E9A                     	;# 
   780  0E9B                     	;# 
   781  0E9C                     	;# 
   782  0E9D                     	;# 
   783  0E9E                     	;# 
   784  0E9F                     	;# 
   785  0FE4                     	;# 
   786  0FE5                     	;# 
   787  0FE6                     	;# 
   788  0FE7                     	;# 
   789  0FE8                     	;# 
   790  0FE9                     	;# 
   791  0FEA                     	;# 
   792  0FEB                     	;# 
   793  0FED                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0015                     	;# 
   814  0016                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001B                     	;# 
   821  001C                     	;# 
   822  008C                     	;# 
   823  008D                     	;# 
   824  008E                     	;# 
   825  0091                     	;# 
   826  0092                     	;# 
   827  0095                     	;# 
   828  0096                     	;# 
   829  0097                     	;# 
   830  0098                     	;# 
   831  0099                     	;# 
   832  009A                     	;# 
   833  009B                     	;# 
   834  009B                     	;# 
   835  009C                     	;# 
   836  009D                     	;# 
   837  009E                     	;# 
   838  009F                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  010E                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  011D                     	;# 
   852  018C                     	;# 
   853  018D                     	;# 
   854  018E                     	;# 
   855  0191                     	;# 
   856  0191                     	;# 
   857  0192                     	;# 
   858  0193                     	;# 
   859  0193                     	;# 
   860  0194                     	;# 
   861  0195                     	;# 
   862  0196                     	;# 
   863  0197                     	;# 
   864  0199                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019C                     	;# 
   869  019D                     	;# 
   870  019E                     	;# 
   871  019F                     	;# 
   872  020C                     	;# 
   873  020D                     	;# 
   874  0211                     	;# 
   875  0211                     	;# 
   876  0212                     	;# 
   877  0212                     	;# 
   878  0213                     	;# 
   879  0213                     	;# 
   880  0214                     	;# 
   881  0214                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0216                     	;# 
   886  0216                     	;# 
   887  0217                     	;# 
   888  0217                     	;# 
   889  0391                     	;# 
   890  0392                     	;# 
   891  0393                     	;# 
   892  0394                     	;# 
   893  0395                     	;# 
   894  0396                     	;# 
   895  039A                     	;# 
   896  039B                     	;# 
   897  0611                     	;# 
   898  0612                     	;# 
   899  0613                     	;# 
   900  0613                     	;# 
   901  0614                     	;# 
   902  0615                     	;# 
   903  0616                     	;# 
   904  0616                     	;# 
   905  0691                     	;# 
   906  0692                     	;# 
   907  0693                     	;# 
   908  0694                     	;# 
   909  0695                     	;# 
   910  0E8E                     	;# 
   911  0E8F                     	;# 
   912  0E90                     	;# 
   913  0E91                     	;# 
   914  0E92                     	;# 
   915  0E93                     	;# 
   916  0E94                     	;# 
   917  0E94                     	;# 
   918  0E95                     	;# 
   919  0E96                     	;# 
   920  0E97                     	;# 
   921  0E98                     	;# 
   922  0E99                     	;# 
   923  0E9A                     	;# 
   924  0E9B                     	;# 
   925  0E9C                     	;# 
   926  0E9D                     	;# 
   927  0E9E                     	;# 
   928  0E9F                     	;# 
   929  0FE4                     	;# 
   930  0FE5                     	;# 
   931  0FE6                     	;# 
   932  0FE7                     	;# 
   933  0FE8                     	;# 
   934  0FE9                     	;# 
   935  0FEA                     	;# 
   936  0FEB                     	;# 
   937  0FED                     	;# 
   938  0FEE                     	;# 
   939  0FEF                     	;# 
   940  0000                     	;# 
   941  0001                     	;# 
   942  0002                     	;# 
   943  0003                     	;# 
   944  0004                     	;# 
   945  0005                     	;# 
   946  0006                     	;# 
   947  0007                     	;# 
   948  0008                     	;# 
   949  0009                     	;# 
   950  000A                     	;# 
   951  000B                     	;# 
   952  000C                     	;# 
   953  000D                     	;# 
   954  000E                     	;# 
   955  0011                     	;# 
   956  0012                     	;# 
   957  0015                     	;# 
   958  0016                     	;# 
   959  0016                     	;# 
   960  0017                     	;# 
   961  0018                     	;# 
   962  0019                     	;# 
   963  001A                     	;# 
   964  001B                     	;# 
   965  001C                     	;# 
   966  008C                     	;# 
   967  008D                     	;# 
   968  008E                     	;# 
   969  0091                     	;# 
   970  0092                     	;# 
   971  0095                     	;# 
   972  0096                     	;# 
   973  0097                     	;# 
   974  0098                     	;# 
   975  0099                     	;# 
   976  009A                     	;# 
   977  009B                     	;# 
   978  009B                     	;# 
   979  009C                     	;# 
   980  009D                     	;# 
   981  009E                     	;# 
   982  009F                     	;# 
   983  010C                     	;# 
   984  010D                     	;# 
   985  010E                     	;# 
   986  0111                     	;# 
   987  0112                     	;# 
   988  0113                     	;# 
   989  0114                     	;# 
   990  0115                     	;# 
   991  0116                     	;# 
   992  0117                     	;# 
   993  0118                     	;# 
   994  0119                     	;# 
   995  011D                     	;# 
   996  018C                     	;# 
   997  018D                     	;# 
   998  018E                     	;# 
   999  0191                     	;# 
  1000  0191                     	;# 
  1001  0192                     	;# 
  1002  0193                     	;# 
  1003  0193                     	;# 
  1004  0194                     	;# 
  1005  0195                     	;# 
  1006  0196                     	;# 
  1007  0197                     	;# 
  1008  0199                     	;# 
  1009  019A                     	;# 
  1010  019B                     	;# 
  1011  019B                     	;# 
  1012  019C                     	;# 
  1013  019D                     	;# 
  1014  019E                     	;# 
  1015  019F                     	;# 
  1016  020C                     	;# 
  1017  020D                     	;# 
  1018  0211                     	;# 
  1019  0211                     	;# 
  1020  0212                     	;# 
  1021  0212                     	;# 
  1022  0213                     	;# 
  1023  0213                     	;# 
  1024  0214                     	;# 
  1025  0214                     	;# 
  1026  0215                     	;# 
  1027  0215                     	;# 
  1028  0215                     	;# 
  1029  0216                     	;# 
  1030  0216                     	;# 
  1031  0217                     	;# 
  1032  0217                     	;# 
  1033  0391                     	;# 
  1034  0392                     	;# 
  1035  0393                     	;# 
  1036  0394                     	;# 
  1037  0395                     	;# 
  1038  0396                     	;# 
  1039  039A                     	;# 
  1040  039B                     	;# 
  1041  0611                     	;# 
  1042  0612                     	;# 
  1043  0613                     	;# 
  1044  0613                     	;# 
  1045  0614                     	;# 
  1046  0615                     	;# 
  1047  0616                     	;# 
  1048  0616                     	;# 
  1049  0691                     	;# 
  1050  0692                     	;# 
  1051  0693                     	;# 
  1052  0694                     	;# 
  1053  0695                     	;# 
  1054  0E8E                     	;# 
  1055  0E8F                     	;# 
  1056  0E90                     	;# 
  1057  0E91                     	;# 
  1058  0E92                     	;# 
  1059  0E93                     	;# 
  1060  0E94                     	;# 
  1061  0E94                     	;# 
  1062  0E95                     	;# 
  1063  0E96                     	;# 
  1064  0E97                     	;# 
  1065  0E98                     	;# 
  1066  0E99                     	;# 
  1067  0E9A                     	;# 
  1068  0E9B                     	;# 
  1069  0E9C                     	;# 
  1070  0E9D                     	;# 
  1071  0E9E                     	;# 
  1072  0E9F                     	;# 
  1073  0FE4                     	;# 
  1074  0FE5                     	;# 
  1075  0FE6                     	;# 
  1076  0FE7                     	;# 
  1077  0FE8                     	;# 
  1078  0FE9                     	;# 
  1079  0FEA                     	;# 
  1080  0FEB                     	;# 
  1081  0FED                     	;# 
  1082  0FEE                     	;# 
  1083  0FEF                     	;# 
  1084  0000                     	;# 
  1085  0001                     	;# 
  1086  0002                     	;# 
  1087  0003                     	;# 
  1088  0004                     	;# 
  1089  0005                     	;# 
  1090  0006                     	;# 
  1091  0007                     	;# 
  1092  0008                     	;# 
  1093  0009                     	;# 
  1094  000A                     	;# 
  1095  000B                     	;# 
  1096  000C                     	;# 
  1097  000D                     	;# 
  1098  000E                     	;# 
  1099  0011                     	;# 
  1100  0012                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  008C                     	;# 
  1111  008D                     	;# 
  1112  008E                     	;# 
  1113  0091                     	;# 
  1114  0092                     	;# 
  1115  0095                     	;# 
  1116  0096                     	;# 
  1117  0097                     	;# 
  1118  0098                     	;# 
  1119  0099                     	;# 
  1120  009A                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  009F                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0113                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0117                     	;# 
  1137  0118                     	;# 
  1138  0119                     	;# 
  1139  011D                     	;# 
  1140  018C                     	;# 
  1141  018D                     	;# 
  1142  018E                     	;# 
  1143  0191                     	;# 
  1144  0191                     	;# 
  1145  0192                     	;# 
  1146  0193                     	;# 
  1147  0193                     	;# 
  1148  0194                     	;# 
  1149  0195                     	;# 
  1150  0196                     	;# 
  1151  0197                     	;# 
  1152  0199                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019C                     	;# 
  1157  019D                     	;# 
  1158  019E                     	;# 
  1159  019F                     	;# 
  1160  020C                     	;# 
  1161  020D                     	;# 
  1162  0211                     	;# 
  1163  0211                     	;# 
  1164  0212                     	;# 
  1165  0212                     	;# 
  1166  0213                     	;# 
  1167  0213                     	;# 
  1168  0214                     	;# 
  1169  0214                     	;# 
  1170  0215                     	;# 
  1171  0215                     	;# 
  1172  0215                     	;# 
  1173  0216                     	;# 
  1174  0216                     	;# 
  1175  0217                     	;# 
  1176  0217                     	;# 
  1177  0391                     	;# 
  1178  0392                     	;# 
  1179  0393                     	;# 
  1180  0394                     	;# 
  1181  0395                     	;# 
  1182  0396                     	;# 
  1183  039A                     	;# 
  1184  039B                     	;# 
  1185  0611                     	;# 
  1186  0612                     	;# 
  1187  0613                     	;# 
  1188  0613                     	;# 
  1189  0614                     	;# 
  1190  0615                     	;# 
  1191  0616                     	;# 
  1192  0616                     	;# 
  1193  0691                     	;# 
  1194  0692                     	;# 
  1195  0693                     	;# 
  1196  0694                     	;# 
  1197  0695                     	;# 
  1198  0E8E                     	;# 
  1199  0E8F                     	;# 
  1200  0E90                     	;# 
  1201  0E91                     	;# 
  1202  0E92                     	;# 
  1203  0E93                     	;# 
  1204  0E94                     	;# 
  1205  0E94                     	;# 
  1206  0E95                     	;# 
  1207  0E96                     	;# 
  1208  0E97                     	;# 
  1209  0E98                     	;# 
  1210  0E99                     	;# 
  1211  0E9A                     	;# 
  1212  0E9B                     	;# 
  1213  0E9C                     	;# 
  1214  0E9D                     	;# 
  1215  0E9E                     	;# 
  1216  0E9F                     	;# 
  1217  0FE4                     	;# 
  1218  0FE5                     	;# 
  1219  0FE6                     	;# 
  1220  0FE7                     	;# 
  1221  0FE8                     	;# 
  1222  0FE9                     	;# 
  1223  0FEA                     	;# 
  1224  0FEB                     	;# 
  1225  0FED                     	;# 
  1226  0FEE                     	;# 
  1227  0FEF                     	;# 
  1228  0000                     	;# 
  1229  0001                     	;# 
  1230  0002                     	;# 
  1231  0003                     	;# 
  1232  0004                     	;# 
  1233  0005                     	;# 
  1234  0006                     	;# 
  1235  0007                     	;# 
  1236  0008                     	;# 
  1237  0009                     	;# 
  1238  000A                     	;# 
  1239  000B                     	;# 
  1240  000C                     	;# 
  1241  000D                     	;# 
  1242  000E                     	;# 
  1243  0011                     	;# 
  1244  0012                     	;# 
  1245  0015                     	;# 
  1246  0016                     	;# 
  1247  0016                     	;# 
  1248  0017                     	;# 
  1249  0018                     	;# 
  1250  0019                     	;# 
  1251  001A                     	;# 
  1252  001B                     	;# 
  1253  001C                     	;# 
  1254  008C                     	;# 
  1255  008D                     	;# 
  1256  008E                     	;# 
  1257  0091                     	;# 
  1258  0092                     	;# 
  1259  0095                     	;# 
  1260  0096                     	;# 
  1261  0097                     	;# 
  1262  0098                     	;# 
  1263  0099                     	;# 
  1264  009A                     	;# 
  1265  009B                     	;# 
  1266  009B                     	;# 
  1267  009C                     	;# 
  1268  009D                     	;# 
  1269  009E                     	;# 
  1270  009F                     	;# 
  1271  010C                     	;# 
  1272  010D                     	;# 
  1273  010E                     	;# 
  1274  0111                     	;# 
  1275  0112                     	;# 
  1276  0113                     	;# 
  1277  0114                     	;# 
  1278  0115                     	;# 
  1279  0116                     	;# 
  1280  0117                     	;# 
  1281  0118                     	;# 
  1282  0119                     	;# 
  1283  011D                     	;# 
  1284  018C                     	;# 
  1285  018D                     	;# 
  1286  018E                     	;# 
  1287  0191                     	;# 
  1288  0191                     	;# 
  1289  0192                     	;# 
  1290  0193                     	;# 
  1291  0193                     	;# 
  1292  0194                     	;# 
  1293  0195                     	;# 
  1294  0196                     	;# 
  1295  0197                     	;# 
  1296  0199                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019C                     	;# 
  1301  019D                     	;# 
  1302  019E                     	;# 
  1303  019F                     	;# 
  1304  020C                     	;# 
  1305  020D                     	;# 
  1306  0211                     	;# 
  1307  0211                     	;# 
  1308  0212                     	;# 
  1309  0212                     	;# 
  1310  0213                     	;# 
  1311  0213                     	;# 
  1312  0214                     	;# 
  1313  0214                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0215                     	;# 
  1317  0216                     	;# 
  1318  0216                     	;# 
  1319  0217                     	;# 
  1320  0217                     	;# 
  1321  0391                     	;# 
  1322  0392                     	;# 
  1323  0393                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  039A                     	;# 
  1328  039B                     	;# 
  1329  0611                     	;# 
  1330  0612                     	;# 
  1331  0613                     	;# 
  1332  0613                     	;# 
  1333  0614                     	;# 
  1334  0615                     	;# 
  1335  0616                     	;# 
  1336  0616                     	;# 
  1337  0691                     	;# 
  1338  0692                     	;# 
  1339  0693                     	;# 
  1340  0694                     	;# 
  1341  0695                     	;# 
  1342  0E8E                     	;# 
  1343  0E8F                     	;# 
  1344  0E90                     	;# 
  1345  0E91                     	;# 
  1346  0E92                     	;# 
  1347  0E93                     	;# 
  1348  0E94                     	;# 
  1349  0E94                     	;# 
  1350  0E95                     	;# 
  1351  0E96                     	;# 
  1352  0E97                     	;# 
  1353  0E98                     	;# 
  1354  0E99                     	;# 
  1355  0E9A                     	;# 
  1356  0E9B                     	;# 
  1357  0E9C                     	;# 
  1358  0E9D                     	;# 
  1359  0E9E                     	;# 
  1360  0E9F                     	;# 
  1361  0FE4                     	;# 
  1362  0FE5                     	;# 
  1363  0FE6                     	;# 
  1364  0FE7                     	;# 
  1365  0FE8                     	;# 
  1366  0FE9                     	;# 
  1367  0FEA                     	;# 
  1368  0FEB                     	;# 
  1369  0FED                     	;# 
  1370  0FEE                     	;# 
  1371  0FEF                     	;# 
  1372  0000                     	;# 
  1373  0001                     	;# 
  1374  0002                     	;# 
  1375  0003                     	;# 
  1376  0004                     	;# 
  1377  0005                     	;# 
  1378  0006                     	;# 
  1379  0007                     	;# 
  1380  0008                     	;# 
  1381  0009                     	;# 
  1382  000A                     	;# 
  1383  000B                     	;# 
  1384  000C                     	;# 
  1385  000D                     	;# 
  1386  000E                     	;# 
  1387  0011                     	;# 
  1388  0012                     	;# 
  1389  0015                     	;# 
  1390  0016                     	;# 
  1391  0016                     	;# 
  1392  0017                     	;# 
  1393  0018                     	;# 
  1394  0019                     	;# 
  1395  001A                     	;# 
  1396  001B                     	;# 
  1397  001C                     	;# 
  1398  008C                     	;# 
  1399  008D                     	;# 
  1400  008E                     	;# 
  1401  0091                     	;# 
  1402  0092                     	;# 
  1403  0095                     	;# 
  1404  0096                     	;# 
  1405  0097                     	;# 
  1406  0098                     	;# 
  1407  0099                     	;# 
  1408  009A                     	;# 
  1409  009B                     	;# 
  1410  009B                     	;# 
  1411  009C                     	;# 
  1412  009D                     	;# 
  1413  009E                     	;# 
  1414  009F                     	;# 
  1415  010C                     	;# 
  1416  010D                     	;# 
  1417  010E                     	;# 
  1418  0111                     	;# 
  1419  0112                     	;# 
  1420  0113                     	;# 
  1421  0114                     	;# 
  1422  0115                     	;# 
  1423  0116                     	;# 
  1424  0117                     	;# 
  1425  0118                     	;# 
  1426  0119                     	;# 
  1427  011D                     	;# 
  1428  018C                     	;# 
  1429  018D                     	;# 
  1430  018E                     	;# 
  1431  0191                     	;# 
  1432  0191                     	;# 
  1433  0192                     	;# 
  1434  0193                     	;# 
  1435  0193                     	;# 
  1436  0194                     	;# 
  1437  0195                     	;# 
  1438  0196                     	;# 
  1439  0197                     	;# 
  1440  0199                     	;# 
  1441  019A                     	;# 
  1442  019B                     	;# 
  1443  019B                     	;# 
  1444  019C                     	;# 
  1445  019D                     	;# 
  1446  019E                     	;# 
  1447  019F                     	;# 
  1448  020C                     	;# 
  1449  020D                     	;# 
  1450  0211                     	;# 
  1451  0211                     	;# 
  1452  0212                     	;# 
  1453  0212                     	;# 
  1454  0213                     	;# 
  1455  0213                     	;# 
  1456  0214                     	;# 
  1457  0214                     	;# 
  1458  0215                     	;# 
  1459  0215                     	;# 
  1460  0215                     	;# 
  1461  0216                     	;# 
  1462  0216                     	;# 
  1463  0217                     	;# 
  1464  0217                     	;# 
  1465  0391                     	;# 
  1466  0392                     	;# 
  1467  0393                     	;# 
  1468  0394                     	;# 
  1469  0395                     	;# 
  1470  0396                     	;# 
  1471  039A                     	;# 
  1472  039B                     	;# 
  1473  0611                     	;# 
  1474  0612                     	;# 
  1475  0613                     	;# 
  1476  0613                     	;# 
  1477  0614                     	;# 
  1478  0615                     	;# 
  1479  0616                     	;# 
  1480  0616                     	;# 
  1481  0691                     	;# 
  1482  0692                     	;# 
  1483  0693                     	;# 
  1484  0694                     	;# 
  1485  0695                     	;# 
  1486  0E8E                     	;# 
  1487  0E8F                     	;# 
  1488  0E90                     	;# 
  1489  0E91                     	;# 
  1490  0E92                     	;# 
  1491  0E93                     	;# 
  1492  0E94                     	;# 
  1493  0E94                     	;# 
  1494  0E95                     	;# 
  1495  0E96                     	;# 
  1496  0E97                     	;# 
  1497  0E98                     	;# 
  1498  0E99                     	;# 
  1499  0E9A                     	;# 
  1500  0E9B                     	;# 
  1501  0E9C                     	;# 
  1502  0E9D                     	;# 
  1503  0E9E                     	;# 
  1504  0E9F                     	;# 
  1505  0FE4                     	;# 
  1506  0FE5                     	;# 
  1507  0FE6                     	;# 
  1508  0FE7                     	;# 
  1509  0FE8                     	;# 
  1510  0FE9                     	;# 
  1511  0FEA                     	;# 
  1512  0FEB                     	;# 
  1513  0FED                     	;# 
  1514  0FEE                     	;# 
  1515  0FEF                     	;# 
  1516                           
  1517                           	psect	stringtext1
  1518  10CA                     __pstringtext1:	
  1519  10CA                     _USB_SD_Ptr:	
  1520  10CA  34D0               	retlw	low (_sd000| (0+32768))
  1521  10CB  3490               	retlw	high (_sd000| (0+32768))
  1522  10CC  343F               	retlw	low (_sd001| (0+32768))
  1523  10CD  3490               	retlw	high (_sd001| (0+32768))
  1524  10CE  349C               	retlw	low (_sd002| (0+32768))
  1525  10CF  3490               	retlw	high (_sd002| (0+32768))
  1526  10D0                     __end_of_USB_SD_Ptr:	
  1527                           
  1528                           	psect	stringtext2
  1529  10D4                     __pstringtext2:	
  1530  10D4                     _USB_CD_Ptr:	
  1531  10D4  3473               	retlw	low (_configDescriptor1| (0+32768))
  1532  10D5  3490               	retlw	high (_configDescriptor1| (0+32768))
  1533  10D6                     __end_of_USB_CD_Ptr:	
  1534                           
  1535                           	psect	stringtext3
  1536  1000                     __pstringtext3:	
  1537  1000                     _hid_rpt01:	
  1538  1000  3405               	retlw	5
  1539  1001  3401               	retlw	1
  1540  1002  3409               	retlw	9
  1541  1003  3406               	retlw	6
  1542  1004  34A1               	retlw	161
  1543  1005  3401               	retlw	1
  1544  1006  3405               	retlw	5
  1545  1007  3407               	retlw	7
  1546  1008  3419               	retlw	25
  1547  1009  34E0               	retlw	224
  1548  100A  3429               	retlw	41
  1549  100B  34E7               	retlw	231
  1550  100C  3415               	retlw	21
  1551  100D  3400               	retlw	0
  1552  100E  3425               	retlw	37
  1553  100F  3401               	retlw	1
  1554  1010  3475               	retlw	117
  1555  1011  3401               	retlw	1
  1556  1012  3495               	retlw	149
  1557  1013  3408               	retlw	8
  1558  1014  3481               	retlw	129
  1559  1015  3402               	retlw	2
  1560  1016  3495               	retlw	149
  1561  1017  3401               	retlw	1
  1562  1018  3475               	retlw	117
  1563  1019  3408               	retlw	8
  1564  101A  3481               	retlw	129
  1565  101B  3403               	retlw	3
  1566  101C  3495               	retlw	149
  1567  101D  3405               	retlw	5
  1568  101E  3475               	retlw	117
  1569  101F  3401               	retlw	1
  1570  1020  3405               	retlw	5
  1571  1021  3408               	retlw	8
  1572  1022  3419               	retlw	25
  1573  1023  3401               	retlw	1
  1574  1024  3429               	retlw	41
  1575  1025  3405               	retlw	5
  1576  1026  3491               	retlw	145
  1577  1027  3402               	retlw	2
  1578  1028  3495               	retlw	149
  1579  1029  3401               	retlw	1
  1580  102A  3475               	retlw	117
  1581  102B  3403               	retlw	3
  1582  102C  3491               	retlw	145
  1583  102D  3403               	retlw	3
  1584  102E  3495               	retlw	149
  1585  102F  3406               	retlw	6
  1586  1030  3475               	retlw	117
  1587  1031  3408               	retlw	8
  1588  1032  3415               	retlw	21
  1589  1033  3400               	retlw	0
  1590  1034  3425               	retlw	37
  1591  1035  3465               	retlw	101
  1592  1036  3405               	retlw	5
  1593  1037  3407               	retlw	7
  1594  1038  3419               	retlw	25
  1595  1039  3400               	retlw	0
  1596  103A  3429               	retlw	41
  1597  103B  3465               	retlw	101
  1598  103C  3481               	retlw	129
  1599  103D  3400               	retlw	0
  1600  103E  34C0               	retlw	192
  1601  103F                     __end_of_hid_rpt01:	
  1602                           
  1603                           	psect	stringtext4
  1604  103F                     __pstringtext4:	
  1605  103F                     _sd001:	
  1606  103F  3434               	retlw	52
  1607  1040  3403               	retlw	3
  1608  1041  344D               	retlw	77
  1609  1042  3400               	retlw	0
  1610  1043  3469               	retlw	105
  1611  1044  3400               	retlw	0
  1612  1045  3463               	retlw	99
  1613  1046  3400               	retlw	0
  1614  1047  3472               	retlw	114
  1615  1048  3400               	retlw	0
  1616  1049  346F               	retlw	111
  1617  104A  3400               	retlw	0
  1618  104B  3463               	retlw	99
  1619  104C  3400               	retlw	0
  1620  104D  3468               	retlw	104
  1621  104E  3400               	retlw	0
  1622  104F  3469               	retlw	105
  1623  1050  3400               	retlw	0
  1624  1051  3470               	retlw	112
  1625  1052  3400               	retlw	0
  1626  1053  3420               	retlw	32
  1627  1054  3400               	retlw	0
  1628  1055  3454               	retlw	84
  1629  1056  3400               	retlw	0
  1630  1057  3465               	retlw	101
  1631  1058  3400               	retlw	0
  1632  1059  3463               	retlw	99
  1633  105A  3400               	retlw	0
  1634  105B  3468               	retlw	104
  1635  105C  3400               	retlw	0
  1636  105D  346E               	retlw	110
  1637  105E  3400               	retlw	0
  1638  105F  346F               	retlw	111
  1639  1060  3400               	retlw	0
  1640  1061  346C               	retlw	108
  1641  1062  3400               	retlw	0
  1642  1063  346F               	retlw	111
  1643  1064  3400               	retlw	0
  1644  1065  3467               	retlw	103
  1645  1066  3400               	retlw	0
  1646  1067  3479               	retlw	121
  1647  1068  3400               	retlw	0
  1648  1069  3420               	retlw	32
  1649  106A  3400               	retlw	0
  1650  106B  3449               	retlw	73
  1651  106C  3400               	retlw	0
  1652  106D  346E               	retlw	110
  1653  106E  3400               	retlw	0
  1654  106F  3463               	retlw	99
  1655  1070  3400               	retlw	0
  1656  1071  342E               	retlw	46
  1657  1072  3400               	retlw	0
  1658  1073                     __end_of_sd001:	
  1659                           
  1660                           	psect	stringtext5
  1661  1073                     __pstringtext5:	
  1662  1073                     _configDescriptor1:	
  1663  1073  3409               	retlw	9
  1664  1074  3402               	retlw	2
  1665  1075  3429               	retlw	41
  1666  1076  3400               	retlw	0
  1667  1077  3401               	retlw	1
  1668  1078  3401               	retlw	1
  1669  1079  3400               	retlw	0
  1670  107A  34C0               	retlw	192
  1671  107B  3432               	retlw	50
  1672  107C  3409               	retlw	9
  1673  107D  3404               	retlw	4
  1674  107E  3400               	retlw	0
  1675  107F  3400               	retlw	0
  1676  1080  3402               	retlw	2
  1677  1081  3403               	retlw	3
  1678  1082  3401               	retlw	1
  1679  1083  3401               	retlw	1
  1680  1084  3400               	retlw	0
  1681  1085  3409               	retlw	9
  1682  1086  3421               	retlw	33
  1683  1087  3411               	retlw	17
  1684  1088  3401               	retlw	1
  1685  1089  3400               	retlw	0
  1686  108A  3401               	retlw	1
  1687  108B  3422               	retlw	34
  1688  108C  343F               	retlw	63
  1689  108D  3400               	retlw	0
  1690  108E  3407               	retlw	7
  1691  108F  3405               	retlw	5
  1692  1090  3481               	retlw	129
  1693  1091  3403               	retlw	3
  1694  1092  3408               	retlw	8
  1695  1093  3400               	retlw	0
  1696  1094  3401               	retlw	1
  1697  1095  3407               	retlw	7
  1698  1096  3405               	retlw	5
  1699  1097  3401               	retlw	1
  1700  1098  3403               	retlw	3
  1701  1099  3408               	retlw	8
  1702  109A  3400               	retlw	0
  1703  109B  3401               	retlw	1
  1704  109C                     __end_of_configDescriptor1:	
  1705                           
  1706                           	psect	stringtext6
  1707  109C                     __pstringtext6:	
  1708  109C                     _sd002:	
  1709  109C  341C               	retlw	28
  1710  109D  3403               	retlw	3
  1711  109E  344B               	retlw	75
  1712  109F  3400               	retlw	0
  1713  10A0  3465               	retlw	101
  1714  10A1  3400               	retlw	0
  1715  10A2  3479               	retlw	121
  1716  10A3  3400               	retlw	0
  1717  10A4  3462               	retlw	98
  1718  10A5  3400               	retlw	0
  1719  10A6  346F               	retlw	111
  1720  10A7  3400               	retlw	0
  1721  10A8  3461               	retlw	97
  1722  10A9  3400               	retlw	0
  1723  10AA  3472               	retlw	114
  1724  10AB  3400               	retlw	0
  1725  10AC  3464               	retlw	100
  1726  10AD  3400               	retlw	0
  1727  10AE  3420               	retlw	32
  1728  10AF  3400               	retlw	0
  1729  10B0  3444               	retlw	68
  1730  10B1  3400               	retlw	0
  1731  10B2  3465               	retlw	101
  1732  10B3  3400               	retlw	0
  1733  10B4  346D               	retlw	109
  1734  10B5  3400               	retlw	0
  1735  10B6  346F               	retlw	111
  1736  10B7  3400               	retlw	0
  1737  10B8                     __end_of_sd002:	
  1738                           
  1739                           	psect	stringtext7
  1740  10B8                     __pstringtext7:	
  1741  10B8                     _device_dsc:	
  1742  10B8  3412               	retlw	18
  1743  10B9  3401               	retlw	1
  1744  10BA  3400               	retlw	0
  1745  10BB  3402               	retlw	2
  1746  10BC  3400               	retlw	0
  1747  10BD  3400               	retlw	0
  1748  10BE  3400               	retlw	0
  1749  10BF  3408               	retlw	8
  1750  10C0  34D8               	retlw	216
  1751  10C1  3404               	retlw	4
  1752  10C2  3455               	retlw	85
  1753  10C3  3400               	retlw	0
  1754  10C4  3401               	retlw	1
  1755  10C5  3400               	retlw	0
  1756  10C6  3401               	retlw	1
  1757  10C7  3402               	retlw	2
  1758  10C8  3400               	retlw	0
  1759  10C9  3401               	retlw	1
  1760  10CA                     __end_of_device_dsc:	
  1761                           
  1762                           	psect	stringtext8
  1763  10D0                     __pstringtext8:	
  1764  10D0                     _sd000:	
  1765  10D0  3404               	retlw	4
  1766  10D1  3403               	retlw	3
  1767  10D2  3409               	retlw	9
  1768  10D3  3404               	retlw	4
  1769  10D4                     __end_of_sd000:	
  1770  000B                     _INTCONbits	set	11
  1771  0012                     _PIR2bits	set	18
  1772  000D                     _PORTBbits	set	13
  1773  0099                     _OSCCON	set	153
  1774  0092                     _PIE2bits	set	146
  1775  008E                     _TRISCbits	set	142
  1776  008D                     _TRISBbits	set	141
  1777  0095                     _OPTION_REGbits	set	149
  1778  010E                     _LATCbits	set	270
  1779  018D                     _ANSELBbits	set	397
  1780  020D                     _WPUBbits	set	525
  1781  039B                     _ACTCON	set	923
  1782  0E98                     _UEP0bits	set	3736
  1783  0E8E                     _UCON	set	3726
  1784  0E8F                     _USTAT	set	3727
  1785  0E92                     _UIEbits	set	3730
  1786  0E90                     _UIRbits	set	3728
  1787  0E96                     _UADDR	set	3734
  1788  0E8E                     _UCONbits	set	3726
  1789  0E92                     _UIE	set	3730
  1790  0E97                     _UEIE	set	3735
  1791  0E91                     _UCFG	set	3729
  1792  0E90                     _UIR	set	3728
  1793  0E93                     _UEIR	set	3731
  1794  0E99                     _UEP1	set	3737
  1795  0E98                     _UEP0	set	3736
  1796                           
  1797                           ; #config settings
  1798  0000                     
  1799                           	psect	cinit
  1800  000C                     start_initialization:	
  1801  000C                     __initialization:	
  1802                           
  1803                           ; Clear objects allocated to BANK0
  1804  000C  3050               	movlw	low __pbssBANK0
  1805  000D  0084               	movwf	4
  1806  000E  3000               	movlw	high __pbssBANK0
  1807  000F  0085               	movwf	5
  1808  0010  300F               	movlw	15
  1809  0011  3186  264E  3180   	fcall	clear_ram0
  1810                           
  1811                           ; Clear objects allocated to BANK1
  1812  0014  30A8               	movlw	low __pbssBANK1
  1813  0015  0084               	movwf	4
  1814  0016  3000               	movlw	high __pbssBANK1
  1815  0017  0085               	movwf	5
  1816  0018  3036               	movlw	54
  1817  0019  3186  264E  3180   	fcall	clear_ram0
  1818                           
  1819                           ; Clear objects allocated to BANK2
  1820  001C  3021               	movlw	low __pbssBANK2
  1821  001D  0084               	movwf	4
  1822  001E  3001               	movlw	high __pbssBANK2
  1823  001F  0085               	movwf	5
  1824  0020  300C               	movlw	12
  1825  0021  3186  264E  3180   	fcall	clear_ram0
  1826  0024                     end_of_initialization:	
  1827                           ;End of C runtime variable initialization code
  1828                           
  1829  0024                     __end_of__initialization:	
  1830  0024  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1831  0025  0020               	movlb	0
  1832  0026  2827               	ljmp	_main	;jump to C main() function
  1833  0027                     __pmaintext:	
  1834 ;;
  1835 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1836 ;;
  1837 ;; *************** function _main *****************
  1838 ;; Defined at:
  1839 ;;		line 38 in file "demo_src/main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  2  743[None  ] int 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : B1F/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels required when called:   13
  1859 ;; This function calls:
  1860 ;;		_APP_KeyboardTasks
  1861 ;;		_SYSTEM_Initialize
  1862 ;;		_USBDeviceAttach
  1863 ;;		_USBDeviceInit
  1864 ;; This function is called by:
  1865 ;;		Startup code after reset
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           
  1870                           ;psect for function _main
  1871  0027                     _main:	
  1872                           
  1873                           ;main.c: 40: SYSTEM_Initialize( SYSTEM_STATE_USB_START );
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1877  0027  3000               	movlw	0
  1878  0028  217E  3180         	fcall	_SYSTEM_Initialize
  1879                           
  1880                           ;main.c: 42: USBDeviceInit();
  1881  002A  21F1  3180         	fcall	_USBDeviceInit
  1882                           
  1883                           ;main.c: 43: USBDeviceAttach();
  1884  002C  21D8  3180         	fcall	_USBDeviceAttach
  1885  002E                     l744:	
  1886                           ;main.c: 45: while(1)
  1887                           
  1888                           
  1889                           ;main.c: 46: {
  1890                           ;main.c: 47: ;
  1891                           ;main.c: 65: APP_KeyboardTasks();
  1892  002E  2031  3180         	fcall	_APP_KeyboardTasks
  1893  0030  282E               	goto	l744
  1894  0031                     __end_of_main:	
  1895  0031                     __ptext6:	
  1896 ;; *************** function _APP_KeyboardTasks *****************
  1897 ;; Defined at:
  1898 ;;		line 294 in file "demo_src/app_device_keyboard.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  TimeDeltaMil    2   13[BANK1 ] int 
  1903 ;;  keynum          2    0        int 
  1904 ;;  i               1   15[BANK1 ] unsigned char 
  1905 ;;  needToSendNe    1   12[BANK1 ] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      void 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;Total ram usage:        5 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:   12
  1922 ;; This function calls:
  1923 ;;		_APP_KeyboardProcessOutputReport
  1924 ;;		_BUTTON_IsPressed
  1925 ;;		_USBTransferOnePacket
  1926 ;;		_memset
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _APP_KeyboardTasks
  1934  0031                     _APP_KeyboardTasks:	
  1935                           
  1936                           ;app_device_keyboard.c: 304: if( USBDeviceState < CONFIGURED_STATE )
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _APP_KeyboardTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1940  0031  3020               	movlw	32
  1941  0032  0020               	movlb	0	; select bank0
  1942  0033  025B               	subwf	_USBDeviceState,w	;volatile
  1943  0034  1C03               	btfss	3,0
  1944  0035  0008               	return
  1945                           
  1946                           ;app_device_keyboard.c: 307: }
  1947                           ;app_device_keyboard.c: 313: if( UCONbits.SUSPND== 1 )
  1948  0036  003D               	movlb	29	; select bank29
  1949  0037  1C8E               	btfss	14,1	;volatile
  1950  0038  2843               	goto	l672
  1951                           
  1952                           ;app_device_keyboard.c: 314: {
  1953                           ;app_device_keyboard.c: 317: if(BUTTON_IsPressed(BUTTON_S1) == 0)
  1954  0039  3001               	movlw	1
  1955  003A  2A94               	ljmp	_BUTTON_IsPressed
  1956  003B                     l4907:	
  1957                           
  1958                           ;app_device_keyboard.c: 329: {
  1959                           ;app_device_keyboard.c: 330: LocalSOFCount = SOFCounter;
  1960  003B  0020               	movlb	0	; select bank0
  1961  003C  0853               	movf	_SOFCounter+1,w	;volatile
  1962  003D  0021               	movlb	1	; select bank1
  1963  003E  00C5               	movwf	(_LocalSOFCount+1)^(0+128)
  1964  003F  0020               	movlb	0	; select bank0
  1965  0040  0852               	movf	_SOFCounter,w	;volatile
  1966  0041  0021               	movlb	1	; select bank1
  1967  0042  00C4               	movwf	_LocalSOFCount^(0+128)
  1968  0043                     l672:	
  1969  0043  0020               	movlb	0	; select bank0
  1970  0044  0853               	movf	_SOFCounter+1,w	;volatile
  1971  0045  0021               	movlb	1	; select bank1
  1972  0046  0645               	xorwf	(_LocalSOFCount+1)^(0+128),w
  1973  0047  1D03               	skipz
  1974  0048  284D               	goto	u3495
  1975  0049  0020               	movlb	0	; select bank0
  1976  004A  0852               	movf	_SOFCounter,w	;volatile
  1977  004B  0021               	movlb	1	; select bank1
  1978  004C  0644               	xorwf	_LocalSOFCount^(0+128),w
  1979  004D                     u3495:	
  1980  004D  1D03               	skipz
  1981  004E  283B               	goto	l4907
  1982                           
  1983                           ;app_device_keyboard.c: 331: }
  1984                           ;app_device_keyboard.c: 335: TimeDeltaMilliseconds = LocalSOFCount - OldSOFCount;
  1985  004F  0845               	movf	(_LocalSOFCount+1)^(0+128),w
  1986  0050  00EC               	movwf	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128)
  1987  0051  0844               	movf	_LocalSOFCount^(0+128),w
  1988  0052  00EB               	movwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128)
  1989  0053  0842               	movf	_OldSOFCount^(0+128),w
  1990  0054  02EB               	subwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128),f
  1991  0055  0843               	movf	(_OldSOFCount+1)^(0+128),w
  1992  0056  3BEC               	subwfb	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),f
  1993                           
  1994                           ;app_device_keyboard.c: 337: if(TimeDeltaMilliseconds < 0)
  1995  0057  1FEC               	btfss	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),7
  1996  0058  2865               	goto	l675
  1997                           
  1998                           ;app_device_keyboard.c: 338: {
  1999                           ;app_device_keyboard.c: 339: TimeDeltaMilliseconds = (32767 - OldSOFCount) + LocalSOFCou
      +                          nt;
  2000  0059  0845               	movf	(_LocalSOFCount+1)^(0+128),w
  2001  005A  00EC               	movwf	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128)
  2002  005B  0844               	movf	_LocalSOFCount^(0+128),w
  2003  005C  00EB               	movwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128)
  2004  005D  0842               	movf	_OldSOFCount^(0+128),w
  2005  005E  02EB               	subwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128),f
  2006  005F  0843               	movf	(_OldSOFCount+1)^(0+128),w
  2007  0060  3BEC               	subwfb	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),f
  2008  0061  30FF               	movlw	255
  2009  0062  07EB               	addwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128),f
  2010  0063  307F               	movlw	127
  2011  0064  3DEC               	addwfc	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),f
  2012  0065                     l675:	
  2013                           
  2014                           ;app_device_keyboard.c: 340: }
  2015                           ;app_device_keyboard.c: 346: if(TimeDeltaMilliseconds > 5000)
  2016  0065  086C               	movf	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),w
  2017  0066  3A80               	xorlw	128
  2018  0067  00E9               	movwf	??_APP_KeyboardTasks^(0+128)
  2019  0068  3093               	movlw	147
  2020  0069  0269               	subwf	??_APP_KeyboardTasks^(0+128),w
  2021  006A  1D03               	skipz
  2022  006B  286E               	goto	u3515
  2023  006C  3089               	movlw	137
  2024  006D  026B               	subwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128),w
  2025  006E                     u3515:	
  2026  006E  1C03               	skipc
  2027  006F  2877               	goto	l676
  2028                           
  2029                           ;app_device_keyboard.c: 347: {
  2030                           ;app_device_keyboard.c: 348: OldSOFCount = LocalSOFCount - 5000;
  2031  0070  0021               	movlb	1	; select bank1
  2032  0071  0844               	movf	_LocalSOFCount^(0+128),w
  2033  0072  3E78               	addlw	120
  2034  0073  00C2               	movwf	_OldSOFCount^(0+128)
  2035  0074  30EC               	movlw	236
  2036  0075  3D45               	addwfc	(_LocalSOFCount+1)^(0+128),w
  2037  0076  00C3               	movwf	(_OldSOFCount+1)^(0+128)
  2038  0077                     l676:	
  2039                           
  2040                           ;app_device_keyboard.c: 349: }
  2041                           ;app_device_keyboard.c: 354: if(((keyboard.lastINTransmission != 0x0000) && ((*(volatile
      +                           uint8_t*)keyboard.lastINTransmission & 0x80) != 0x00)) == 0)
  2042  0077  0021               	movlb	1	; select bank1
  2043  0078  0834               	movf	_keyboard^(0+128),w
  2044  0079  0435               	iorwf	(_keyboard+1)^(0+128),w
  2045  007A  1903               	btfsc	3,2
  2046  007B  2882               	goto	l4919
  2047  007C  0834               	movf	_keyboard^(0+128),w
  2048  007D  0086               	movwf	6
  2049  007E  0835               	movf	(_keyboard+1)^(0+128),w
  2050  007F  0087               	movwf	7
  2051  0080  1B81               	btfsc	1,7
  2052  0081  28D6               	goto	l4951
  2053  0082                     l4919:	
  2054  0082  3008               	movlw	8
  2055                           
  2056                           ;app_device_keyboard.c: 355: {
  2057                           ;app_device_keyboard.c: 357: memset(&inputReport, 0, sizeof(inputReport));
  2058  0083  01DE               	clrf	memset@c^(0+128)
  2059  0084  01DF               	clrf	(memset@c+1)^(0+128)
  2060  0085  00E0               	movwf	memset@n^(0+128)
  2061  0086  30A0               	movlw	160
  2062  0087  01E1               	clrf	(memset@n+1)^(0+128)
  2063  0088  216C  3180         	fcall	_memset
  2064                           
  2065                           ;app_device_keyboard.c: 376: needToSendNewReportPacket = 0;
  2066  008A  01EA               	clrf	APP_KeyboardTasks@needToSendNewReportPacket^(0+128)
  2067                           
  2068                           ;app_device_keyboard.c: 377: for(i = 0; i < sizeof(inputReport); i++)
  2069  008B  01ED               	clrf	APP_KeyboardTasks@i^(0+128)
  2070  008C                     l4929:	
  2071                           
  2072                           ;app_device_keyboard.c: 378: {
  2073                           ;app_device_keyboard.c: 379: if(*((uint8_t*)&oldInputReport + i) != *((uint8_t*)&inputRe
      +                          port + i))
  2074  008C  086D               	movf	APP_KeyboardTasks@i^(0+128),w
  2075  008D  3EA0               	addlw	160
  2076  008E  0086               	movwf	6
  2077  008F  0187               	clrf	7
  2078  0090  086D               	movf	APP_KeyboardTasks@i^(0+128),w
  2079  0091  3E21               	addlw	(low (_oldInputReport| (0+256)))& (0+255)
  2080  0092  0084               	movwf	4
  2081  0093  3001               	movlw	1	; select bank2/3
  2082  0094  0085               	movwf	5
  2083  0095  0800               	movf	0,w
  2084  0096  0601               	xorwf	1,w
  2085  0097  1903               	skipnz
  2086  0098  289C               	goto	l4933
  2087                           
  2088                           ;app_device_keyboard.c: 380: {
  2089                           ;app_device_keyboard.c: 381: needToSendNewReportPacket = 1;
  2090  0099  01EA               	clrf	APP_KeyboardTasks@needToSendNewReportPacket^(0+128)
  2091  009A  0AEA               	incf	APP_KeyboardTasks@needToSendNewReportPacket^(0+128),f
  2092                           
  2093                           ;app_device_keyboard.c: 382: break;
  2094  009B  28A1               	goto	l4937
  2095  009C                     l4933:	
  2096  009C  3008               	movlw	8
  2097  009D  0AED               	incf	APP_KeyboardTasks@i^(0+128),f
  2098  009E  026D               	subwf	APP_KeyboardTasks@i^(0+128),w
  2099  009F  1C03               	skipc
  2100  00A0  288C               	goto	l4929
  2101  00A1                     l4937:	
  2102                           
  2103                           ;app_device_keyboard.c: 383: }
  2104                           ;app_device_keyboard.c: 384: }
  2105                           ;app_device_keyboard.c: 389: if(keyboardIdleRate != 0)
  2106  00A1  0846               	movf	_keyboardIdleRate^(0+128),w
  2107  00A2  0447               	iorwf	(_keyboardIdleRate+1)^(0+128),w
  2108  00A3  1903               	btfsc	3,2
  2109  00A4  28B4               	goto	l4943
  2110                           
  2111                           ;app_device_keyboard.c: 390: {
  2112                           ;app_device_keyboard.c: 392: if(TimeDeltaMilliseconds >= keyboardIdleRate)
  2113  00A5  086C               	movf	(APP_KeyboardTasks@TimeDeltaMilliseconds+1)^(0+128),w
  2114  00A6  3A80               	xorlw	128
  2115  00A7  00E9               	movwf	??_APP_KeyboardTasks^(0+128)
  2116  00A8  0847               	movf	(_keyboardIdleRate+1)^(0+128),w
  2117  00A9  3A80               	xorlw	128
  2118  00AA  0269               	subwf	??_APP_KeyboardTasks^(0+128),w
  2119  00AB  1D03               	skipz
  2120  00AC  28AF               	goto	u3575
  2121  00AD  0846               	movf	_keyboardIdleRate^(0+128),w
  2122  00AE  026B               	subwf	APP_KeyboardTasks@TimeDeltaMilliseconds^(0+128),w
  2123  00AF                     u3575:	
  2124  00AF  1C03               	skipc
  2125  00B0  28B4               	goto	l4943
  2126                           
  2127                           ;app_device_keyboard.c: 393: {
  2128                           ;app_device_keyboard.c: 394: needToSendNewReportPacket = 1;
  2129  00B1  0021               	movlb	1	; select bank1
  2130  00B2  01EA               	clrf	APP_KeyboardTasks@needToSendNewReportPacket^(0+128)
  2131  00B3  0AEA               	incf	APP_KeyboardTasks@needToSendNewReportPacket^(0+128),f
  2132  00B4                     l4943:	
  2133                           
  2134                           ;app_device_keyboard.c: 395: }
  2135                           ;app_device_keyboard.c: 396: }
  2136                           ;app_device_keyboard.c: 400: if(needToSendNewReportPacket == 1)
  2137  00B4  0021               	movlb	1	; select bank1
  2138  00B5  0B6A               	decfsz	APP_KeyboardTasks@needToSendNewReportPacket^(0+128),w
  2139  00B6  28D6               	goto	l4951
  2140                           
  2141                           ;app_device_keyboard.c: 401: {
  2142                           ;app_device_keyboard.c: 405: oldInputReport = inputReport;
  2143  00B7  30A0               	movlw	160
  2144  00B8  0086               	movwf	6
  2145  00B9  3021               	movlw	low _oldInputReport
  2146  00BA  0187               	clrf	7
  2147  00BB  0084               	movwf	4
  2148  00BC  3001               	movlw	high _oldInputReport
  2149  00BD  0085               	movwf	5
  2150  00BE  3008               	movlw	8
  2151  00BF  00E9               	movwf	??_APP_KeyboardTasks^(0+128)
  2152  00C0                     u3590:	
  2153  00C0  0016               	moviw fsr1++
  2154  00C1  001A               	movwi fsr0++
  2155  00C2  0BE9               	decfsz	??_APP_KeyboardTasks^(0+128),f
  2156  00C3  28C0               	goto	u3590
  2157  00C4  30A0               	movlw	160
  2158                           
  2159                           ;app_device_keyboard.c: 408: keyboard.lastINTransmission = USBTransferOnePacket(1,1,(uin
      +                          t8_t*)&inputReport,sizeof(inputReport));
  2160  00C5  01DE               	clrf	USBTransferOnePacket@dir^(0+128)
  2161  00C6  0ADE               	incf	USBTransferOnePacket@dir^(0+128),f
  2162  00C7  00DF               	movwf	USBTransferOnePacket@data^(0+128)
  2163  00C8  3008               	movlw	8
  2164  00C9  01E0               	clrf	(USBTransferOnePacket@data+1)^(0+128)
  2165  00CA  00E1               	movwf	USBTransferOnePacket@len^(0+128)
  2166  00CB  3001               	movlw	1
  2167  00CC  20F0  3180         	fcall	_USBTransferOnePacket
  2168  00CE  085F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2169  00CF  00B5               	movwf	(_keyboard+1)^(0+128)
  2170  00D0  085E               	movf	?_USBTransferOnePacket^(0+128),w
  2171  00D1  00B4               	movwf	_keyboard^(0+128)
  2172                           
  2173                           ;app_device_keyboard.c: 409: OldSOFCount = LocalSOFCount;
  2174  00D2  0845               	movf	(_LocalSOFCount+1)^(0+128),w
  2175  00D3  00C3               	movwf	(_OldSOFCount+1)^(0+128)
  2176  00D4  0844               	movf	_LocalSOFCount^(0+128),w
  2177  00D5  00C2               	movwf	_OldSOFCount^(0+128)
  2178  00D6                     l4951:	
  2179                           
  2180                           ;app_device_keyboard.c: 410: }
  2181                           ;app_device_keyboard.c: 412: }
  2182                           ;app_device_keyboard.c: 421: if(((keyboard.lastOUTTransmission != 0x0000) && ((*(volatil
      +                          e uint8_t*)keyboard.lastOUTTransmission & 0x80) != 0x00)) == 0)
  2183  00D6  0836               	movf	(low ((_keyboard| 0+2)))^(0+128),w
  2184  00D7  0437               	iorwf	((low ((_keyboard| 0+2))+1))^(0+128),w
  2185  00D8  1903               	btfsc	3,2
  2186  00D9  28E0               	goto	l4955
  2187  00DA  0836               	movf	(low ((_keyboard| 0+2)))^(0+128),w
  2188  00DB  0086               	movwf	6
  2189  00DC  0837               	movf	((low ((_keyboard| 0+2))+1))^(0+128),w
  2190  00DD  0087               	movwf	7
  2191  00DE  1B81               	btfsc	1,7
  2192  00DF  0008               	return
  2193  00E0                     l4955:	
  2194                           
  2195                           ;app_device_keyboard.c: 422: {
  2196                           ;app_device_keyboard.c: 423: APP_KeyboardProcessOutputReport();
  2197  00E0  2165  3180         	fcall	_APP_KeyboardProcessOutputReport
  2198                           
  2199                           ;app_device_keyboard.c: 425: keyboard.lastOUTTransmission = USBTransferOnePacket(1,0,(ui
      +                          nt8_t*)&outputReport,sizeof(outputReport));
  2200  00E2  0021               	movlb	1	; select bank1
  2201  00E3  3020               	movlw	32
  2202  00E4  01DE               	clrf	USBTransferOnePacket@dir^(0+128)
  2203  00E5  00DF               	movwf	USBTransferOnePacket@data^(0+128)
  2204  00E6  3001               	movlw	1
  2205  00E7  00E0               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  2206  00E8  01E1               	clrf	USBTransferOnePacket@len^(0+128)
  2207  00E9  0AE1               	incf	USBTransferOnePacket@len^(0+128),f
  2208  00EA  20F0               	fcall	_USBTransferOnePacket
  2209  00EB  085F               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  2210  00EC  00B7               	movwf	((low ((_keyboard| 0+2))+1))^(0+128)
  2211  00ED  085E               	movf	?_USBTransferOnePacket^(0+128),w
  2212  00EE  00B6               	movwf	(low ((_keyboard| 0+2)))^(0+128)
  2213  00EF  0008               	return
  2214  00F0                     __end_of_APP_KeyboardTasks:	
  2215  00F0                     __ptext8:	
  2216 ;; *************** function _USBTransferOnePacket *****************
  2217 ;; Defined at:
  2218 ;;		line 995 in file "usb/usb_device.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  ep              1    wreg     unsigned char 
  2221 ;;  dir             1    0[BANK1 ] unsigned char 
  2222 ;;  data            2    1[BANK1 ] PTR unsigned char 
  2223 ;;		 -> inputReport(8), outputReport(1), 
  2224 ;;  len             1    3[BANK1 ] unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  ep              1    8[BANK1 ] unsigned char 
  2227 ;;  handle          2    9[BANK1 ] PTR volatile struct __BD
  2228 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[BANK1 ] PTR void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 1F/1
  2235 ;;		On exit  : 1F/1
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2238 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  2242 ;;Total ram usage:       11 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:   10
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_APP_KeyboardTasks
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _USBTransferOnePacket
  2254  00F0                     _USBTransferOnePacket:	
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  2258                           ;USBTransferOnePacket@ep stored from wreg
  2259  00F0  00E6               	movwf	USBTransferOnePacket@ep^(0+128)
  2260                           
  2261                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  2262                           ;usb_device.c: 1000: if(dir != 0)
  2263  00F1  085E               	movf	USBTransferOnePacket@dir^(0+128),w
  2264  00F2  1903               	btfsc	3,2
  2265  00F3  28FC               	goto	l3987
  2266                           
  2267                           ;usb_device.c: 1001: {
  2268                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  2269  00F4  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2270  00F5  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2271  00F6  0086               	movwf	6
  2272  00F7  0187               	clrf	7
  2273  00F8  3F40               	moviw [0]fsr1
  2274  00F9  00E7               	movwf	USBTransferOnePacket@handle^(0+128)
  2275  00FA  3F41               	moviw [1]fsr1
  2276  00FB  2903               	goto	L1
  2277  00FC                     l3987:	
  2278                           ;usb_device.c: 1004: }
  2279                           
  2280                           
  2281                           ;usb_device.c: 1005: else
  2282                           ;usb_device.c: 1006: {
  2283                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  2284  00FC  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2285  00FD  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2286  00FE  0086               	movwf	6
  2287  00FF  0187               	clrf	7
  2288  0100  3F40               	moviw [0]fsr1
  2289  0101  00E7               	movwf	USBTransferOnePacket@handle^(0+128)
  2290  0102  3F41               	moviw [1]fsr1
  2291  0103                     L1:	
  2292  0103  00E8               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  2293                           
  2294                           ;usb_device.c: 1009: }
  2295                           ;usb_device.c: 1013: if(handle == 0)
  2296  0104  0467               	iorwf	USBTransferOnePacket@handle^(0+128),w
  2297  0105  1D03               	btfss	3,2
  2298  0106  290A               	goto	l3995
  2299                           
  2300                           ;usb_device.c: 1014: {
  2301                           ;usb_device.c: 1015: return 0;
  2302  0107  01DE               	clrf	?_USBTransferOnePacket^(0+128)
  2303  0108  01DF               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  2304  0109  0008               	return
  2305  010A                     l3995:	
  2306                           
  2307                           ;usb_device.c: 1016: }
  2308                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  2309  010A  085F               	movf	USBTransferOnePacket@data^(0+128),w
  2310  010B  00E2               	movwf	??_USBTransferOnePacket^(0+128)
  2311  010C  307F               	movlw	127
  2312  010D  0560               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  2313  010E  00E3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  2314  010F  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2315  0110  0086               	movwf	6
  2316  0111  0868               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2317  0112  0087               	movwf	7
  2318  0113  3142               	addfsr 1,2
  2319  0114  0862               	movf	??_USBTransferOnePacket^(0+128),w
  2320  0115  3FC0               	movwi [0]fsr1
  2321  0116  0863               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  2322  0117  3FC1               	movwi [1]fsr1
  2323                           
  2324                           ;usb_device.c: 1030: handle->CNT = len;
  2325  0118  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2326  0119  3E01               	addlw	1
  2327  011A  00E2               	movwf	??_USBTransferOnePacket^(0+128)
  2328  011B  3000               	movlw	0
  2329  011C  3D68               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  2330  011D  00E3               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  2331  011E  0862               	movf	??_USBTransferOnePacket^(0+128),w
  2332  011F  0086               	movwf	6
  2333  0120  0863               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2334  0121  0087               	movwf	7
  2335  0122  0861               	movf	USBTransferOnePacket@len^(0+128),w
  2336  0123  0081               	movwf	1
  2337                           
  2338                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  2339  0124  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2340  0125  0086               	movwf	6
  2341  0126  0868               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2342  0127  0087               	movwf	7
  2343  0128  3040               	movlw	64
  2344  0129  0581               	andwf	1,f
  2345                           
  2346                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  2347  012A  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2348  012B  0086               	movwf	6
  2349  012C  0868               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2350  012D  0087               	movwf	7
  2351  012E  1581               	bsf	1,3
  2352                           
  2353                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  2354  012F  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2355  0130  0086               	movwf	6
  2356  0131  0868               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2357  0132  0087               	movwf	7
  2358  0133  1781               	bsf	1,7
  2359                           
  2360                           ;usb_device.c: 1036: if(dir != 0)
  2361  0134  085E               	movf	USBTransferOnePacket@dir^(0+128),w
  2362  0135  1903               	btfsc	3,2
  2363  0136  294C               	goto	l4005
  2364                           
  2365                           ;usb_device.c: 1037: {
  2366                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  2367  0137  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2368  0138  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2369  0139  0086               	movwf	6
  2370  013A  0187               	clrf	7
  2371  013B  3F40               	moviw [0]fsr1
  2372  013C  00E2               	movwf	??_USBTransferOnePacket^(0+128)
  2373  013D  3F41               	moviw [1]fsr1
  2374  013E  00E3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2375  013F  3004               	movlw	4
  2376  0140  0662               	xorwf	??_USBTransferOnePacket^(0+128),w
  2377  0141  00E4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  2378  0142  0863               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2379  0143  00E5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  2380  0144  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2381  0145  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  2382  0146  0086               	movwf	6
  2383  0147  0864               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  2384  0148  3FC0               	movwi [0]fsr1
  2385  0149  0865               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  2386  014A  3FC1               	movwi [1]fsr1
  2387                           
  2388                           ;usb_device.c: 1040: }
  2389  014B  2960               	goto	l4007
  2390  014C                     l4005:	
  2391                           
  2392                           ;usb_device.c: 1041: else
  2393                           ;usb_device.c: 1042: {
  2394                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  2395  014C  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2396  014D  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2397  014E  0086               	movwf	6
  2398  014F  0187               	clrf	7
  2399  0150  3F40               	moviw [0]fsr1
  2400  0151  00E2               	movwf	??_USBTransferOnePacket^(0+128)
  2401  0152  3F41               	moviw [1]fsr1
  2402  0153  00E3               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  2403  0154  3004               	movlw	4
  2404  0155  0662               	xorwf	??_USBTransferOnePacket^(0+128),w
  2405  0156  00E4               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  2406  0157  0863               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  2407  0158  00E5               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  2408  0159  3566               	lslf	USBTransferOnePacket@ep^(0+128),w
  2409  015A  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  2410  015B  0086               	movwf	6
  2411  015C  0864               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  2412  015D  3FC0               	movwi [0]fsr1
  2413  015E  0865               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  2414  015F  3FC1               	movwi [1]fsr1
  2415  0160                     l4007:	
  2416                           
  2417                           ;usb_device.c: 1045: }
  2418                           ;usb_device.c: 1046: return (void*)handle;
  2419  0160  0868               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  2420  0161  00DF               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  2421  0162  0867               	movf	USBTransferOnePacket@handle^(0+128),w
  2422  0163  00DE               	movwf	?_USBTransferOnePacket^(0+128)
  2423  0164  0008               	return
  2424  0165                     __end_of_USBTransferOnePacket:	
  2425  0165                     __ptext10:	
  2426 ;; *************** function _APP_KeyboardProcessOutputReport *****************
  2427 ;; Defined at:
  2428 ;;		line 431 in file "demo_src/app_device_keyboard.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 1F/1
  2439 ;;		On exit  : 1C/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:   11
  2449 ;; This function calls:
  2450 ;;		_LED_Off
  2451 ;;		_LED_On
  2452 ;; This function is called by:
  2453 ;;		_APP_KeyboardTasks
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _APP_KeyboardProcessOutputReport
  2459  0165                     _APP_KeyboardProcessOutputReport:	
  2460                           
  2461                           ;app_device_keyboard.c: 433: if(outputReport.leds.capsLock)
  2462                           
  2463                           ;incstack = 0
  2464                           ; Regs used in _APP_KeyboardProcessOutputReport: [wreg-fsr0h+status,2+status,0+pclath+cs
      +                          tack]
  2465  0165  0022               	movlb	2	; select bank2
  2466  0166  1CA0               	btfss	32,1	;volatile
  2467  0167  296A               	goto	l4783
  2468                           
  2469                           ;app_device_keyboard.c: 434: {
  2470                           ;app_device_keyboard.c: 435: LED_On(LED_D2);
  2471  0168  3002               	movlw	2
  2472  0169  2A7F               	ljmp	_LED_On
  2473  016A                     l4783:	
  2474                           ;app_device_keyboard.c: 436: }
  2475                           
  2476                           
  2477                           ;app_device_keyboard.c: 437: else
  2478                           ;app_device_keyboard.c: 438: {
  2479                           ;app_device_keyboard.c: 439: LED_Off(LED_D2);
  2480  016A  3002               	movlw	2
  2481  016B  2A6A               	ljmp	_LED_Off
  2482  016C                     __end_of_APP_KeyboardProcessOutputReport:	
  2483  016C                     __ptext7:	
  2484 ;; *************** function _memset *****************
  2485 ;; Defined at:
  2486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  p1              1    wreg     PTR void 
  2489 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  2490 ;;  c               2    0[BANK1 ] int 
  2491 ;;  n               2    2[BANK1 ] unsigned int 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  p1              1    5[BANK1 ] PTR void 
  2494 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  2495 ;;  p               1    4[BANK1 ] PTR unsigned char 
  2496 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      PTR void 
  2499 ;; Registers used:
  2500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2501 ;; Tracked objects:
  2502 ;;		On entry : 1F/1
  2503 ;;		On exit  : 1F/1
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2506 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2507 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2509 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  2510 ;;Total ram usage:        6 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:   10
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_APP_KeyboardTasks
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _memset
  2522  016C                     _memset:	
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  2526                           ;memset@p1 stored from wreg
  2527  016C  00E3               	movwf	memset@p1^(0+128)
  2528  016D  00E2               	movwf	memset@p^(0+128)
  2529  016E                     l4777:	
  2530  016E  3001               	movlw	1
  2531  016F  02E0               	subwf	memset@n^(0+128),f
  2532  0170  3000               	movlw	0
  2533  0171  3BE1               	subwfb	(memset@n+1)^(0+128),f
  2534  0172  0F60               	incfsz	memset@n^(0+128),w
  2535  0173  2977               	goto	l4773
  2536  0174  0A61               	incf	(memset@n+1)^(0+128),w
  2537  0175  1903               	btfsc	3,2
  2538  0176  0008               	return
  2539  0177                     l4773:	
  2540  0177  0862               	movf	memset@p^(0+128),w
  2541  0178  0086               	movwf	6
  2542  0179  0187               	clrf	7
  2543  017A  085E               	movf	memset@c^(0+128),w
  2544  017B  0081               	movwf	1
  2545  017C  0AE2               	incf	memset@p^(0+128),f
  2546  017D  296E               	goto	l4777
  2547  017E                     __end_of_memset:	
  2548  017E                     __ptext3:	
  2549 ;; *************** function _SYSTEM_Initialize *****************
  2550 ;; Defined at:
  2551 ;;		line 84 in file "system.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  state           1    wreg     enum E2866
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  state           1    1[BANK1 ] enum E2866
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : B1F/0
  2562 ;;		On exit  : 1F/1
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:        1 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; Hardware stack levels required when called:   11
  2572 ;; This function calls:
  2573 ;;		_BUTTON_Enable
  2574 ;;		_LED_Enable
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _SYSTEM_Initialize
  2582  017E                     _SYSTEM_Initialize:	
  2583                           
  2584                           ;incstack = 0
  2585                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2586                           ;SYSTEM_Initialize@state stored from wreg
  2587  017E  0021               	movlb	1	; select bank1
  2588  017F  00DF               	movwf	SYSTEM_Initialize@state^(0+128)
  2589                           
  2590                           ; Switch size 1, requested type "speed"
  2591                           ; Number of cases is 3, Range of values is 0 to 2
  2592                           ; switch strategies available:
  2593                           ; Name         Instructions Cycles
  2594                           ; simple_byte           10     6 (average)
  2595                           ; direct_byte           12     6 (fixed)
  2596                           ; jumptable            260     6 (fixed)
  2597                           ;	Chosen strategy is simple_byte
  2598                           
  2599                           ;system.c: 100: break;
  2600                           
  2601                           ;system.c: 86: switch(state)
  2602  0180  3A00               	xorlw	0	; case 0
  2603  0181  1903               	skipnz
  2604  0182  298A               	goto	l4787
  2605  0183  3A01               	xorlw	1	; case 1
  2606  0184  1903               	skipnz
  2607  0185  299D               	goto	l765
  2608  0186  3A03               	xorlw	3	; case 2
  2609  0187  1903               	skipnz
  2610  0188  299D               	goto	l765
  2611  0189  299D               	goto	l765
  2612  018A                     l4787:	
  2613                           
  2614                           ;system.c: 92: OSCCON = 0xFC;
  2615  018A  30FC               	movlw	252
  2616  018B  0099               	movwf	25	;volatile
  2617                           
  2618                           ;system.c: 93: ACTCON = 0x90;
  2619  018C  3090               	movlw	144
  2620  018D  0027               	movlb	7	; select bank7
  2621  018E  009B               	movwf	27	;volatile
  2622                           
  2623                           ;system.c: 95: LED_Enable(LED_D1);
  2624  018F  3001               	movlw	1
  2625  0190  21C5  3180         	fcall	_LED_Enable
  2626                           
  2627                           ;system.c: 96: LED_Enable(LED_D2);
  2628  0192  3002               	movlw	2
  2629  0193  21C5  3180         	fcall	_LED_Enable
  2630                           
  2631                           ;system.c: 97: BUTTON_Enable(BUTTON_S1);
  2632  0195  3001               	movlw	1
  2633  0196  219E  3180         	fcall	_BUTTON_Enable
  2634                           
  2635                           ;system.c: 98: BUTTON_Enable(BUTTON_S2);
  2636  0198  3002               	movlw	2
  2637  0199  219E  3180         	fcall	_BUTTON_Enable
  2638                           
  2639                           ;system.c: 99: BUTTON_Enable(BUTTON_S3);
  2640  019B  3003               	movlw	3
  2641  019C  299E               	ljmp	_BUTTON_Enable
  2642  019D                     l765:	
  2643  019D  0008               	return
  2644  019E                     __end_of_SYSTEM_Initialize:	
  2645  019E                     __ptext5:	
  2646 ;; *************** function _BUTTON_Enable *****************
  2647 ;; Defined at:
  2648 ;;		line 155 in file "bsp/buttons.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  button          1    wreg     enum E2617
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  button          1    0[BANK1 ] enum E2617
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 1F/1
  2659 ;;		On exit  : 1F/1
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;Total ram usage:        1 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:   10
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_SYSTEM_Initialize
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _BUTTON_Enable
  2678  019E                     _BUTTON_Enable:	
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  2682                           ;BUTTON_Enable@button stored from wreg
  2683  019E  00DE               	movwf	BUTTON_Enable@button^(0+128)
  2684                           
  2685                           ;buttons.c: 157: switch(button)
  2686  019F  29BA               	goto	l4757
  2687  01A0                     l90:	
  2688                           ;buttons.c: 158: {
  2689                           ;buttons.c: 159: case BUTTON_S1:
  2690                           
  2691                           
  2692                           ;buttons.c: 160: OPTION_REGbits.nWPUEN = 0;
  2693  01A0  1395               	bcf	21,7	;volatile
  2694                           
  2695                           ;buttons.c: 161: TRISBbits.TRISB6 = 1;
  2696  01A1  170D               	bsf	13,6	;volatile
  2697                           
  2698                           ;buttons.c: 162: WPUBbits.WPUB6 = 1;
  2699  01A2  0024               	movlb	4	; select bank4
  2700  01A3  170D               	bsf	13,6	;volatile
  2701                           
  2702                           ;buttons.c: 163: state1 = 0;
  2703  01A4  0021               	movlb	1	; select bank1
  2704  01A5  01D2               	clrf	_state1^(0+128)
  2705  01A6  01D3               	clrf	(_state1+1)^(0+128)
  2706                           
  2707                           ;buttons.c: 164: break;
  2708  01A7  0008               	return
  2709  01A8                     l92:	
  2710                           ;buttons.c: 166: case BUTTON_S2:
  2711                           
  2712                           
  2713                           ;buttons.c: 167: TRISBbits.TRISB5 = 1;
  2714  01A8  168D               	bsf	13,5	;volatile
  2715                           
  2716                           ;buttons.c: 168: ANSELBbits.ANSB5 = 0;
  2717  01A9  0023               	movlb	3	; select bank3
  2718  01AA  128D               	bcf	13,5	;volatile
  2719                           
  2720                           ;buttons.c: 169: WPUBbits.WPUB5 = 1;
  2721  01AB  0024               	movlb	4	; select bank4
  2722  01AC  168D               	bsf	13,5	;volatile
  2723                           
  2724                           ;buttons.c: 170: state2 = 0;
  2725  01AD  0021               	movlb	1	; select bank1
  2726  01AE  01D0               	clrf	_state2^(0+128)
  2727  01AF  01D1               	clrf	(_state2+1)^(0+128)
  2728                           
  2729                           ;buttons.c: 171: break;
  2730  01B0  0008               	return
  2731  01B1                     l93:	
  2732                           ;buttons.c: 173: case BUTTON_S3:
  2733                           
  2734                           
  2735                           ;buttons.c: 174: TRISBbits.TRISB4 = 1;
  2736  01B1  160D               	bsf	13,4	;volatile
  2737                           
  2738                           ;buttons.c: 175: ANSELBbits.ANSB4 = 0;
  2739  01B2  0023               	movlb	3	; select bank3
  2740  01B3  120D               	bcf	13,4	;volatile
  2741                           
  2742                           ;buttons.c: 176: WPUBbits.WPUB4 = 1;
  2743  01B4  0024               	movlb	4	; select bank4
  2744  01B5  160D               	bsf	13,4	;volatile
  2745                           
  2746                           ;buttons.c: 177: state3 = 0;
  2747  01B6  0021               	movlb	1	; select bank1
  2748  01B7  01CE               	clrf	_state3^(0+128)
  2749  01B8  01CF               	clrf	(_state3+1)^(0+128)
  2750                           
  2751                           ;buttons.c: 178: break;
  2752  01B9  0008               	return
  2753  01BA                     l4757:	
  2754  01BA  085E               	movf	BUTTON_Enable@button^(0+128),w
  2755                           
  2756                           ; Switch size 1, requested type "speed"
  2757                           ; Number of cases is 4, Range of values is 0 to 3
  2758                           ; switch strategies available:
  2759                           ; Name         Instructions Cycles
  2760                           ; direct_byte           14     6 (fixed)
  2761                           ; simple_byte           13     7 (average)
  2762                           ; jumptable            260     6 (fixed)
  2763                           ;	Chosen strategy is direct_byte
  2764  01BB  0084               	movwf	4
  2765  01BC  3004               	movlw	4
  2766  01BD  0204               	subwf	4,w
  2767  01BE  1803               	skipnc
  2768  01BF  0008               	return
  2769  01C0  3183               	movlp	high S5267
  2770  01C1  3504               	lslf	4,w
  2771  01C2  3EE5               	addlw	low S5267
  2772  01C3  0082               	movwf	2
  2773  01C4                     l95:	
  2774  01C4  0008               	return
  2775  01C5                     __end_of_BUTTON_Enable:	
  2776  01C5                     __ptext4:	
  2777 ;; *************** function _LED_Enable *****************
  2778 ;; Defined at:
  2779 ;;		line 220 in file "bsp/leds.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  led             1    wreg     enum E2
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  led             1    0[BANK1 ] enum E2
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 19/7
  2790 ;;		On exit  : 1F/1
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2794 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2796 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  2797 ;;Total ram usage:        1 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:   10
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_SYSTEM_Initialize
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _LED_Enable
  2809  01C5                     _LED_Enable:	
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0]
  2813                           ;LED_Enable@led stored from wreg
  2814  01C5  0021               	movlb	1	; select bank1
  2815  01C6  00DE               	movwf	LED_Enable@led^(0+128)
  2816                           
  2817                           ;leds.c: 222: switch(led)
  2818  01C7  29CC               	goto	l4769
  2819  01C8                     l135:	
  2820                           ;leds.c: 223: {
  2821                           ;leds.c: 224: case LED_D1:
  2822                           
  2823                           
  2824                           ;leds.c: 225: TRISCbits.TRISC6 = 0;
  2825  01C8  130E               	bcf	14,6	;volatile
  2826                           
  2827                           ;leds.c: 226: break;
  2828  01C9  0008               	return
  2829  01CA                     l137:	
  2830                           ;leds.c: 228: case LED_D2:
  2831                           
  2832                           
  2833                           ;leds.c: 229: TRISCbits.TRISC2 = 0;
  2834  01CA  110E               	bcf	14,2	;volatile
  2835                           
  2836                           ;leds.c: 230: break;
  2837  01CB  0008               	return
  2838  01CC                     l4769:	
  2839  01CC  085E               	movf	LED_Enable@led^(0+128),w
  2840                           
  2841                           ; Switch size 1, requested type "speed"
  2842                           ; Number of cases is 3, Range of values is 0 to 2
  2843                           ; switch strategies available:
  2844                           ; Name         Instructions Cycles
  2845                           ; simple_byte           10     6 (average)
  2846                           ; direct_byte           12     6 (fixed)
  2847                           ; jumptable            260     6 (fixed)
  2848                           ;	Chosen strategy is simple_byte
  2849  01CD  3A00               	xorlw	0	; case 0
  2850  01CE  1903               	skipnz
  2851  01CF  29D7               	goto	l139
  2852  01D0  3A01               	xorlw	1	; case 1
  2853  01D1  1903               	skipnz
  2854  01D2  29C8               	goto	l135
  2855  01D3  3A03               	xorlw	3	; case 2
  2856  01D4  1903               	skipnz
  2857  01D5  29CA               	goto	l137
  2858  01D6  29D7               	goto	l139
  2859  01D7                     l139:	
  2860  01D7  0008               	return
  2861  01D8                     __end_of_LED_Enable:	
  2862  01D8                     __ptext2:	
  2863 ;; *************** function _USBDeviceAttach *****************
  2864 ;; Defined at:
  2865 ;;		line 1352 in file "usb/usb_device.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 1F/0
  2876 ;;		On exit  : 1F/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:   10
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_main
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _USBDeviceAttach
  2895  01D8                     _USBDeviceAttach:	
  2896                           
  2897                           ;usb_device.c: 1356: {
  2898                           ;usb_device.c: 1357: if(1 == 1)
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  2902  01D8  085B               	movf	_USBDeviceState,w	;volatile
  2903  01D9  1D03               	btfss	3,2
  2904  01DA  0008               	return
  2905                           
  2906                           ;usb_device.c: 1358: {
  2907                           ;usb_device.c: 1360: UCON = 0;
  2908  01DB  003D               	movlb	29	; select bank29
  2909  01DC  018E               	clrf	14	;volatile
  2910                           
  2911                           ;usb_device.c: 1363: UIE = 0;
  2912  01DD  0192               	clrf	18	;volatile
  2913                           
  2914                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  2915  01DE  3016               	movlw	22
  2916  01DF  0091               	movwf	17	;volatile
  2917  01E0  309F               	movlw	159
  2918  01E1  0097               	movwf	23	;volatile
  2919  01E2  307B               	movlw	123
  2920  01E3  0092               	movwf	18	;volatile
  2921                           
  2922                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  2923  01E4  0021               	movlb	1	; select bank1
  2924  01E5  1512               	bsf	18,2	;volatile
  2925  01E6  170B               	bsf	11,6	;volatile
  2926  01E7  178B               	bsf	11,7	;volatile
  2927  01E8                     l380:	
  2928                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  2929                           
  2930  01E8  003D               	movlb	29	; select bank29
  2931  01E9  198E               	btfsc	14,3	;volatile
  2932  01EA  29ED               	goto	l4899
  2933  01EB  158E               	bsf	14,3	;volatile
  2934  01EC  29E8               	goto	l380
  2935  01ED                     l4899:	
  2936                           
  2937                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  2938  01ED  3001               	movlw	1
  2939  01EE  0020               	movlb	0	; select bank0
  2940  01EF  00DB               	movwf	_USBDeviceState	;volatile
  2941  01F0  0008               	return
  2942  01F1                     __end_of_USBDeviceAttach:	
  2943  01F1                     __ptext1:	
  2944 ;; *************** function _USBDeviceInit *****************
  2945 ;; Defined at:
  2946 ;;		line 277 in file "usb/usb_device.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  p               2    0[BANK1 ] PTR unsigned char 
  2951 ;;		 -> UEP1(1), 
  2952 ;;  i               1    2[BANK1 ] unsigned char 
  2953 ;;  i               1    3[BANK1 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 1F/1
  2960 ;;		On exit  : 1F/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;Total ram usage:        4 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:   10
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _USBDeviceInit
  2979  01F1                     _USBDeviceInit:	
  2980                           
  2981                           ;usb_device.c: 279: uint8_t i;
  2982                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2986  01F1  1112               	bcf	18,2	;volatile
  2987                           
  2988                           ;usb_device.c: 285: ;
  2989                           ;usb_device.c: 288: {UEIR = 0;};
  2990  01F2  003D               	movlb	29	; select bank29
  2991  01F3  0193               	clrf	19	;volatile
  2992                           
  2993                           ;usb_device.c: 291: {UIR = 0;};
  2994  01F4  0190               	clrf	16	;volatile
  2995                           
  2996                           ;usb_device.c: 294: UEP0 = 0;
  2997  01F5  0198               	clrf	24	;volatile
  2998                           
  2999                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
  3000  01F6  300E               	movlw	14
  3001  01F7  0021               	movlb	1	; select bank1
  3002  01F8  00DF               	movwf	(USBDeviceInit@p+1)^(0+128)
  3003  01F9  3099               	movlw	153
  3004  01FA  00DE               	movwf	USBDeviceInit@p^(0+128)
  3005  01FB  01E0               	clrf	USBDeviceInit@i_1020^(0+128)
  3006  01FC                     l4813:	
  3007  01FC  085E               	movf	USBDeviceInit@p^(0+128),w
  3008  01FD  0086               	movwf	6
  3009  01FE  085F               	movf	(USBDeviceInit@p+1)^(0+128),w
  3010  01FF  0087               	movwf	7
  3011  0200  0181               	clrf	1
  3012  0201  0ADE               	incf	USBDeviceInit@p^(0+128),f
  3013  0202  1903               	skipnz
  3014  0203  0ADF               	incf	(USBDeviceInit@p+1)^(0+128),f
  3015  0204  0AE0               	incf	USBDeviceInit@i_1020^(0+128),f
  3016  0205  1903               	btfsc	3,2
  3017  0206  29FC               	goto	l4813
  3018                           
  3019                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3020  0207  3016               	movlw	22
  3021  0208  003D               	movlb	29	; select bank29
  3022  0209  0091               	movwf	17	;volatile
  3023  020A  309F               	movlw	159
  3024  020B  0097               	movwf	23	;volatile
  3025  020C  307B               	movlw	123
  3026  020D  0092               	movwf	18	;volatile
  3027                           
  3028                           ;usb_device.c: 301: ;
  3029                           ;usb_device.c: 304: ;
  3030                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  3031  020E  0021               	movlb	1	; select bank1
  3032  020F  01E1               	clrf	USBDeviceInit@i^(0+128)
  3033  0210                     l4829:	
  3034                           
  3035                           ;usb_device.c: 308: {
  3036                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  3037  0210  0861               	movf	USBDeviceInit@i^(0+128),w
  3038  0211  0709               	addwf	9,w
  3039  0212  0709               	addwf	9,w
  3040  0213  3E20               	addlw	32
  3041  0214  0086               	movwf	6
  3042  0215  3000               	movlw	0
  3043  0216  0187               	clrf	7
  3044  0217  3FC0               	movwi [0]fsr1
  3045  0218  3FC1               	movwi [1]fsr1
  3046  0219  3FC2               	movwi [2]fsr1
  3047  021A  3FC3               	movwi [3]fsr1
  3048  021B  3008               	movlw	8
  3049  021C  0AE1               	incf	USBDeviceInit@i^(0+128),f
  3050  021D  0261               	subwf	USBDeviceInit@i^(0+128),w
  3051  021E  1C03               	skipc
  3052  021F  2A10               	goto	l4829
  3053                           
  3054                           ;usb_device.c: 310: }
  3055                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  3056  0220  003D               	movlb	29	; select bank29
  3057  0221  170E               	bsf	14,6	;volatile
  3058                           
  3059                           ;usb_device.c: 316: UADDR = 0x00;
  3060  0222  0196               	clrf	22	;volatile
  3061                           
  3062                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  3063  0223  120E               	bcf	14,4	;volatile
  3064                           
  3065                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  3066  0224  130E               	bcf	14,6	;volatile
  3067  0225                     l4841:	
  3068                           
  3069                           ;usb_device.c: 326: {
  3070                           ;usb_device.c: 327: (UIR &= 0xF7);
  3071  0225  1190               	bcf	16,3	;volatile
  3072                           
  3073                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  3074  0226  0021               	movlb	1	; select bank1
  3075  0227  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
  3076                           
  3077                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  3078  0228  01AA               	clrf	(_outPipes^(0+128)+2)	;volatile
  3079                           
  3080                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  3081  0229  01AB               	clrf	(_outPipes^(0+128)+3)	;volatile
  3082  022A  01AC               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  3083                           
  3084                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  3085  022B  003D               	movlb	29	; select bank29
  3086  022C  1990               	btfsc	16,3	;volatile
  3087  022D  2A25               	goto	l4841
  3088                           
  3089                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  3090  022E  3001               	movlw	1
  3091  022F  0021               	movlb	1	; select bank1
  3092  0230  00D8               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  3093                           
  3094                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  3095  0231  00D7               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  3096                           
  3097                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  3098  0232  01D6               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  3099                           
  3100                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  3101  0233  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  3102                           
  3103                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  3104  0234  01DA               	clrf	_USBBusIsSuspended^(0+128)	;volatile
  3105                           
  3106                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(1+1u); i++)
  3107  0235  01E1               	clrf	USBDeviceInit@i^(0+128)
  3108  0236                     l4857:	
  3109                           
  3110                           ;usb_device.c: 346: {
  3111                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  3112  0236  3561               	lslf	USBDeviceInit@i^(0+128),w
  3113  0237  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  3114  0238  0086               	movwf	6
  3115  0239  3000               	movlw	0
  3116  023A  0187               	clrf	7
  3117  023B  3FC0               	movwi [0]fsr1
  3118  023C  3FC1               	movwi [1]fsr1
  3119                           
  3120                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  3121  023D  3561               	lslf	USBDeviceInit@i^(0+128),w
  3122  023E  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  3123  023F  0086               	movwf	6
  3124  0240  3000               	movlw	0
  3125  0241  3FC0               	movwi [0]fsr1
  3126  0242  3FC1               	movwi [1]fsr1
  3127                           
  3128                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  3129  0243  0861               	movf	USBDeviceInit@i^(0+128),w
  3130  0244  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  3131  0245  0086               	movwf	6
  3132  0246  0181               	clrf	1
  3133                           
  3134                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  3135  0247  0861               	movf	USBDeviceInit@i^(0+128),w
  3136  0248  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  3137  0249  0086               	movwf	6
  3138  024A  3002               	movlw	2
  3139  024B  0181               	clrf	1
  3140  024C  0AE1               	incf	USBDeviceInit@i^(0+128),f
  3141  024D  0261               	subwf	USBDeviceInit@i^(0+128),w
  3142  024E  1C03               	skipc
  3143  024F  2A36               	goto	l4857
  3144                           
  3145                           ;usb_device.c: 351: }
  3146                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  3147  0250  3028               	movlw	40
  3148  0251  00B8               	movwf	_pBDTEntryIn^(0+128)
  3149  0252  3016               	movlw	22
  3150  0253  01B9               	clrf	(_pBDTEntryIn+1)^(0+128)
  3151                           
  3152                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  3153  0254  003D               	movlb	29	; select bank29
  3154  0255  0098               	movwf	24	;volatile
  3155                           
  3156                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  3157  0256  0020               	movlb	0	; select bank0
  3158  0257  01A3               	clrf	35	;volatile
  3159  0258  3040               	movlw	64
  3160  0259  00A2               	movwf	34	;volatile
  3161                           
  3162                           ;usb_device.c: 359: BDT[0].CNT = 8;
  3163  025A  3008               	movlw	8
  3164  025B  00A1               	movwf	33	;volatile
  3165                           
  3166                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  3167  025C  3004               	movlw	4
  3168  025D  00A0               	movwf	32	;volatile
  3169                           
  3170                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  3171  025E  17A0               	bsf	32,7	;volatile
  3172                           
  3173                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  3174  025F  01DE               	clrf	_USBActiveConfiguration	;volatile
  3175                           
  3176                           ;usb_device.c: 366: USB1msTickCount = 0;
  3177  0260  0022               	movlb	2	; select bank2
  3178  0261  01A9               	clrf	_USB1msTickCount^(0+256)	;volatile
  3179  0262  01AA               	clrf	(_USB1msTickCount+1)^(0+256)	;volatile
  3180  0263  01AB               	clrf	(_USB1msTickCount+2)^(0+256)	;volatile
  3181  0264  01AC               	clrf	(_USB1msTickCount+3)^(0+256)	;volatile
  3182                           
  3183                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  3184  0265  0021               	movlb	1	; select bank1
  3185  0266  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  3186                           
  3187                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  3188  0267  0020               	movlb	0	; select bank0
  3189  0268  01DB               	clrf	_USBDeviceState	;volatile
  3190  0269  0008               	return
  3191  026A                     __end_of_USBDeviceInit:	
  3192  026A                     __ptext12:	
  3193 ;; *************** function _LED_Off *****************
  3194 ;; Defined at:
  3195 ;;		line 100 in file "bsp/leds.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  led             1    wreg     enum E2
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  led             1    0[BANK1 ] enum E2
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 1F/2
  3206 ;;		On exit  : 1C/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:   10
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_APP_KeyboardProcessOutputReport
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _LED_Off
  3225  026A                     _LED_Off:	
  3226                           
  3227                           ;incstack = 0
  3228                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  3229                           ;LED_Off@led stored from wreg
  3230  026A  0021               	movlb	1	; select bank1
  3231  026B  00DE               	movwf	LED_Off@led^(0+128)
  3232                           
  3233                           ;leds.c: 102: switch(led)
  3234  026C  2A73               	goto	l4713
  3235  026D                     l111:	
  3236                           ;leds.c: 103: {
  3237                           ;leds.c: 104: case LED_D1:
  3238                           
  3239                           
  3240                           ;leds.c: 105: LATCbits.LATC6 = 0;
  3241  026D  0022               	movlb	2	; select bank2
  3242  026E  130E               	bcf	14,6	;volatile
  3243                           
  3244                           ;leds.c: 106: break;
  3245  026F  0008               	return
  3246  0270                     l113:	
  3247                           ;leds.c: 108: case LED_D2:
  3248                           
  3249                           
  3250                           ;leds.c: 109: LATCbits.LATC2 = 0;
  3251  0270  0022               	movlb	2	; select bank2
  3252  0271  110E               	bcf	14,2	;volatile
  3253                           
  3254                           ;leds.c: 110: break;
  3255  0272  0008               	return
  3256  0273                     l4713:	
  3257  0273  085E               	movf	LED_Off@led^(0+128),w
  3258                           
  3259                           ; Switch size 1, requested type "speed"
  3260                           ; Number of cases is 3, Range of values is 0 to 2
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte           10     6 (average)
  3264                           ; direct_byte           12     6 (fixed)
  3265                           ; jumptable            260     6 (fixed)
  3266                           ;	Chosen strategy is simple_byte
  3267  0274  3A00               	xorlw	0	; case 0
  3268  0275  1903               	skipnz
  3269  0276  2A7E               	goto	l115
  3270  0277  3A01               	xorlw	1	; case 1
  3271  0278  1903               	skipnz
  3272  0279  2A6D               	goto	l111
  3273  027A  3A03               	xorlw	3	; case 2
  3274  027B  1903               	skipnz
  3275  027C  2A70               	goto	l113
  3276  027D  2A7E               	goto	l115
  3277  027E                     l115:	
  3278  027E  0008               	return
  3279  027F                     __end_of_LED_Off:	
  3280  027F                     __ptext11:	
  3281 ;; *************** function _LED_On *****************
  3282 ;; Defined at:
  3283 ;;		line 59 in file "bsp/leds.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  led             1    wreg     enum E2
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  led             1    0[BANK1 ] enum E2
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 1F/2
  3294 ;;		On exit  : 1C/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:   10
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_APP_KeyboardProcessOutputReport
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _LED_On
  3313  027F                     _LED_On:	
  3314                           
  3315                           ;incstack = 0
  3316                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  3317                           ;LED_On@led stored from wreg
  3318  027F  0021               	movlb	1	; select bank1
  3319  0280  00DE               	movwf	LED_On@led^(0+128)
  3320                           
  3321                           ;leds.c: 61: switch(led)
  3322  0281  2A88               	goto	l4707
  3323  0282                     l103:	
  3324                           ;leds.c: 62: {
  3325                           ;leds.c: 63: case LED_D1:
  3326                           
  3327                           
  3328                           ;leds.c: 64: LATCbits.LATC6 = 1;
  3329  0282  0022               	movlb	2	; select bank2
  3330  0283  170E               	bsf	14,6	;volatile
  3331                           
  3332                           ;leds.c: 65: break;
  3333  0284  0008               	return
  3334  0285                     l105:	
  3335                           ;leds.c: 67: case LED_D2:
  3336                           
  3337                           
  3338                           ;leds.c: 68: LATCbits.LATC2 = 1;
  3339  0285  0022               	movlb	2	; select bank2
  3340  0286  150E               	bsf	14,2	;volatile
  3341                           
  3342                           ;leds.c: 69: break;
  3343  0287  0008               	return
  3344  0288                     l4707:	
  3345  0288  085E               	movf	LED_On@led^(0+128),w
  3346                           
  3347                           ; Switch size 1, requested type "speed"
  3348                           ; Number of cases is 3, Range of values is 0 to 2
  3349                           ; switch strategies available:
  3350                           ; Name         Instructions Cycles
  3351                           ; simple_byte           10     6 (average)
  3352                           ; direct_byte           12     6 (fixed)
  3353                           ; jumptable            260     6 (fixed)
  3354                           ;	Chosen strategy is simple_byte
  3355  0289  3A00               	xorlw	0	; case 0
  3356  028A  1903               	skipnz
  3357  028B  2A93               	goto	l107
  3358  028C  3A01               	xorlw	1	; case 1
  3359  028D  1903               	skipnz
  3360  028E  2A82               	goto	l103
  3361  028F  3A03               	xorlw	3	; case 2
  3362  0290  1903               	skipnz
  3363  0291  2A85               	goto	l105
  3364  0292  2A93               	goto	l107
  3365  0293                     l107:	
  3366  0293  0008               	return
  3367  0294                     __end_of_LED_On:	
  3368  0294                     __ptext9:	
  3369 ;; *************** function _BUTTON_IsPressed *****************
  3370 ;; Defined at:
  3371 ;;		line 119 in file "bsp/buttons.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  button          1    wreg     enum E2617
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  button          1    1[BANK1 ] enum E2617
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 1F/1D
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:   10
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_APP_KeyboardTasks
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function _BUTTON_IsPressed
  3401  0294                     _BUTTON_IsPressed:	
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _BUTTON_IsPressed: [wreg-fsr0h+status,2+status,0]
  3405                           ;BUTTON_IsPressed@button stored from wreg
  3406  0294  0021               	movlb	1	; select bank1
  3407  0295  00DF               	movwf	BUTTON_IsPressed@button^(0+128)
  3408                           
  3409                           ;buttons.c: 121: switch(button)
  3410  0296  2ABC               	goto	l4735
  3411  0297                     l4717:	
  3412                           
  3413                           ;buttons.c: 124: return ((state1 >= 2) ? 1 : 0);
  3414  0297  0853               	movf	(_state1+1)^(0+128),w
  3415  0298  3A80               	xorlw	128
  3416  0299  00DE               	movwf	??_BUTTON_IsPressed^(0+128)
  3417  029A  3080               	movlw	128
  3418  029B  025E               	subwf	??_BUTTON_IsPressed^(0+128),w
  3419  029C  1D03               	skipz
  3420  029D  2AA0               	goto	u3335
  3421  029E  3002               	movlw	2
  3422  029F  0252               	subwf	_state1^(0+128),w
  3423  02A0                     u3335:	
  3424  02A0  1803               	skipnc
  3425  02A1  3401               	retlw	1
  3426  02A2  3400               	retlw	0
  3427  02A3                     l4721:	
  3428                           
  3429                           ;buttons.c: 127: return ((state2 >= 2) ? 1 : 0);
  3430  02A3  0851               	movf	(_state2+1)^(0+128),w
  3431  02A4  3A80               	xorlw	128
  3432  02A5  00DE               	movwf	??_BUTTON_IsPressed^(0+128)
  3433  02A6  3080               	movlw	128
  3434  02A7  025E               	subwf	??_BUTTON_IsPressed^(0+128),w
  3435  02A8  1D03               	skipz
  3436  02A9  2AAC               	goto	u3355
  3437  02AA  3002               	movlw	2
  3438  02AB  0250               	subwf	_state2^(0+128),w
  3439  02AC                     u3355:	
  3440  02AC  1803               	skipnc
  3441  02AD  3401               	retlw	1
  3442  02AE  3400               	retlw	0
  3443  02AF                     l4725:	
  3444                           
  3445                           ;buttons.c: 130: return ((state3 >= 2) ? 1 : 0);
  3446  02AF  084F               	movf	(_state3+1)^(0+128),w
  3447  02B0  3A80               	xorlw	128
  3448  02B1  00DE               	movwf	??_BUTTON_IsPressed^(0+128)
  3449  02B2  3080               	movlw	128
  3450  02B3  025E               	subwf	??_BUTTON_IsPressed^(0+128),w
  3451  02B4  1D03               	skipz
  3452  02B5  2AB8               	goto	u3375
  3453  02B6  3002               	movlw	2
  3454  02B7  024E               	subwf	_state3^(0+128),w
  3455  02B8                     u3375:	
  3456  02B8  1803               	skipnc
  3457  02B9  3401               	retlw	1
  3458  02BA  3400               	retlw	0
  3459  02BB                     l4729:	
  3460                           
  3461                           ;buttons.c: 133: return 0;
  3462  02BB  3400               	retlw	0
  3463  02BC                     l4735:	
  3464  02BC  085F               	movf	BUTTON_IsPressed@button^(0+128),w
  3465                           
  3466                           ; Switch size 1, requested type "speed"
  3467                           ; Number of cases is 4, Range of values is 0 to 3
  3468                           ; switch strategies available:
  3469                           ; Name         Instructions Cycles
  3470                           ; direct_byte           14     6 (fixed)
  3471                           ; simple_byte           13     7 (average)
  3472                           ; jumptable            260     6 (fixed)
  3473                           ;	Chosen strategy is direct_byte
  3474  02BD  0084               	movwf	4
  3475  02BE  3004               	movlw	4
  3476  02BF  0204               	subwf	4,w
  3477  02C0  1803               	skipnc
  3478  02C1  3400               	retlw	0
  3479  02C2  3183               	movlp	high S5269
  3480  02C3  3504               	lslf	4,w
  3481  02C4  3EED               	addlw	low S5269
  3482  02C5  0082               	movwf	2
  3483  02C6  0008               	return
  3484  02C7                     __end_of_BUTTON_IsPressed:	
  3485                           
  3486                           	psect	bssBANK0
  3487  0050                     __pbssBANK0:	
  3488  0050                     _pBDTEntryEP0OutNext:	
  3489  0050                     	ds	2
  3490  0052                     _SOFCounter:	
  3491  0052                     	ds	2
  3492  0054                     _USBDeferStatusStagePacket:	
  3493  0054                     	ds	1
  3494  0055                     _USBStatusStageTimeoutCounter:	
  3495  0055                     	ds	1
  3496  0056                     _endpoint_number:	
  3497  0056                     	ds	1
  3498  0057                     _pDst:	
  3499  0057                     	ds	1
  3500  0058                     _controlTransferState:	
  3501  0058                     	ds	1
  3502  0059                     _shortPacketStatus:	
  3503  0059                     	ds	1
  3504  005A                     _pBDTEntryEP0OutCurrent:	
  3505  005A                     	ds	1
  3506  005B                     _USBDeviceState:	
  3507  005B                     	ds	1
  3508  005C                     _USTATcopy:	
  3509  005C                     	ds	1
  3510  005D                     _USBAlternateInterface:	
  3511  005D                     	ds	1
  3512  005E                     _USBActiveConfiguration:	
  3513  005E                     	ds	1
  3514                           
  3515                           	psect	bssBANK1
  3516  00A8                     __pbssBANK1:	
  3517  00A8                     _outPipes:	
  3518  00A8                     	ds	7
  3519  00AF                     _inPipes:	
  3520  00AF                     	ds	5
  3521  00B4                     _keyboard:	
  3522  00B4                     	ds	4
  3523  00B8                     _pBDTEntryIn:	
  3524  00B8                     	ds	4
  3525  00BC                     _pBDTEntryOut:	
  3526  00BC                     	ds	4
  3527  00C0                     APP_LEDUpdateUSBStatus@ledCount:	
  3528  00C0                     	ds	2
  3529  00C2                     _OldSOFCount:	
  3530  00C2                     	ds	2
  3531  00C4                     _LocalSOFCount:	
  3532  00C4                     	ds	2
  3533  00C6                     _keyboardIdleRate:	
  3534  00C6                     	ds	2
  3535  00C8                     _ep_data_out:	
  3536  00C8                     	ds	2
  3537  00CA                     _ep_data_in:	
  3538  00CA                     	ds	2
  3539  00CC                     _timer:	
  3540  00CC                     	ds	2
  3541  00CE                     _state3:	
  3542  00CE                     	ds	2
  3543  00D0                     _state2:	
  3544  00D0                     	ds	2
  3545  00D2                     _state1:	
  3546  00D2                     	ds	2
  3547  00D4                     _USBTicksSinceSuspendEnd:	
  3548  00D4                     	ds	1
  3549  00D5                     _USBDeferOUTDataStagePackets:	
  3550  00D5                     	ds	1
  3551  00D6                     _USBDeferINDataStagePackets:	
  3552  00D6                     	ds	1
  3553  00D7                     _USBStatusStageEnabledFlag2:	
  3554  00D7                     	ds	1
  3555  00D8                     _USBStatusStageEnabledFlag1:	
  3556  00D8                     	ds	1
  3557  00D9                     _BothEP0OutUOWNsSet:	
  3558  00D9                     	ds	1
  3559  00DA                     _USBBusIsSuspended:	
  3560  00DA                     	ds	1
  3561  00DB                     _RemoteWakeup:	
  3562  00DB                     	ds	1
  3563  00DC                     _active_protocol:	
  3564  00DC                     	ds	1
  3565  00DD                     _idle_rate:	
  3566  00DD                     	ds	1
  3567                           
  3568                           	psect	bssBANK2
  3569  0121                     __pbssBANK2:	
  3570  0121                     _oldInputReport:	
  3571  0121                     	ds	8
  3572  0129                     _USB1msTickCount:	
  3573  0129                     	ds	4
  3574                           
  3575                           	psect	clrtext
  3576  064E                     clear_ram0:	
  3577                           ;	Called with FSR0 containing the base address, and
  3578                           ;	WREG with the size to clear
  3579                           
  3580  064E  0064               	clrwdt	;clear the watchdog before getting into this loop
  3581  064F                     clrloop0:	
  3582  064F  0180               	clrf	0	;clear RAM location pointed to by FSR
  3583  0650  3101               	addfsr 0,1
  3584  0651  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3585  0652  2E4F               	goto	clrloop0	;have we reached the end yet?
  3586  0653  3400               	retlw	0	;all done for this memory range, return
  3587                           
  3588                           	psect	cstackBANK1
  3589  00DE                     __pcstackBANK1:	
  3590  00DE                     ?_memset:	
  3591  00DE                     ??_BUTTON_IsPressed:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  00DE                     ??_BUTTON_Enable:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  00DE                     ??_LED_On:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  00DE                     ??_LED_Off:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  00DE                     ??_LED_Enable:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  00DE                     ??_USBDeviceInit:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  00DE                     ??_USBDeviceAttach:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  00DE                     ?_USBTransferOnePacket:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  00DE                     BUTTON_Enable@button:	
  3616                           ; 2 bytes @ 0x0
  3617                           
  3618  00DE                     LED_On@led:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  00DE                     LED_Off@led:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  00DE                     LED_Enable@led:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  00DE                     USBTransferOnePacket@dir:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  00DE                     USBDeviceInit@p:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  00DE                     memset@c:	
  3634                           ; 2 bytes @ 0x0
  3635                           
  3636                           
  3637                           ; 2 bytes @ 0x0
  3638  00DE                     	ds	1
  3639  00DF                     ??_SYSTEM_Initialize:	
  3640  00DF                     ??_APP_KeyboardProcessOutputReport:	
  3641                           ; 1 bytes @ 0x1
  3642                           
  3643  00DF                     BUTTON_IsPressed@button:	
  3644                           ; 1 bytes @ 0x1
  3645                           
  3646  00DF                     SYSTEM_Initialize@state:	
  3647                           ; 1 bytes @ 0x1
  3648                           
  3649  00DF                     USBTransferOnePacket@data:	
  3650                           ; 1 bytes @ 0x1
  3651                           
  3652                           
  3653                           ; 2 bytes @ 0x1
  3654  00DF                     	ds	1
  3655  00E0                     USBDeviceInit@i_1020:	
  3656  00E0                     memset@n:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659                           
  3660                           ; 2 bytes @ 0x2
  3661  00E0                     	ds	1
  3662  00E1                     USBDeviceInit@i:	
  3663  00E1                     USBTransferOnePacket@len:	
  3664                           ; 1 bytes @ 0x3
  3665                           
  3666                           
  3667                           ; 1 bytes @ 0x3
  3668  00E1                     	ds	1
  3669  00E2                     ??_memset:	
  3670  00E2                     ??_USBTransferOnePacket:	
  3671                           ; 1 bytes @ 0x4
  3672                           
  3673  00E2                     memset@p:	
  3674                           ; 1 bytes @ 0x4
  3675                           
  3676                           
  3677                           ; 1 bytes @ 0x4
  3678  00E2                     	ds	1
  3679  00E3                     memset@p1:	
  3680                           
  3681                           ; 1 bytes @ 0x5
  3682  00E3                     	ds	3
  3683  00E6                     USBTransferOnePacket@ep:	
  3684                           
  3685                           ; 1 bytes @ 0x8
  3686  00E6                     	ds	1
  3687  00E7                     USBTransferOnePacket@handle:	
  3688                           
  3689                           ; 2 bytes @ 0x9
  3690  00E7                     	ds	2
  3691  00E9                     ??_APP_KeyboardTasks:	
  3692                           
  3693                           ; 1 bytes @ 0xB
  3694  00E9                     	ds	1
  3695  00EA                     APP_KeyboardTasks@needToSendNewReportPacket:	
  3696                           
  3697                           ; 1 bytes @ 0xC
  3698  00EA                     	ds	1
  3699  00EB                     APP_KeyboardTasks@TimeDeltaMilliseconds:	
  3700                           
  3701                           ; 2 bytes @ 0xD
  3702  00EB                     	ds	2
  3703  00ED                     APP_KeyboardTasks@i:	
  3704                           
  3705                           ; 1 bytes @ 0xF
  3706  00ED                     	ds	1
  3707  00EE                     ??_main:	
  3708                           
  3709                           	psect	cstackCOMMON
  3710  0070                     __pcstackCOMMON:	
  3711                           ; 1 bytes @ 0x10
  3712                           
  3713  0070                     ?_APP_LEDUpdateUSBStatus:	
  3714  0070                     ?_SYSTEM_Initialize:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0070                     ?_APP_KeyboardInit:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0070                     ?_USBCheckHIDRequest:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0070                     ?_USBWakeFromSuspend:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726  0070                     ?_USBSuspend:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729  0070                     ?_USBIncrement1msInternalTimers:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732  0070                     ??_USBIncrement1msInternalTimers:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735  0070                     ?_USBCtrlEPAllowStatusStage:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738  0070                     ??_USBCtrlEPAllowStatusStage:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741  0070                     ?_USBStallHandler:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744  0070                     ??_USBStallHandler:	
  3745                           ; 1 bytes @ 0x0
  3746                           
  3747  0070                     ?_USBCtrlEPService:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750  0070                     ?_USBConfigureEndpoint:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0070                     ?_USBCtrlTrfTxService:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0070                     ??_USBCtrlTrfTxService:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0070                     ?_USBCtrlTrfSetupHandler:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0070                     ?_USBCtrlTrfOutHandler:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0070                     ?_USBCtrlTrfInHandler:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0070                     ?_USBCheckStdRequest:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0070                     ?_USBStdFeatureReqHandler:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0070                     ?_USBHIDCBSetReportHandler:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0070                     ??_USBHIDCBSetReportHandler:	
  3778                           ; 1 bytes @ 0x0
  3779                           
  3780  0070                     ?_USBHIDCBSetIdleRateHandler:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0070                     ?_APP_KeyboardProcessOutputReport:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0070                     ?_BUTTON_UpdateStates:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0070                     ??_BUTTON_UpdateStates:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0070                     ?_BUTTON_IsPressed:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0070                     ?_BUTTON_Enable:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0070                     ?_LED_On:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0070                     ?_LED_Off:	
  3802                           ; 1 bytes @ 0x0
  3803                           
  3804  0070                     ?_LED_Enable:	
  3805                           ; 1 bytes @ 0x0
  3806                           
  3807  0070                     ?_USBDeviceInit:	
  3808                           ; 1 bytes @ 0x0
  3809                           
  3810  0070                     ?_USBDeviceTasks:	
  3811                           ; 1 bytes @ 0x0
  3812                           
  3813  0070                     ?_USBDeviceAttach:	
  3814                           ; 1 bytes @ 0x0
  3815                           
  3816  0070                     ?_USBCtrlEPAllowDataStage:	
  3817                           ; 1 bytes @ 0x0
  3818                           
  3819  0070                     ?_USBCtrlEPServiceComplete:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0070                     ?_USBCtrlTrfRxService:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0070                     ?_USBStdSetCfgHandler:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0070                     ?_USBStdGetDscHandler:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0070                     ??_USBStdGetDscHandler:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0070                     ?_USBStdGetStatusHandler:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0070                     ??_USBStdGetStatusHandler:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0070                     ?_APP_KeyboardTasks:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0070                     ?_USBHIDCBSetReportComplete:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     ?_SYS_InterruptHigh:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     ?i1_BUTTON_Enable:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0070                     ??i1_BUTTON_Enable:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0070                     ?i1_LED_On:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0070                     ??i1_LED_On:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0070                     ?i1_LED_Off:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ??i1_LED_Off:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ?i1_LED_Enable:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0070                     ??i1_LED_Enable:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0070                     ?i1_USBDeviceInit:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ??i1_USBDeviceInit:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?i1_APP_KeyboardProcessOutputReport:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ?i1_SYSTEM_Initialize:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?i1_memset:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_main:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?i1_USBTransferOnePacket:	
  3892                           ; 2 bytes @ 0x0
  3893                           
  3894  0070                     USBConfigureEndpoint@direction:	
  3895                           ; 2 bytes @ 0x0
  3896                           
  3897  0070                     USBHIDCBSetIdleRateHandler@newIdleRate:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     i1BUTTON_Enable@button:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     i1LED_On@led:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     i1LED_Off@led:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     i1LED_Enable@led:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     i1USBTransferOnePacket@dir:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     USBStdGetStatusHandler@p:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     i1USBDeviceInit@p:	
  3919                           ; 2 bytes @ 0x0
  3920                           
  3921  0070                     i1memset@c:	
  3922                           ; 2 bytes @ 0x0
  3923                           
  3924                           
  3925                           ; 2 bytes @ 0x0
  3926  0070                     	ds	1
  3927  0071                     ??_APP_LEDUpdateUSBStatus:	
  3928  0071                     ??_USBConfigureEndpoint:	
  3929                           ; 1 bytes @ 0x1
  3930                           
  3931  0071                     ??_USBHIDCBSetIdleRateHandler:	
  3932                           ; 1 bytes @ 0x1
  3933                           
  3934  0071                     ??_USBHIDCBSetReportComplete:	
  3935                           ; 1 bytes @ 0x1
  3936                           
  3937  0071                     ??i1_APP_KeyboardProcessOutputReport:	
  3938                           ; 1 bytes @ 0x1
  3939                           
  3940  0071                     ??i1_SYSTEM_Initialize:	
  3941                           ; 1 bytes @ 0x1
  3942                           
  3943  0071                     USBHIDCBSetIdleRateHandler@reportID:	
  3944                           ; 1 bytes @ 0x1
  3945                           
  3946  0071                     i1SYSTEM_Initialize@state:	
  3947                           ; 1 bytes @ 0x1
  3948                           
  3949  0071                     i1USBTransferOnePacket@data:	
  3950                           ; 1 bytes @ 0x1
  3951                           
  3952                           
  3953                           ; 2 bytes @ 0x1
  3954  0071                     	ds	1
  3955  0072                     ??_USBCheckHIDRequest:	
  3956  0072                     ??_USBCtrlTrfRxService:	
  3957                           ; 1 bytes @ 0x2
  3958                           
  3959  0072                     USBConfigureEndpoint@EPNum:	
  3960                           ; 1 bytes @ 0x2
  3961                           
  3962  0072                     USBCtrlTrfTxService@byteToSend:	
  3963                           ; 1 bytes @ 0x2
  3964                           
  3965  0072                     i1USBDeviceInit@i_1020:	
  3966                           ; 1 bytes @ 0x2
  3967                           
  3968  0072                     i1memset@n:	
  3969                           ; 1 bytes @ 0x2
  3970                           
  3971                           
  3972                           ; 2 bytes @ 0x2
  3973  0072                     	ds	1
  3974  0073                     ??_USBCtrlTrfInHandler:	
  3975  0073                     ??_USBCtrlEPAllowDataStage:	
  3976                           ; 1 bytes @ 0x3
  3977                           
  3978  0073                     USBConfigureEndpoint@handle:	
  3979                           ; 1 bytes @ 0x3
  3980                           
  3981  0073                     i1USBDeviceInit@i:	
  3982                           ; 1 bytes @ 0x3
  3983                           
  3984  0073                     i1USBTransferOnePacket@len:	
  3985                           ; 1 bytes @ 0x3
  3986                           
  3987                           
  3988                           ; 1 bytes @ 0x3
  3989  0073                     	ds	1
  3990  0074                     ?_USBEnableEndpoint:	
  3991  0074                     ??i1_USBTransferOnePacket:	
  3992                           ; 1 bytes @ 0x4
  3993                           
  3994  0074                     ??i1_memset:	
  3995                           ; 1 bytes @ 0x4
  3996                           
  3997  0074                     USBEnableEndpoint@options:	
  3998                           ; 1 bytes @ 0x4
  3999                           
  4000  0074                     USBCtrlTrfRxService@i:	
  4001                           ; 1 bytes @ 0x4
  4002                           
  4003  0074                     i1memset@p1:	
  4004                           ; 1 bytes @ 0x4
  4005                           
  4006                           
  4007                           ; 1 bytes @ 0x4
  4008  0074                     	ds	1
  4009  0075                     ??_USBEnableEndpoint:	
  4010  0075                     ??_USBCtrlEPServiceComplete:	
  4011                           ; 1 bytes @ 0x5
  4012                           
  4013  0075                     USBCtrlTrfRxService@byteToRead:	
  4014                           ; 1 bytes @ 0x5
  4015                           
  4016  0075                     USBCtrlTrfInHandler@lastDTS:	
  4017                           ; 1 bytes @ 0x5
  4018                           
  4019  0075                     i1memset@p:	
  4020                           ; 1 bytes @ 0x5
  4021                           
  4022                           
  4023                           ; 1 bytes @ 0x5
  4024  0075                     	ds	1
  4025  0076                     ??_USBCtrlTrfOutHandler:	
  4026                           
  4027                           ; 1 bytes @ 0x6
  4028  0076                     	ds	1
  4029  0077                     USBEnableEndpoint@p:	
  4030                           
  4031                           ; 2 bytes @ 0x7
  4032  0077                     	ds	1
  4033  0078                     i1USBTransferOnePacket@ep:	
  4034                           
  4035                           ; 1 bytes @ 0x8
  4036  0078                     	ds	1
  4037  0079                     USBEnableEndpoint@ep:	
  4038  0079                     i1USBTransferOnePacket@handle:	
  4039                           ; 1 bytes @ 0x9
  4040                           
  4041                           
  4042                           ; 2 bytes @ 0x9
  4043  0079                     	ds	2
  4044  007B                     ??_APP_KeyboardInit:	
  4045  007B                     ??_USBWakeFromSuspend:	
  4046                           ; 1 bytes @ 0xB
  4047                           
  4048  007B                     ??_USBSuspend:	
  4049                           ; 1 bytes @ 0xB
  4050                           
  4051  007B                     ??_USBStdFeatureReqHandler:	
  4052                           ; 1 bytes @ 0xB
  4053                           
  4054  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  4055                           ; 1 bytes @ 0xB
  4056                           
  4057  007B                     ??_USBStdSetCfgHandler:	
  4058                           ; 1 bytes @ 0xB
  4059                           
  4060                           
  4061                           ; 1 bytes @ 0xB
  4062  007B                     	ds	2
  4063  007D                     ??_USBCtrlTrfSetupHandler:	
  4064  007D                     ??_USBCheckStdRequest:	
  4065                           ; 1 bytes @ 0xD
  4066                           
  4067  007D                     ??_USBDeviceTasks:	
  4068                           ; 1 bytes @ 0xD
  4069                           
  4070                           
  4071                           ; 1 bytes @ 0xD
  4072  007D                     	ds	1
  4073  007E                     ??_SYS_InterruptHigh:	
  4074                           
  4075                           	psect	cstackBANK0
  4076  005F                     __pcstackBANK0:	
  4077                           ; 1 bytes @ 0xE
  4078                           
  4079  005F                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  4080  005F                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083                           
  4084                           ; 2 bytes @ 0x0
  4085  005F                     	ds	2
  4086  0061                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  4087                           
  4088                           ; 2 bytes @ 0x2
  4089  0061                     	ds	2
  4090  0063                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  4091                           
  4092                           ; 2 bytes @ 0x4
  4093  0063                     	ds	2
  4094  0065                     USBStdSetCfgHandler@p:	
  4095  0065                     USBStdFeatureReqHandler@pUEP:	
  4096                           ; 2 bytes @ 0x6
  4097                           
  4098                           
  4099                           ; 2 bytes @ 0x6
  4100  0065                     	ds	2
  4101  0067                     USBStdSetCfgHandler@i_1771:	
  4102  0067                     USBStdFeatureReqHandler@current_ep_data:	
  4103                           ; 1 bytes @ 0x8
  4104                           
  4105                           
  4106                           ; 1 bytes @ 0x8
  4107  0067                     	ds	1
  4108  0068                     USBStdSetCfgHandler@i:	
  4109  0068                     USBStdFeatureReqHandler@p:	
  4110                           ; 1 bytes @ 0x9
  4111                           
  4112                           
  4113                           ; 2 bytes @ 0x9
  4114  0068                     	ds	2
  4115  006A                     ??_USBCtrlEPService:	
  4116                           
  4117                           ; 1 bytes @ 0xB
  4118  006A                     	ds	3
  4119  006D                     USBDeviceTasks@i:	
  4120                           
  4121                           ; 1 bytes @ 0xE
  4122  006D                     	ds	1
  4123                           
  4124                           	psect	swtext1
  4125  03E5                     __pswtext1:	
  4126  03E5                     S5267:	
  4127  03E5  3181  29C4         	ljmp	l95
  4128  03E7  3181  29A0         	ljmp	l90
  4129  03E9  3181  29A8         	ljmp	l92
  4130  03EB  3181  29B1         	ljmp	l93
  4131                           
  4132                           	psect	swtext2
  4133  03ED                     __pswtext2:	
  4134  03ED                     S5269:	
  4135  03ED  3182  2ABB         	ljmp	l4729
  4136  03EF  3182  2A97         	ljmp	l4717
  4137  03F1  3182  2AA3         	ljmp	l4721
  4138  03F3  3182  2AAF         	ljmp	l4725
  4139                           
  4140                           	psect	intentry
  4141  0004                     __pintentry:	
  4142 ;; *************** function _SYS_InterruptHigh *****************
  4143 ;; Defined at:
  4144 ;;		line 112 in file "system.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;		None
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 1F/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;Total ram usage:        0 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    9
  4165 ;; This function calls:
  4166 ;;		_USBDeviceTasks
  4167 ;; This function is called by:
  4168 ;;		Interrupt level 1
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172  0004                     _SYS_InterruptHigh:	
  4173                           
  4174                           ;incstack = 0
  4175  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4176                           
  4177                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4178  0005  3180               	pagesel	$
  4179                           
  4180                           ;system.c: 115: USBDeviceTasks();
  4181  0006  318B  238D         	fcall	_USBDeviceTasks
  4182  0008  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4183  0009  0009               	retfie
  4184  000A                     __end_of_SYS_InterruptHigh:	
  4185                           
  4186                           	psect	swtext3
  4187  03B5                     __pswtext3:	
  4188  03B5                     i1S5271:	
  4189  03B5  3188  2877         	ljmp	i1l3747
  4190  03B7  3188  2878         	ljmp	i1l3749
  4191  03B9  3188  2864         	ljmp	i1l530
  4192  03BB  3188  2878         	ljmp	i1l3749
  4193  03BD  3188  2864         	ljmp	i1l530
  4194  03BF  3188  2865         	ljmp	i1l532
  4195  03C1  3188  286B         	ljmp	i1l3735
  4196  03C3  3188  288D         	ljmp	i1l3761
  4197  03C5  3188  286D         	ljmp	i1l3739
  4198  03C7  3188  286C         	ljmp	i1l3737
  4199  03C9  3188  2879         	ljmp	i1l3751
  4200  03CB  3188  2883         	ljmp	i1l541
  4201  03CD  3188  2864         	ljmp	i1l530
  4202                           
  4203                           	psect	swtext4
  4204  0400                     __pswtext4:	
  4205  0400                     i1S5277:	
  4206  0400  318C  2C51         	ljmp	i1l3291
  4207  0402  318C  2C67         	ljmp	i1l182
  4208  0404  318C  2C53         	ljmp	i1l3293
  4209  0406  318C  2C67         	ljmp	i1l182
  4210  0408  318C  2C67         	ljmp	i1l182
  4211  040A  318C  2C67         	ljmp	i1l182
  4212  040C  318C  2C67         	ljmp	i1l182
  4213  040E  318C  2C67         	ljmp	i1l182
  4214  0410  318C  2C67         	ljmp	i1l182
  4215  0412  318C  2C67         	ljmp	i1l182
  4216  0414  318C  2C67         	ljmp	i1l182
  4217  0416  318C  2C67         	ljmp	i1l182
  4218  0418  318C  2C67         	ljmp	i1l182
  4219  041A  318C  2C67         	ljmp	i1l182
  4220  041C  318C  2C67         	ljmp	i1l182
  4221  041E  318C  2C67         	ljmp	i1l182
  4222  0420  318C  2C67         	ljmp	i1l182
  4223  0422  318C  2C67         	ljmp	i1l182
  4224  0424  318C  2C67         	ljmp	i1l182
  4225  0426  318C  2C67         	ljmp	i1l182
  4226  0428  318C  2C67         	ljmp	i1l182
  4227  042A  318C  2C67         	ljmp	i1l182
  4228  042C  318C  2C67         	ljmp	i1l182
  4229  042E  318C  2C67         	ljmp	i1l182
  4230  0430  318C  2C67         	ljmp	i1l182
  4231  0432  318C  2C67         	ljmp	i1l182
  4232  0434  318C  2C67         	ljmp	i1l182
  4233  0436  318C  2C67         	ljmp	i1l182
  4234  0438  318C  2C67         	ljmp	i1l182
  4235  043A  318C  2C67         	ljmp	i1l182
  4236  043C  318C  2C67         	ljmp	i1l182
  4237  043E  318C  2C67         	ljmp	i1l182
  4238  0440  318C  2C67         	ljmp	i1l182
  4239  0442  318C  2C67         	ljmp	i1l182
  4240  0444  318C  2C67         	ljmp	i1l182
  4241  0446  318C  2C67         	ljmp	i1l182
  4242  0448  318C  2C67         	ljmp	i1l182
  4243  044A  318C  2C67         	ljmp	i1l182
  4244  044C  318C  2C67         	ljmp	i1l182
  4245  044E  318C  2C67         	ljmp	i1l182
  4246  0450  318C  2C67         	ljmp	i1l182
  4247  0452  318C  2C67         	ljmp	i1l182
  4248  0454  318C  2C67         	ljmp	i1l182
  4249  0456  318C  2C67         	ljmp	i1l182
  4250  0458  318C  2C67         	ljmp	i1l182
  4251  045A  318C  2C67         	ljmp	i1l182
  4252  045C  318C  2C67         	ljmp	i1l182
  4253  045E  318C  2C67         	ljmp	i1l182
  4254  0460  318C  2C67         	ljmp	i1l182
  4255  0462  318C  2C67         	ljmp	i1l182
  4256  0464  318C  2C67         	ljmp	i1l182
  4257  0466  318C  2C67         	ljmp	i1l182
  4258  0468  318C  2C67         	ljmp	i1l182
  4259  046A  318C  2C67         	ljmp	i1l182
  4260  046C  318C  2C67         	ljmp	i1l182
  4261  046E  318C  2C67         	ljmp	i1l182
  4262  0470  318C  2C67         	ljmp	i1l182
  4263  0472  318C  2C67         	ljmp	i1l182
  4264  0474  318C  2C67         	ljmp	i1l182
  4265  0476  318C  2C67         	ljmp	i1l182
  4266  0478  318C  2C67         	ljmp	i1l182
  4267  047A  318C  2C67         	ljmp	i1l182
  4268  047C  318C  2C67         	ljmp	i1l182
  4269  047E  318C  2C67         	ljmp	i1l182
  4270  0480  318C  2C67         	ljmp	i1l182
  4271  0482  318C  2C67         	ljmp	i1l182
  4272  0484  318C  2C67         	ljmp	i1l182
  4273  0486  318C  2C67         	ljmp	i1l182
  4274  0488  318C  2C67         	ljmp	i1l182
  4275  048A  318C  2C67         	ljmp	i1l182
  4276  048C  318C  2C67         	ljmp	i1l182
  4277  048E  318C  2C67         	ljmp	i1l182
  4278  0490  318C  2C67         	ljmp	i1l182
  4279  0492  318C  2C67         	ljmp	i1l182
  4280  0494  318C  2C67         	ljmp	i1l182
  4281  0496  318C  2C67         	ljmp	i1l182
  4282  0498  318C  2C67         	ljmp	i1l182
  4283  049A  318C  2C67         	ljmp	i1l182
  4284  049C  318C  2C67         	ljmp	i1l182
  4285  049E  318C  2C67         	ljmp	i1l182
  4286  04A0  318C  2C67         	ljmp	i1l182
  4287  04A2  318C  2C67         	ljmp	i1l182
  4288  04A4  318C  2C67         	ljmp	i1l182
  4289  04A6  318C  2C67         	ljmp	i1l182
  4290  04A8  318C  2C67         	ljmp	i1l182
  4291  04AA  318C  2C67         	ljmp	i1l182
  4292  04AC  318C  2C67         	ljmp	i1l182
  4293  04AE  318C  2C67         	ljmp	i1l182
  4294  04B0  318C  2C67         	ljmp	i1l182
  4295  04B2  318C  2C67         	ljmp	i1l182
  4296  04B4  318C  2C67         	ljmp	i1l182
  4297  04B6  318C  2C67         	ljmp	i1l182
  4298  04B8  318C  2C67         	ljmp	i1l182
  4299  04BA  318C  2C67         	ljmp	i1l182
  4300  04BC  318C  2C67         	ljmp	i1l182
  4301  04BE  318C  2C67         	ljmp	i1l182
  4302  04C0  318C  2C67         	ljmp	i1l182
  4303  04C2  318C  2C67         	ljmp	i1l182
  4304  04C4  318C  2C67         	ljmp	i1l182
  4305  04C6  318C  2C67         	ljmp	i1l182
  4306  04C8  318C  2C67         	ljmp	i1l182
  4307  04CA  318C  2C67         	ljmp	i1l182
  4308  04CC  318C  2C67         	ljmp	i1l182
  4309  04CE  318C  2C67         	ljmp	i1l182
  4310  04D0  318C  2C67         	ljmp	i1l182
  4311  04D2  318C  2C67         	ljmp	i1l182
  4312  04D4  318C  2C67         	ljmp	i1l182
  4313  04D6  318C  2C67         	ljmp	i1l182
  4314  04D8  318C  2C67         	ljmp	i1l182
  4315  04DA  318C  2C67         	ljmp	i1l182
  4316  04DC  318C  2C67         	ljmp	i1l182
  4317  04DE  318C  2C67         	ljmp	i1l182
  4318  04E0  318C  2C67         	ljmp	i1l182
  4319  04E2  318C  2C67         	ljmp	i1l182
  4320  04E4  318C  2C35         	ljmp	i1l3279
  4321  04E6  318C  2C4C         	ljmp	i1l3289
  4322  04E8  318C  2C47         	ljmp	i1l3287
  4323                           
  4324                           	psect	swtext5
  4325  03F5                     __pswtext5:	
  4326  03F5                     i1S5279:	
  4327  03F5  318E  2E12         	ljmp	i1l95
  4328  03F7  318D  2DEB         	ljmp	i1l90
  4329  03F9  318D  2DF4         	ljmp	i1l92
  4330  03FB  318D  2DFE         	ljmp	i1l93
  4331                           
  4332                           	psect	text34
  4333  05B5                     __ptext34:	
  4334 ;; *************** function _USBCheckHIDRequest *****************
  4335 ;; Defined at:
  4336 ;;		line 153 in file "usb/usb_device_hid.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 1F/0
  4347 ;;		On exit  : 1E/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    1
  4357 ;; This function calls:
  4358 ;;		_USBHIDCBSetIdleRateHandler
  4359 ;;		_USBHIDCBSetReportHandler
  4360 ;; This function is called by:
  4361 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           
  4366                           ;psect for function _USBCheckHIDRequest
  4367  05B5                     _USBCheckHIDRequest:	
  4368  05B5                     i1l3205:	
  4369                           ;incstack = 0
  4370                           ; Regs used in _USBCheckHIDRequest: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4371                           
  4372                           
  4373                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  4374  05B5  0840               	movf	64,w	;volatile
  4375  05B6  391F               	andlw	31
  4376  05B7  3A01               	xorlw	1
  4377  05B8  1D03               	btfss	3,2
  4378  05B9  0008               	return
  4379                           
  4380                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
  4381  05BA  0844               	movf	68,w	;volatile
  4382  05BB  1D03               	btfss	3,2
  4383  05BC  0008               	return
  4384                           
  4385                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
  4386  05BD  3006               	movlw	6
  4387  05BE  0641               	xorwf	65,w	;volatile
  4388  05BF  1903               	btfsc	3,2
  4389  05C0  2DD6               	goto	i1l3225
  4390  05C1  2DE1               	goto	i1l3227
  4391  05C2                     i1l3217:	
  4392                           
  4393                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
  4394  05C2  0B5E               	decfsz	_USBActiveConfiguration,w	;volatile
  4395  05C3  2DE1               	goto	i1l3227
  4396                           
  4397                           ;usb_device_hid.c: 169: {
  4398                           ;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t*)&configDescriptor1 + 18
      +                          ; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].info.Val = 0x40 | 0x80 | 0x0
      +                          0; };
  4399  05C4  3085               	movlw	low ((_configDescriptor1| (0+32768)+18))
  4400  05C5  0021               	movlb	1	; select bank1
  4401  05C6  00AF               	movwf	_inPipes^(0+128)	;volatile
  4402  05C7  3090               	movlw	high ((_configDescriptor1| (0+32768)+18))
  4403  05C8  00B0               	movwf	(_inPipes^(0+128)+1)	;volatile
  4404  05C9  3009               	movlw	9
  4405  05CA  2DD1               	goto	L9
  4406  05CB                     i1l3221:	
  4407                           
  4408                           ;usb_device_hid.c: 178: {
  4409                           ;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t*)&hid_rpt01; inPipes[0].
      +                          wCount.Val = 63; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
  4410  05CB  3000               	movlw	low (_hid_rpt01| (0+32768))
  4411  05CC  0021               	movlb	1	; select bank1
  4412  05CD  00AF               	movwf	_inPipes^(0+128)	;volatile
  4413  05CE  3090               	movlw	high (_hid_rpt01| (0+32768))
  4414  05CF  00B0               	movwf	(_inPipes^(0+128)+1)	;volatile
  4415  05D0  303F               	movlw	63
  4416  05D1                     L9:	
  4417  05D1  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  4418  05D2  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4419  05D3  30C0               	movlw	192
  4420  05D4  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  4421                           
  4422                           ;usb_device_hid.c: 183: }
  4423                           ;usb_device_hid.c: 184: break;
  4424  05D5  2DE1               	goto	i1l3227
  4425  05D6                     i1l3225:	
  4426  05D6  0843               	movf	67,w	;volatile
  4427                           
  4428                           ; Switch size 1, requested type "speed"
  4429                           ; Number of cases is 3, Range of values is 33 to 35
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte           10     6 (average)
  4433                           ; direct_byte           15     9 (fixed)
  4434                           ; jumptable            263     9 (fixed)
  4435                           ;	Chosen strategy is simple_byte
  4436  05D7  3A21               	xorlw	33	; case 33
  4437  05D8  1903               	skipnz
  4438  05D9  2DC2               	goto	i1l3217
  4439  05DA  3A03               	xorlw	3	; case 34
  4440  05DB  1903               	skipnz
  4441  05DC  2DCB               	goto	i1l3221
  4442  05DD  3A01               	xorlw	1	; case 35
  4443  05DE  1903               	skipnz
  4444  05DF  2DE1               	goto	i1l3227
  4445  05E0  2DE1               	goto	i1l3227
  4446  05E1                     i1l3227:	
  4447                           
  4448                           ;usb_device_hid.c: 199: }
  4449                           ;usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
  4450  05E1  0020               	movlb	0	; select bank0
  4451  05E2  0E40               	swapf	64,w	;volatile
  4452  05E3  0C89               	rrf	9,f
  4453  05E4  3903               	andlw	3
  4454  05E5  3A01               	xorlw	1
  4455  05E6  1D03               	btfss	3,2
  4456  05E7  0008               	return
  4457  05E8  2E13               	goto	i1l3253
  4458  05E9                     i1l3231:	
  4459                           
  4460                           ;usb_device_hid.c: 215: USBHIDCBSetReportHandler();
  4461  05E9  2E2A               	ljmp	i1l3005
  4462  05EA                     i1l3233:	
  4463                           ;usb_device_hid.c: 217: break;
  4464                           
  4465                           
  4466                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  4467  05EA  30DD               	movlw	low _idle_rate
  4468  05EB  0021               	movlb	1	; select bank1
  4469  05EC  00AF               	movwf	_inPipes^(0+128)	;volatile
  4470  05ED  3000               	movlw	high _idle_rate
  4471  05EE  00B0               	movwf	(_inPipes+1)^(0+128)	;volatile
  4472  05EF  3001               	movlw	1
  4473  05F0  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  4474  05F1  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4475  05F2  30C1               	movlw	193
  4476  05F3  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  4477                           
  4478                           ;usb_device_hid.c: 223: break;
  4479  05F4  0008               	return
  4480  05F5                     i1l3239:	
  4481                           
  4482                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
  4483  05F5  3080               	movlw	128
  4484  05F6  0021               	movlb	1	; select bank1
  4485  05F7  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  4486                           
  4487                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
  4488  05F8  0020               	movlb	0	; select bank0
  4489  05F9  0843               	movf	67,w	;volatile
  4490  05FA  0021               	movlb	1	; select bank1
  4491  05FB  00DD               	movwf	_idle_rate^(0+128)
  4492                           
  4493                           ;usb_device_hid.c: 227: USBHIDCBSetIdleRateHandler(SetupPkt.W_Value.byte.LB, idle_rate);
  4494  05FC  00F0               	movwf	USBHIDCBSetIdleRateHandler@newIdleRate
  4495  05FD  0020               	movlb	0	; select bank0
  4496  05FE  0842               	movf	66,w	;volatile
  4497  05FF  2E21               	ljmp	_USBHIDCBSetIdleRateHandler
  4498  0600                     i1l3243:	
  4499                           ;usb_device_hid.c: 228: break;
  4500                           
  4501                           
  4502                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
  4503  0600  30DC               	movlw	low _active_protocol
  4504  0601  0021               	movlb	1	; select bank1
  4505  0602  00AF               	movwf	_inPipes^(0+128)	;volatile
  4506  0603  3000               	movlw	high _active_protocol
  4507  0604  00B0               	movwf	(_inPipes+1)^(0+128)	;volatile
  4508  0605  3001               	movlw	1
  4509  0606  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  4510  0607  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  4511  0608  3081               	movlw	129
  4512  0609  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  4513                           
  4514                           ;usb_device_hid.c: 234: break;
  4515  060A  0008               	return
  4516  060B                     i1l3249:	
  4517                           
  4518                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
  4519  060B  3080               	movlw	128
  4520  060C  0021               	movlb	1	; select bank1
  4521  060D  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  4522                           
  4523                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
  4524  060E  0020               	movlb	0	; select bank0
  4525  060F  0842               	movf	66,w	;volatile
  4526  0610  0021               	movlb	1	; select bank1
  4527  0611  00DC               	movwf	_active_protocol^(0+128)
  4528                           
  4529                           ;usb_device_hid.c: 238: break;
  4530  0612  0008               	return
  4531  0613                     i1l3253:	
  4532  0613  0841               	movf	65,w	;volatile
  4533                           
  4534                           ; Switch size 1, requested type "speed"
  4535                           ; Number of cases is 6, Range of values is 1 to 11
  4536                           ; switch strategies available:
  4537                           ; Name         Instructions Cycles
  4538                           ; direct_byte           31     9 (fixed)
  4539                           ; simple_byte           19    10 (average)
  4540                           ; jumptable            263     9 (fixed)
  4541                           ;	Chosen strategy is direct_byte
  4542  0614  3EFF               	addlw	-1
  4543  0615  1C03               	skipc
  4544  0616  0008               	return
  4545  0617  0084               	movwf	4
  4546  0618  300B               	movlw	11
  4547  0619  0204               	subwf	4,w
  4548  061A  1803               	skipnc
  4549  061B  0008               	return
  4550  061C  3183               	movlp	high i1S5281
  4551  061D  3504               	lslf	4,w
  4552  061E  3ECF               	addlw	low i1S5281
  4553  061F  0082               	movwf	2
  4554  0620                     i1l602:	
  4555  0620  0008               	return
  4556  0621                     __end_of_USBCheckHIDRequest:	
  4557  0621                     __ptext36:	
  4558 ;; *************** function _USBHIDCBSetIdleRateHandler *****************
  4559 ;; Defined at:
  4560 ;;		line 464 in file "demo_src/app_device_keyboard.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  reportID        1    wreg     unsigned char 
  4563 ;;  newIdleRate     1    0[COMMON] unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  reportID        1    1[COMMON] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 1F/0
  4572 ;;		On exit  : 1E/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_USBCheckHIDRequest
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _USBHIDCBSetIdleRateHandler
  4590  0621                     _USBHIDCBSetIdleRateHandler:	
  4591                           
  4592                           ;incstack = 0
  4593                           ; Regs used in _USBHIDCBSetIdleRateHandler: [wreg+status,2+status,0]
  4594                           ;USBHIDCBSetIdleRateHandler@reportID stored from wreg
  4595  0621  00F1               	movwf	USBHIDCBSetIdleRateHandler@reportID
  4596                           
  4597                           ;app_device_keyboard.c: 469: if(reportID == 0)
  4598  0622  0871               	movf	USBHIDCBSetIdleRateHandler@reportID,w
  4599  0623  1D03               	btfss	3,2
  4600  0624  0008               	return
  4601                           
  4602                           ;app_device_keyboard.c: 470: {
  4603                           ;app_device_keyboard.c: 471: keyboardIdleRate = newIdleRate;
  4604  0625  0870               	movf	USBHIDCBSetIdleRateHandler@newIdleRate,w
  4605  0626  0021               	movlb	1	; select bank1
  4606  0627  00C6               	movwf	_keyboardIdleRate^(0+128)
  4607  0628  01C7               	clrf	(_keyboardIdleRate+1)^(0+128)
  4608  0629  0008               	return
  4609  062A                     __end_of_USBHIDCBSetIdleRateHandler:	
  4610  062A                     __ptext35:	
  4611 ;; *************** function _USBHIDCBSetReportHandler *****************
  4612 ;; Defined at:
  4613 ;;		line 453 in file "demo_src/app_device_keyboard.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg
  4622 ;; Tracked objects:
  4623 ;;		On entry : 1F/0
  4624 ;;		On exit  : 1F/1
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_USBCheckHIDRequest
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _USBHIDCBSetReportHandler
  4642  062A                     _USBHIDCBSetReportHandler:	
  4643  062A                     i1l3005:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _USBHIDCBSetReportHandler: [wreg]
  4646                           
  4647                           
  4648                           ;app_device_keyboard.c: 458: {outPipes[0].pDst.bRam = (uint8_t*)&CtrlTrfData;outPipes[0]
      +                          .wCount.Val = 8;outPipes[0].pFunc = USBHIDCBSetReportComplete;outPipes[0].info.bits.busy
      +                           = 1; };
  4649  062A  3048               	movlw	72
  4650  062B  0021               	movlb	1	; select bank1
  4651  062C  00A8               	movwf	_outPipes^(0+128)	;volatile
  4652  062D  3008               	movlw	8
  4653  062E  00AB               	movwf	(_outPipes^(0+128)+3)	;volatile
  4654  062F  01AC               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  4655  0630  3008               	movlw	high _USBHIDCBSetReportComplete
  4656  0631  00AE               	movwf	((low ((_outPipes| 0+5))+1))^(0+128)	;volatile
  4657  0632  3013               	movlw	low _USBHIDCBSetReportComplete
  4658  0633  00AD               	movwf	(low ((_outPipes| 0+5)))^(0+128)	;volatile
  4659  0634  17AA               	bsf	(_outPipes^(0+128)+2),7	;volatile
  4660  0635  0008               	return
  4661  0636                     __end_of_USBHIDCBSetReportHandler:	
  4662                           
  4663                           	psect	swtext6
  4664  03CF                     __pswtext6:	
  4665  03CF                     i1S5281:	
  4666  03CF  3186  2E20         	ljmp	i1l602
  4667  03D1  3185  2DEA         	ljmp	i1l3233
  4668  03D3  3186  2E00         	ljmp	i1l3243
  4669  03D5  3186  2E20         	ljmp	i1l602
  4670  03D7  3186  2E20         	ljmp	i1l602
  4671  03D9  3186  2E20         	ljmp	i1l602
  4672  03DB  3186  2E20         	ljmp	i1l602
  4673  03DD  3186  2E20         	ljmp	i1l602
  4674  03DF  3185  2DE9         	ljmp	i1l3231
  4675  03E1  3185  2DF5         	ljmp	i1l3239
  4676  03E3  3186  2E0B         	ljmp	i1l3249
  4677                           
  4678                           	psect	swtext7
  4679  0636                     __pswtext7:	
  4680  0636                     i1S5285:	
  4681  0636  318D  2D49         	ljmp	i1l3083
  4682  0638  318D  2D50         	ljmp	i1l26
  4683  063A  318D  2D58         	ljmp	i1l31
  4684  063C  318D  2D60         	ljmp	i1l36
  4685                           
  4686                           	psect	swtext8
  4687  063E                     __pswtext8:	
  4688  063E                     i1S5289:	
  4689  063E  318D  2D70         	ljmp	i1l3101
  4690  0640  318D  2D77         	ljmp	i1l44
  4691  0642  318D  2D7F         	ljmp	i1l49
  4692  0644  318D  2D87         	ljmp	i1l54
  4693                           
  4694                           	psect	swtext9
  4695  0646                     __pswtext9:	
  4696  0646                     i1S5293:	
  4697  0646  318D  2D97         	ljmp	i1l3119
  4698  0648  318D  2DA1         	ljmp	i1l62
  4699  064A  318D  2DAD         	ljmp	i1l67
  4700  064C  318D  2DB5         	ljmp	i1l72
  4701                           
  4702                           	psect	text39
  4703  02C7                     __ptext39:	
  4704 ;; *************** function _APP_KeyboardInit *****************
  4705 ;; Defined at:
  4706 ;;		line 270 in file "demo_src/app_device_keyboard.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 1F/0
  4717 ;;		On exit  : 1F/1
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    2
  4727 ;; This function calls:
  4728 ;;		_USBEnableEndpoint
  4729 ;;		i1_USBTransferOnePacket
  4730 ;; This function is called by:
  4731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function _APP_KeyboardInit
  4737  02C7                     _APP_KeyboardInit:	
  4738  02C7                     i1l3197:	
  4739                           ;incstack = 0
  4740                           ; Regs used in _APP_KeyboardInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4741                           
  4742                           
  4743                           ;app_device_keyboard.c: 274: keyboard.lastINTransmission = 0;
  4744  02C7  0021               	movlb	1	; select bank1
  4745  02C8  30F4               	movlw	244
  4746  02C9  01B4               	clrf	_keyboard^(0+128)
  4747  02CA  01B5               	clrf	(_keyboard+1)^(0+128)
  4748                           
  4749                           ;app_device_keyboard.c: 277: keyboardIdleRate = 500;
  4750  02CB  00C6               	movwf	_keyboardIdleRate^(0+128)
  4751  02CC  3001               	movlw	1
  4752  02CD  00C7               	movwf	(_keyboardIdleRate^(0+128)+1)
  4753  02CE                     i1l662:	
  4754                           ;app_device_keyboard.c: 282: while(OldSOFCount != SOFCounter)
  4755                           
  4756  02CE  0020               	movlb	0	; select bank0
  4757  02CF  0853               	movf	_SOFCounter+1,w	;volatile
  4758  02D0  0021               	movlb	1	; select bank1
  4759  02D1  0643               	xorwf	(_OldSOFCount+1)^(0+128),w
  4760  02D2  1D03               	skipz
  4761  02D3  2AD8               	goto	u191_25
  4762  02D4  0020               	movlb	0	; select bank0
  4763  02D5  0852               	movf	_SOFCounter,w	;volatile
  4764  02D6  0021               	movlb	1	; select bank1
  4765  02D7  0642               	xorwf	_OldSOFCount^(0+128),w
  4766  02D8                     u191_25:	
  4767  02D8  1903               	btfsc	3,2
  4768  02D9  2AE3               	goto	i1l3203
  4769                           
  4770                           ;app_device_keyboard.c: 283: {
  4771                           ;app_device_keyboard.c: 284: OldSOFCount = SOFCounter;
  4772  02DA  0020               	movlb	0	; select bank0
  4773  02DB  0853               	movf	_SOFCounter+1,w	;volatile
  4774  02DC  0021               	movlb	1	; select bank1
  4775  02DD  00C3               	movwf	(_OldSOFCount+1)^(0+128)
  4776  02DE  0020               	movlb	0	; select bank0
  4777  02DF  0852               	movf	_SOFCounter,w	;volatile
  4778  02E0  0021               	movlb	1	; select bank1
  4779  02E1  00C2               	movwf	_OldSOFCount^(0+128)
  4780  02E2  2ACE               	goto	i1l662
  4781  02E3                     i1l3203:	
  4782                           
  4783                           ;app_device_keyboard.c: 285: }
  4784                           ;app_device_keyboard.c: 288: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
  4785  02E3  301E               	movlw	30
  4786  02E4  00F4               	movwf	USBEnableEndpoint@options
  4787  02E5  3001               	movlw	1
  4788  02E6  22F6  3182         	fcall	_USBEnableEndpoint
  4789  02E8  3020               	movlw	32
  4790                           
  4791                           ;app_device_keyboard.c: 291: keyboard.lastOUTTransmission = USBTransferOnePacket(1,0,(ui
      +                          nt8_t*)&outputReport,sizeof(outputReport));
  4792  02E9  01F0               	clrf	i1USBTransferOnePacket@dir
  4793  02EA  00F1               	movwf	i1USBTransferOnePacket@data
  4794  02EB  3001               	movlw	1
  4795  02EC  00F2               	movwf	i1USBTransferOnePacket@data+1
  4796  02ED  01F3               	clrf	i1USBTransferOnePacket@len
  4797  02EE  0AF3               	incf	i1USBTransferOnePacket@len,f
  4798  02EF  2340               	fcall	i1_USBTransferOnePacket
  4799  02F0  0871               	movf	?i1_USBTransferOnePacket+1,w
  4800  02F1  0021               	movlb	1	; select bank1
  4801  02F2  00B7               	movwf	((low ((_keyboard| 0+2))+1))^(0+128)
  4802  02F3  0870               	movf	?i1_USBTransferOnePacket,w
  4803  02F4  00B6               	movwf	(low ((_keyboard| 0+2)))^(0+128)
  4804  02F5  0008               	return
  4805  02F6                     __end_of_APP_KeyboardInit:	
  4806  02F6                     __ptext41:	
  4807 ;; *************** function _USBEnableEndpoint *****************
  4808 ;; Defined at:
  4809 ;;		line 878 in file "usb/usb_device.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  ep              1    wreg     unsigned char 
  4812 ;;  options         1    4[COMMON] unsigned char 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  ep              1    9[COMMON] unsigned char 
  4815 ;;  p               2    7[COMMON] PTR unsigned char 
  4816 ;;		 -> UEP0(1), 
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4821 ;; Tracked objects:
  4822 ;;		On entry : 1F/1
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;Total ram usage:        6 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		_USBConfigureEndpoint
  4835 ;; This function is called by:
  4836 ;;		_APP_KeyboardInit
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           
  4841                           ;psect for function _USBEnableEndpoint
  4842  02F6                     _USBEnableEndpoint:	
  4843                           
  4844                           ;incstack = 0
  4845                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4846                           ;USBEnableEndpoint@ep stored from wreg
  4847  02F6  00F9               	movwf	USBEnableEndpoint@ep
  4848                           
  4849                           ;usb_device.c: 880: unsigned char* p;
  4850                           ;usb_device.c: 884: if(options & 0x04)
  4851  02F7  1D74               	btfss	USBEnableEndpoint@options,2
  4852  02F8  2AFC               	goto	i1l2997
  4853                           
  4854                           ;usb_device.c: 885: {
  4855                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  4856  02F9  01F0               	clrf	USBConfigureEndpoint@direction
  4857  02FA  2313  3182         	fcall	_USBConfigureEndpoint
  4858  02FC                     i1l2997:	
  4859                           
  4860                           ;usb_device.c: 887: }
  4861                           ;usb_device.c: 888: if(options & 0x02)
  4862  02FC  1CF4               	btfss	USBEnableEndpoint@options,1
  4863  02FD  2B02               	goto	i1l3001
  4864                           
  4865                           ;usb_device.c: 889: {
  4866                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  4867  02FE  01F0               	clrf	USBConfigureEndpoint@direction
  4868  02FF  0AF0               	incf	USBConfigureEndpoint@direction,f
  4869  0300  0879               	movf	USBEnableEndpoint@ep,w
  4870  0301  2313               	fcall	_USBConfigureEndpoint
  4871  0302                     i1l3001:	
  4872                           
  4873                           ;usb_device.c: 891: }
  4874                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  4875  0302  0879               	movf	USBEnableEndpoint@ep,w
  4876  0303  3E98               	addlw	152
  4877  0304  00F5               	movwf	??_USBEnableEndpoint
  4878  0305  300E               	movlw	14
  4879  0306  01F6               	clrf	??_USBEnableEndpoint+1
  4880  0307  3DF6               	addwfc	??_USBEnableEndpoint+1,f
  4881  0308  0875               	movf	??_USBEnableEndpoint,w
  4882  0309  00F7               	movwf	USBEnableEndpoint@p
  4883  030A  0876               	movf	??_USBEnableEndpoint+1,w
  4884  030B  00F8               	movwf	USBEnableEndpoint@p+1
  4885                           
  4886                           ;usb_device.c: 901: *p = options;
  4887  030C  0877               	movf	USBEnableEndpoint@p,w
  4888  030D  0086               	movwf	6
  4889  030E  0878               	movf	USBEnableEndpoint@p+1,w
  4890  030F  0087               	movwf	7
  4891  0310  0874               	movf	USBEnableEndpoint@options,w
  4892  0311  0081               	movwf	1
  4893  0312  0008               	return
  4894  0313                     __end_of_USBEnableEndpoint:	
  4895  0313                     __ptext42:	
  4896 ;; *************** function _USBConfigureEndpoint *****************
  4897 ;; Defined at:
  4898 ;;		line 1543 in file "usb/usb_device.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;  EPNum           1    wreg     unsigned char 
  4901 ;;  direction       1    0[COMMON] unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  EPNum           1    2[COMMON] unsigned char 
  4904 ;;  handle          1    3[COMMON] PTR volatile struct __BD
  4905 ;;		 -> BDT(32), 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/1
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4915 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4919 ;;Total ram usage:        4 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_USBEnableEndpoint
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _USBConfigureEndpoint
  4930  0313                     _USBConfigureEndpoint:	
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
  4934                           ;USBConfigureEndpoint@EPNum stored from wreg
  4935  0313  00F2               	movwf	USBConfigureEndpoint@EPNum
  4936                           
  4937                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  4938                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  4939  0314  3020               	movlw	32
  4940  0315  00F3               	movwf	USBConfigureEndpoint@handle
  4941                           
  4942                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  4943  0316  0870               	movf	USBConfigureEndpoint@direction,w
  4944  0317  00F1               	movwf	??_USBConfigureEndpoint
  4945  0318  35F1               	lslf	??_USBConfigureEndpoint,f
  4946  0319  0872               	movf	USBConfigureEndpoint@EPNum,w
  4947  031A  0709               	addwf	9,w
  4948  031B  0709               	addwf	9,w
  4949  031C  0771               	addwf	??_USBConfigureEndpoint,w
  4950  031D  0709               	addwf	9,w
  4951  031E  0709               	addwf	9,w
  4952  031F  07F3               	addwf	USBConfigureEndpoint@handle,f
  4953                           
  4954                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  4955  0320  0873               	movf	USBConfigureEndpoint@handle,w
  4956  0321  0086               	movwf	6
  4957  0322  0187               	clrf	7
  4958  0323  1381               	bcf	1,7
  4959                           
  4960                           ;usb_device.c: 1557: if(direction == 0)
  4961  0324  0870               	movf	USBConfigureEndpoint@direction,w
  4962  0325  1D03               	btfss	3,2
  4963  0326  2B2F               	goto	i1l2987
  4964                           
  4965                           ;usb_device.c: 1558: {
  4966                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  4967  0327  3572               	lslf	USBConfigureEndpoint@EPNum,w
  4968  0328  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  4969  0329  0086               	movwf	6
  4970  032A  0873               	movf	USBConfigureEndpoint@handle,w
  4971  032B  3FC0               	movwi [0]fsr1
  4972  032C  3000               	movlw	0
  4973  032D  3FC1               	movwi [1]fsr1
  4974                           
  4975                           ;usb_device.c: 1560: }
  4976  032E  2B37               	goto	i1l2989
  4977  032F                     i1l2987:	
  4978                           
  4979                           ;usb_device.c: 1561: else
  4980                           ;usb_device.c: 1562: {
  4981                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  4982  032F  3572               	lslf	USBConfigureEndpoint@EPNum,w
  4983  0330  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  4984  0331  0086               	movwf	6
  4985  0332  0187               	clrf	7
  4986  0333  0873               	movf	USBConfigureEndpoint@handle,w
  4987  0334  3FC0               	movwi [0]fsr1
  4988  0335  3000               	movlw	0
  4989  0336  3FC1               	movwi [1]fsr1
  4990  0337                     i1l2989:	
  4991                           
  4992                           ;usb_device.c: 1564: }
  4993                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  4994  0337  0873               	movf	USBConfigureEndpoint@handle,w
  4995  0338  0086               	movwf	6
  4996  0339  0187               	clrf	7
  4997  033A  1301               	bcf	1,6
  4998                           
  4999                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  5000  033B  0873               	movf	USBConfigureEndpoint@handle,w
  5001  033C  3E04               	addlw	4
  5002  033D  0086               	movwf	6
  5003  033E  1701               	bsf	1,6
  5004  033F  0008               	return
  5005  0340                     __end_of_USBConfigureEndpoint:	
  5006  0340                     __ptext40:	
  5007 ;; *************** function i1_USBTransferOnePacket *****************
  5008 ;; Defined at:
  5009 ;;		line 995 in file "usb/usb_device.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  ep              1    wreg     unsigned char 
  5012 ;;  dir             1    0[COMMON] unsigned char 
  5013 ;;  data            2    1[COMMON] PTR unsigned char 
  5014 ;;		 -> inputReport(8), outputReport(1), 
  5015 ;;  len             1    3[COMMON] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  ep              1    8[COMMON] unsigned char 
  5018 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
  5019 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  2    0[COMMON] PTR void 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/1
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5032 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5033 ;;Total ram usage:       11 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_APP_KeyboardInit
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           
  5043                           ;psect for function i1_USBTransferOnePacket
  5044  0340                     i1_USBTransferOnePacket:	
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  5048                           ;i1USBTransferOnePacket@ep stored from wreg
  5049  0340  00F8               	movwf	i1USBTransferOnePacket@ep
  5050                           
  5051                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  5052                           ;usb_device.c: 1000: if(dir != 0)
  5053  0341  0870               	movf	i1USBTransferOnePacket@dir,w
  5054  0342  1903               	btfsc	3,2
  5055  0343  2B4C               	goto	i1l3053
  5056                           
  5057                           ;usb_device.c: 1001: {
  5058                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  5059  0344  3578               	lslf	i1USBTransferOnePacket@ep,w
  5060  0345  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5061  0346  0086               	movwf	6
  5062  0347  0187               	clrf	7
  5063  0348  3F40               	moviw [0]fsr1
  5064  0349  00F9               	movwf	i1USBTransferOnePacket@handle
  5065  034A  3F41               	moviw [1]fsr1
  5066  034B  2B53               	goto	L19
  5067  034C                     i1l3053:	
  5068                           ;usb_device.c: 1004: }
  5069                           
  5070                           
  5071                           ;usb_device.c: 1005: else
  5072                           ;usb_device.c: 1006: {
  5073                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  5074  034C  3578               	lslf	i1USBTransferOnePacket@ep,w
  5075  034D  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  5076  034E  0086               	movwf	6
  5077  034F  0187               	clrf	7
  5078  0350  3F40               	moviw [0]fsr1
  5079  0351  00F9               	movwf	i1USBTransferOnePacket@handle
  5080  0352  3F41               	moviw [1]fsr1
  5081  0353                     L19:	
  5082  0353  00FA               	movwf	i1USBTransferOnePacket@handle+1
  5083                           
  5084                           ;usb_device.c: 1009: }
  5085                           ;usb_device.c: 1013: if(handle == 0)
  5086  0354  0479               	iorwf	i1USBTransferOnePacket@handle,w
  5087  0355  1D03               	btfss	3,2
  5088  0356  2B5A               	goto	i1l3061
  5089                           
  5090                           ;usb_device.c: 1014: {
  5091                           ;usb_device.c: 1015: return 0;
  5092  0357  01F0               	clrf	?i1_USBTransferOnePacket
  5093  0358  01F1               	clrf	?i1_USBTransferOnePacket+1
  5094  0359  0008               	return
  5095  035A                     i1l3061:	
  5096                           
  5097                           ;usb_device.c: 1016: }
  5098                           ;usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  5099  035A  0871               	movf	i1USBTransferOnePacket@data,w
  5100  035B  00F4               	movwf	??i1_USBTransferOnePacket
  5101  035C  307F               	movlw	127
  5102  035D  0572               	andwf	i1USBTransferOnePacket@data+1,w
  5103  035E  00F5               	movwf	??i1_USBTransferOnePacket+1
  5104  035F  0879               	movf	i1USBTransferOnePacket@handle,w
  5105  0360  0086               	movwf	6
  5106  0361  087A               	movf	i1USBTransferOnePacket@handle+1,w
  5107  0362  0087               	movwf	7
  5108  0363  3142               	addfsr 1,2
  5109  0364  0874               	movf	??i1_USBTransferOnePacket,w
  5110  0365  3FC0               	movwi [0]fsr1
  5111  0366  0875               	movf	??i1_USBTransferOnePacket+1,w
  5112  0367  3FC1               	movwi [1]fsr1
  5113                           
  5114                           ;usb_device.c: 1030: handle->CNT = len;
  5115  0368  0879               	movf	i1USBTransferOnePacket@handle,w
  5116  0369  3E01               	addlw	1
  5117  036A  00F4               	movwf	??i1_USBTransferOnePacket
  5118  036B  3000               	movlw	0
  5119  036C  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
  5120  036D  00F5               	movwf	??i1_USBTransferOnePacket+1
  5121  036E  0874               	movf	??i1_USBTransferOnePacket,w
  5122  036F  0086               	movwf	6
  5123  0370  0875               	movf	??i1_USBTransferOnePacket+1,w
  5124  0371  0087               	movwf	7
  5125  0372  0873               	movf	i1USBTransferOnePacket@len,w
  5126  0373  0081               	movwf	1
  5127                           
  5128                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  5129  0374  0879               	movf	i1USBTransferOnePacket@handle,w
  5130  0375  0086               	movwf	6
  5131  0376  087A               	movf	i1USBTransferOnePacket@handle+1,w
  5132  0377  0087               	movwf	7
  5133  0378  3040               	movlw	64
  5134  0379  0581               	andwf	1,f
  5135                           
  5136                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  5137  037A  0879               	movf	i1USBTransferOnePacket@handle,w
  5138  037B  0086               	movwf	6
  5139  037C  087A               	movf	i1USBTransferOnePacket@handle+1,w
  5140  037D  0087               	movwf	7
  5141  037E  1581               	bsf	1,3
  5142                           
  5143                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  5144  037F  0879               	movf	i1USBTransferOnePacket@handle,w
  5145  0380  0086               	movwf	6
  5146  0381  087A               	movf	i1USBTransferOnePacket@handle+1,w
  5147  0382  0087               	movwf	7
  5148  0383  1781               	bsf	1,7
  5149                           
  5150                           ;usb_device.c: 1036: if(dir != 0)
  5151  0384  0870               	movf	i1USBTransferOnePacket@dir,w
  5152  0385  1903               	btfsc	3,2
  5153  0386  2B9C               	goto	i1l3071
  5154                           
  5155                           ;usb_device.c: 1037: {
  5156                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  5157  0387  3578               	lslf	i1USBTransferOnePacket@ep,w
  5158  0388  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5159  0389  0086               	movwf	6
  5160  038A  0187               	clrf	7
  5161  038B  3F40               	moviw [0]fsr1
  5162  038C  00F4               	movwf	??i1_USBTransferOnePacket
  5163  038D  3F41               	moviw [1]fsr1
  5164  038E  00F5               	movwf	??i1_USBTransferOnePacket+1
  5165  038F  3004               	movlw	4
  5166  0390  0674               	xorwf	??i1_USBTransferOnePacket,w
  5167  0391  00F6               	movwf	??i1_USBTransferOnePacket+2
  5168  0392  0875               	movf	??i1_USBTransferOnePacket+1,w
  5169  0393  00F7               	movwf	??i1_USBTransferOnePacket+3
  5170  0394  3578               	lslf	i1USBTransferOnePacket@ep,w
  5171  0395  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  5172  0396  0086               	movwf	6
  5173  0397  0876               	movf	??i1_USBTransferOnePacket+2,w
  5174  0398  3FC0               	movwi [0]fsr1
  5175  0399  0877               	movf	??i1_USBTransferOnePacket+3,w
  5176  039A  3FC1               	movwi [1]fsr1
  5177                           
  5178                           ;usb_device.c: 1040: }
  5179  039B  2BB0               	goto	i1l3073
  5180  039C                     i1l3071:	
  5181                           
  5182                           ;usb_device.c: 1041: else
  5183                           ;usb_device.c: 1042: {
  5184                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  5185  039C  3578               	lslf	i1USBTransferOnePacket@ep,w
  5186  039D  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  5187  039E  0086               	movwf	6
  5188  039F  0187               	clrf	7
  5189  03A0  3F40               	moviw [0]fsr1
  5190  03A1  00F4               	movwf	??i1_USBTransferOnePacket
  5191  03A2  3F41               	moviw [1]fsr1
  5192  03A3  00F5               	movwf	??i1_USBTransferOnePacket+1
  5193  03A4  3004               	movlw	4
  5194  03A5  0674               	xorwf	??i1_USBTransferOnePacket,w
  5195  03A6  00F6               	movwf	??i1_USBTransferOnePacket+2
  5196  03A7  0875               	movf	??i1_USBTransferOnePacket+1,w
  5197  03A8  00F7               	movwf	??i1_USBTransferOnePacket+3
  5198  03A9  3578               	lslf	i1USBTransferOnePacket@ep,w
  5199  03AA  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  5200  03AB  0086               	movwf	6
  5201  03AC  0876               	movf	??i1_USBTransferOnePacket+2,w
  5202  03AD  3FC0               	movwi [0]fsr1
  5203  03AE  0877               	movf	??i1_USBTransferOnePacket+3,w
  5204  03AF  3FC1               	movwi [1]fsr1
  5205  03B0                     i1l3073:	
  5206                           
  5207                           ;usb_device.c: 1045: }
  5208                           ;usb_device.c: 1046: return (void*)handle;
  5209  03B0  087A               	movf	i1USBTransferOnePacket@handle+1,w
  5210  03B1  00F1               	movwf	?i1_USBTransferOnePacket+1
  5211  03B2  0879               	movf	i1USBTransferOnePacket@handle,w
  5212  03B3  00F0               	movwf	?i1_USBTransferOnePacket
  5213  03B4  0008               	return
  5214  03B5                     __end_ofi1_USBTransferOnePacket:	
  5215                           
  5216                           	psect	text43
  5217  04EA                     __ptext43:	
  5218 ;; *************** function _USBCtrlTrfOutHandler *****************
  5219 ;; Defined at:
  5220 ;;		line 2538 in file "usb/usb_device.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 1F/0
  5231 ;;		On exit  : 1E/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    4
  5241 ;; This function calls:
  5242 ;;		_USBCtrlTrfRxService
  5243 ;; This function is called by:
  5244 ;;		_USBCtrlEPService
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _USBCtrlTrfOutHandler
  5250  04EA                     _USBCtrlTrfOutHandler:	
  5251  04EA                     i1l3811:	
  5252                           ;incstack = 0
  5253                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5254                           
  5255                           
  5256                           ;usb_device.c: 2540: if(controlTransferState == 2)
  5257  04EA  3002               	movlw	2
  5258  04EB  0658               	xorwf	_controlTransferState,w	;volatile
  5259  04EC  1D03               	btfss	3,2
  5260  04ED  2CEF               	goto	i1l3815
  5261                           
  5262                           ;usb_device.c: 2541: {
  5263                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  5264  04EE  2D1B               	ljmp	i1l3683
  5265  04EF                     i1l3815:	
  5266                           ;usb_device.c: 2543: }
  5267                           
  5268                           
  5269                           ;usb_device.c: 2544: else
  5270                           ;usb_device.c: 2545: {
  5271                           ;usb_device.c: 2548: controlTransferState = 0;
  5272  04EF  01D8               	clrf	_controlTransferState	;volatile
  5273                           
  5274                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  5275  04F0  0021               	movlb	1	; select bank1
  5276  04F1  0859               	movf	_BothEP0OutUOWNsSet^(0+128),w	;volatile
  5277  04F2  1D03               	btfss	3,2
  5278  04F3  2D19               	goto	i1l3827
  5279                           
  5280                           ;usb_device.c: 2556: {
  5281                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  5282  04F4  0020               	movlb	0	; select bank0
  5283  04F5  0850               	movf	_pBDTEntryEP0OutNext,w
  5284  04F6  3E01               	addlw	1
  5285  04F7  00F6               	movwf	??_USBCtrlTrfOutHandler
  5286  04F8  3000               	movlw	0
  5287  04F9  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  5288  04FA  00F7               	movwf	??_USBCtrlTrfOutHandler+1
  5289  04FB  0876               	movf	??_USBCtrlTrfOutHandler,w
  5290  04FC  0086               	movwf	6
  5291  04FD  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  5292  04FE  0087               	movwf	7
  5293  04FF  3008               	movlw	8
  5294  0500  0081               	movwf	1
  5295                           
  5296                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5297  0501  3040               	movlw	64
  5298  0502  00F6               	movwf	??_USBCtrlTrfOutHandler
  5299  0503  01F7               	clrf	??_USBCtrlTrfOutHandler+1
  5300  0504  0850               	movf	_pBDTEntryEP0OutNext,w
  5301  0505  0086               	movwf	6
  5302  0506  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5303  0507  0087               	movwf	7
  5304  0508  3142               	addfsr 1,2
  5305  0509  0876               	movf	??_USBCtrlTrfOutHandler,w
  5306  050A  3FC0               	movwi [0]fsr1
  5307  050B  0877               	movf	??_USBCtrlTrfOutHandler+1,w
  5308  050C  3FC1               	movwi [1]fsr1
  5309                           
  5310                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5311  050D  0850               	movf	_pBDTEntryEP0OutNext,w
  5312  050E  0086               	movwf	6
  5313  050F  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5314  0510  0087               	movwf	7
  5315  0511  300C               	movlw	12
  5316  0512  0081               	movwf	1
  5317                           
  5318                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5319  0513  0850               	movf	_pBDTEntryEP0OutNext,w
  5320  0514  0086               	movwf	6
  5321  0515  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5322  0516  0087               	movwf	7
  5323  0517  1781               	bsf	1,7
  5324                           
  5325                           ;usb_device.c: 2561: }
  5326  0518  0008               	return
  5327  0519                     i1l3827:	
  5328                           
  5329                           ;usb_device.c: 2562: else
  5330                           ;usb_device.c: 2563: {
  5331                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  5332  0519  01D9               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  5333  051A  0008               	return
  5334  051B                     __end_of_USBCtrlTrfOutHandler:	
  5335  051B                     __ptext44:	
  5336 ;; *************** function _USBCtrlTrfRxService *****************
  5337 ;; Defined at:
  5338 ;;		line 1852 in file "usb/usb_device.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  byteToRead      1    5[COMMON] unsigned char 
  5343 ;;  i               1    4[COMMON] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 1F/0
  5350 ;;		On exit  : 1E/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    3
  5360 ;; This function calls:
  5361 ;;		_USBCtrlEPAllowStatusStage
  5362 ;;		_USBHIDCBSetReportComplete
  5363 ;; This function is called by:
  5364 ;;		_USBCtrlTrfOutHandler
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _USBCtrlTrfRxService
  5370  051B                     _USBCtrlTrfRxService:	
  5371  051B                     i1l3683:	
  5372                           ;incstack = 0
  5373                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5374                           
  5375                           
  5376                           ;usb_device.c: 1854: uint8_t byteToRead;
  5377                           ;usb_device.c: 1855: uint8_t i;
  5378                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  5379  051B  085A               	movf	_pBDTEntryEP0OutCurrent,w
  5380  051C  0086               	movwf	6
  5381  051D  0187               	clrf	7
  5382  051E  3F41               	moviw [1]fsr1
  5383  051F  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  5384                           
  5385                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  5386  0520  00F2               	movwf	??_USBCtrlTrfRxService
  5387  0521  01F3               	clrf	??_USBCtrlTrfRxService+1
  5388  0522  0873               	movf	??_USBCtrlTrfRxService+1,w
  5389  0523  0021               	movlb	1	; select bank1
  5390  0524  022C               	subwf	((_outPipes+1)^(0+128)+3),w	;volatile
  5391  0525  1D03               	skipz
  5392  0526  2D29               	goto	u248_25
  5393  0527  0872               	movf	??_USBCtrlTrfRxService,w
  5394  0528  022B               	subwf	(_outPipes^(0+128)+3),w	;volatile
  5395  0529                     u248_25:	
  5396  0529  1803               	skipnc
  5397  052A  2D2D               	goto	i1l433
  5398                           
  5399                           ;usb_device.c: 1866: {
  5400                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  5401  052B  082B               	movf	(_outPipes^(0+128)+3),w	;volatile
  5402  052C  00F5               	movwf	USBCtrlTrfRxService@byteToRead
  5403  052D                     i1l433:	
  5404                           
  5405                           ;usb_device.c: 1868: }
  5406                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  5407  052D  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  5408  052E  02AB               	subwf	(_outPipes^(0+128)+3),f	;volatile
  5409  052F  1C03               	skipc
  5410  0530  03AC               	decf	((_outPipes+1)^(0+128)+3),f	;volatile
  5411                           
  5412                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  5413  0531  01F4               	clrf	USBCtrlTrfRxService@i
  5414  0532                     i1l3697:	
  5415  0532  0875               	movf	USBCtrlTrfRxService@byteToRead,w
  5416  0533  0274               	subwf	USBCtrlTrfRxService@i,w
  5417  0534  1803               	btfsc	3,0
  5418  0535  2D42               	goto	i1l3699
  5419                           
  5420                           ;usb_device.c: 1875: {
  5421                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  5422  0536  0828               	movf	_outPipes^(0+128),w	;volatile
  5423  0537  0086               	movwf	6
  5424  0538  0187               	clrf	7
  5425  0539  0874               	movf	USBCtrlTrfRxService@i,w
  5426  053A  3E48               	addlw	72
  5427  053B  0084               	movwf	4
  5428  053C  0185               	clrf	5
  5429  053D  0800               	movf	0,w
  5430  053E  0081               	movwf	1
  5431  053F  0AA8               	incf	_outPipes^(0+128),f	;volatile
  5432  0540  0AF4               	incf	USBCtrlTrfRxService@i,f
  5433  0541  2D32               	goto	i1l3697
  5434  0542                     i1l3699:	
  5435                           
  5436                           ;usb_device.c: 1877: }
  5437                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  5438  0542  082B               	movf	(_outPipes^(0+128)+3),w	;volatile
  5439  0543  042C               	iorwf	((_outPipes+1)^(0+128)+3),w	;volatile
  5440  0544  1903               	btfsc	3,2
  5441  0545  2D7B               	goto	i1l3711
  5442                           
  5443                           ;usb_device.c: 1882: {
  5444                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  5445  0546  0020               	movlb	0	; select bank0
  5446  0547  0850               	movf	_pBDTEntryEP0OutNext,w
  5447  0548  3E01               	addlw	1
  5448  0549  00F2               	movwf	??_USBCtrlTrfRxService
  5449  054A  3000               	movlw	0
  5450  054B  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  5451  054C  00F3               	movwf	??_USBCtrlTrfRxService+1
  5452  054D  0872               	movf	??_USBCtrlTrfRxService,w
  5453  054E  0086               	movwf	6
  5454  054F  0873               	movf	??_USBCtrlTrfRxService+1,w
  5455  0550  0087               	movwf	7
  5456  0551  3008               	movlw	8
  5457  0552  0081               	movwf	1
  5458                           
  5459                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  5460  0553  3048               	movlw	72
  5461  0554  00F2               	movwf	??_USBCtrlTrfRxService
  5462  0555  01F3               	clrf	??_USBCtrlTrfRxService+1
  5463  0556  0850               	movf	_pBDTEntryEP0OutNext,w
  5464  0557  0086               	movwf	6
  5465  0558  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5466  0559  0087               	movwf	7
  5467  055A  3142               	addfsr 1,2
  5468  055B  0872               	movf	??_USBCtrlTrfRxService,w
  5469  055C  3FC0               	movwi [0]fsr1
  5470  055D  0873               	movf	??_USBCtrlTrfRxService+1,w
  5471  055E  3FC1               	movwi [1]fsr1
  5472                           
  5473                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  5474  055F  085A               	movf	_pBDTEntryEP0OutCurrent,w
  5475  0560  0086               	movwf	6
  5476  0561  0187               	clrf	7
  5477                           
  5478                           ;usb_device.c: 1886: {
  5479                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5480  0562  0850               	movf	_pBDTEntryEP0OutNext,w
  5481  0563  1B01               	btfsc	1,6
  5482  0564  2D70               	goto	L20
  5483  0565  0086               	movwf	6
  5484  0566  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5485  0567  0087               	movwf	7
  5486  0568  3048               	movlw	72
  5487  0569  0081               	movwf	1
  5488                           
  5489                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5490  056A  0850               	movf	_pBDTEntryEP0OutNext,w
  5491  056B  0086               	movwf	6
  5492  056C  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5493  056D  0087               	movwf	7
  5494  056E  1781               	bsf	1,7
  5495                           
  5496                           ;usb_device.c: 1889: }
  5497  056F  0008               	return
  5498  0570                     L20:	
  5499                           ;usb_device.c: 1890: else
  5500                           ;usb_device.c: 1891: {
  5501                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  5502                           
  5503  0570  0086               	movwf	6
  5504  0571  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5505  0572  0087               	movwf	7
  5506  0573  3008               	movlw	8
  5507  0574  0081               	movwf	1
  5508                           
  5509                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5510  0575  0850               	movf	_pBDTEntryEP0OutNext,w
  5511  0576  0086               	movwf	6
  5512  0577  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5513  0578  0087               	movwf	7
  5514  0579  1781               	bsf	1,7
  5515  057A  0008               	return
  5516  057B                     i1l3711:	
  5517                           
  5518                           ;usb_device.c: 1896: else
  5519                           ;usb_device.c: 1897: {
  5520                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  5521  057B  0020               	movlb	0	; select bank0
  5522  057C  0850               	movf	_pBDTEntryEP0OutNext,w
  5523  057D  3E01               	addlw	1
  5524  057E  00F2               	movwf	??_USBCtrlTrfRxService
  5525  057F  3000               	movlw	0
  5526  0580  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  5527  0581  00F3               	movwf	??_USBCtrlTrfRxService+1
  5528  0582  0872               	movf	??_USBCtrlTrfRxService,w
  5529  0583  0086               	movwf	6
  5530  0584  0873               	movf	??_USBCtrlTrfRxService+1,w
  5531  0585  0087               	movwf	7
  5532  0586  3008               	movlw	8
  5533  0587  0081               	movwf	1
  5534                           
  5535                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5536  0588  3040               	movlw	64
  5537  0589  00F2               	movwf	??_USBCtrlTrfRxService
  5538  058A  01F3               	clrf	??_USBCtrlTrfRxService+1
  5539  058B  0850               	movf	_pBDTEntryEP0OutNext,w
  5540  058C  0086               	movwf	6
  5541  058D  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5542  058E  0087               	movwf	7
  5543  058F  3142               	addfsr 1,2
  5544  0590  0872               	movf	??_USBCtrlTrfRxService,w
  5545  0591  3FC0               	movwi [0]fsr1
  5546  0592  0873               	movf	??_USBCtrlTrfRxService+1,w
  5547  0593  3FC1               	movwi [1]fsr1
  5548                           
  5549                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5550  0594  0850               	movf	_pBDTEntryEP0OutNext,w
  5551  0595  0086               	movwf	6
  5552  0596  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5553  0597  0087               	movwf	7
  5554  0598  3004               	movlw	4
  5555  0599  0081               	movwf	1
  5556                           
  5557                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5558  059A  0850               	movf	_pBDTEntryEP0OutNext,w
  5559  059B  0086               	movwf	6
  5560  059C  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5561  059D  0087               	movwf	7
  5562  059E  1781               	bsf	1,7
  5563                           
  5564                           ;usb_device.c: 1914: if(outPipes[0].pFunc != (0))
  5565  059F  0021               	movlb	1	; select bank1
  5566  05A0  082D               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  5567  05A1  042E               	iorwf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  5568  05A2  1903               	btfsc	3,2
  5569  05A3  2DAD               	goto	i1l3723
  5570                           
  5571                           ;usb_device.c: 1915: {
  5572                           ;usb_device.c: 1921: outPipes[0].pFunc();
  5573  05A4  3005               	movlw	5
  5574  05A5  3EA8               	addlw	(low (_outPipes| 0))& (0+255)
  5575  05A6  0086               	movwf	6
  5576  05A7  0187               	clrf	7
  5577  05A8  3F41               	moviw [1]fsr1
  5578  05A9  008A               	movwf	10
  5579  05AA  3F40               	moviw [0]fsr1
  5580  05AB  000A               	callw
  5581  05AC  3184               	pagesel	$
  5582  05AD                     i1l3723:	
  5583                           
  5584                           ;usb_device.c: 1926: }
  5585                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  5586  05AD  0021               	movlb	1	; select bank1
  5587  05AE  13AA               	bcf	(_outPipes^(0+128)+2),7	;volatile
  5588                           
  5589                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  5590  05AF  0020               	movlb	0	; select bank0
  5591  05B0  0854               	movf	_USBDeferStatusStagePacket,w	;volatile
  5592  05B1  1D03               	btfss	3,2
  5593  05B2  0008               	return
  5594                           
  5595                           ;usb_device.c: 1942: {
  5596                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  5597  05B3  318C  2CD3         	ljmp	i1l3371
  5598  05B5                     __end_of_USBCtrlTrfRxService:	
  5599                           
  5600                           	psect	text47
  5601  0813                     __ptext47:	
  5602 ;; *************** function _USBHIDCBSetReportComplete *****************
  5603 ;; Defined at:
  5604 ;;		line 443 in file "demo_src/app_device_keyboard.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;		None
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      void 
  5611 ;; Registers used:
  5612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5613 ;; Tracked objects:
  5614 ;;		On entry : 1F/1
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;Total ram usage:        0 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    2
  5625 ;; This function calls:
  5626 ;;		i1_APP_KeyboardProcessOutputReport
  5627 ;; This function is called by:
  5628 ;;		_USBHIDCBSetReportHandler
  5629 ;;		_USBCtrlTrfRxService
  5630 ;;		_USBCtrlTrfInHandler
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function _USBHIDCBSetReportComplete
  5636  0813                     _USBHIDCBSetReportComplete:	
  5637                           
  5638                           ;app_device_keyboard.c: 447: outputReport.value = CtrlTrfData[0];
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _USBHIDCBSetReportComplete: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5642  0813  0020               	movlb	0	; select bank0
  5643  0814  0848               	movf	72,w	;volatile
  5644  0815  0022               	movlb	2	; select bank2
  5645  0816  00A0               	movwf	32	;volatile
  5646                           
  5647                           ;app_device_keyboard.c: 450: APP_KeyboardProcessOutputReport();
  5648  0817  2019               	fcall	i1_APP_KeyboardProcessOutputReport
  5649  0818  0008               	return
  5650  0819                     __end_of_USBHIDCBSetReportComplete:	
  5651  0819                     __ptext48:	
  5652 ;; *************** function i1_APP_KeyboardProcessOutputReport *****************
  5653 ;; Defined at:
  5654 ;;		line 431 in file "demo_src/app_device_keyboard.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;		None
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 1F/2
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;Total ram usage:        0 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    1
  5675 ;; This function calls:
  5676 ;;		i1_LED_Off
  5677 ;;		i1_LED_On
  5678 ;; This function is called by:
  5679 ;;		_USBHIDCBSetReportComplete
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function i1_APP_KeyboardProcessOutputReport
  5685  0819                     i1_APP_KeyboardProcessOutputReport:	
  5686                           
  5687                           ;app_device_keyboard.c: 433: if(outputReport.leds.capsLock)
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in i1_APP_KeyboardProcessOutputReport: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
  5691  0819  1CA0               	btfss	32,1	;volatile
  5692  081A  281E               	goto	i1l3361
  5693                           
  5694                           ;app_device_keyboard.c: 434: {
  5695                           ;app_device_keyboard.c: 435: LED_On(LED_D2);
  5696  081B  3002               	movlw	2
  5697  081C  24BF               	fcall	i1_LED_On
  5698                           
  5699                           ;app_device_keyboard.c: 436: }
  5700  081D  0008               	return
  5701  081E                     i1l3361:	
  5702                           
  5703                           ;app_device_keyboard.c: 437: else
  5704                           ;app_device_keyboard.c: 438: {
  5705                           ;app_device_keyboard.c: 439: LED_Off(LED_D2);
  5706  081E  3002               	movlw	2
  5707  081F  24AB               	fcall	i1_LED_Off
  5708  0820  0008               	return
  5709  0821                     __end_ofi1_APP_KeyboardProcessOutputReport:	
  5710  0821                     __ptext21:	
  5711 ;; *************** function _USBCtrlTrfSetupHandler *****************
  5712 ;; Defined at:
  5713 ;;		line 2465 in file "usb/usb_device.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      void 
  5720 ;; Registers used:
  5721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 1E/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5731 ;;Total ram usage:        0 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    6
  5734 ;; This function calls:
  5735 ;;		_USBCheckStdRequest
  5736 ;;		_USBCtrlEPServiceComplete
  5737 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5738 ;; This function is called by:
  5739 ;;		_USBCtrlEPService
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           
  5744                           ;psect for function _USBCtrlTrfSetupHandler
  5745  0821                     _USBCtrlTrfSetupHandler:	
  5746  0821                     i1l3785:	
  5747                           ;incstack = 0
  5748                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5749                           
  5750                           
  5751                           ;usb_device.c: 2470: shortPacketStatus = 0;
  5752  0821  0020               	movlb	0	; select bank0
  5753  0822  01D9               	clrf	_shortPacketStatus	;volatile
  5754                           
  5755                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  5756  0823  01D4               	clrf	_USBDeferStatusStagePacket	;volatile
  5757                           
  5758                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  5759  0824  0021               	movlb	1	; select bank1
  5760  0825  01D6               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  5761                           
  5762                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  5763  0826  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  5764                           
  5765                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  5766  0827  01D9               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  5767                           
  5768                           ;usb_device.c: 2475: controlTransferState = 0;
  5769  0828  0020               	movlb	0	; select bank0
  5770  0829  01D8               	clrf	_controlTransferState	;volatile
  5771                           
  5772                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5773  082A  0021               	movlb	1	; select bank1
  5774  082B  0838               	movf	_pBDTEntryIn^(0+128),w
  5775  082C  0086               	movwf	6
  5776  082D  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  5777  082E  0087               	movwf	7
  5778  082F  3004               	movlw	4
  5779  0830  1381               	bcf	1,7
  5780                           
  5781                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5782  0831  0638               	xorwf	_pBDTEntryIn^(0+128),w
  5783  0832  00B8               	movwf	_pBDTEntryIn^(0+128)
  5784                           
  5785                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  5786  0833  0086               	movwf	6
  5787  0834  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  5788  0835  0087               	movwf	7
  5789  0836  3004               	movlw	4
  5790  0837  1381               	bcf	1,7
  5791                           
  5792                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  5793  0838  0638               	xorwf	_pBDTEntryIn^(0+128),w
  5794  0839  00B8               	movwf	_pBDTEntryIn^(0+128)
  5795                           
  5796                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  5797  083A  0020               	movlb	0	; select bank0
  5798  083B  0850               	movf	_pBDTEntryEP0OutNext,w
  5799  083C  0086               	movwf	6
  5800  083D  0851               	movf	_pBDTEntryEP0OutNext+1,w
  5801  083E  0087               	movwf	7
  5802  083F  1381               	bcf	1,7
  5803                           
  5804                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  5805  0840  0021               	movlb	1	; select bank1
  5806  0841  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
  5807                           
  5808                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  5809  0842  01B2               	clrf	(_inPipes^(0+128)+3)	;volatile
  5810  0843  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  5811                           
  5812                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  5813  0844  01AA               	clrf	(_outPipes^(0+128)+2)	;volatile
  5814                           
  5815                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  5816  0845  01AB               	clrf	(_outPipes^(0+128)+3)	;volatile
  5817  0846  01AC               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
  5818                           
  5819                           ;usb_device.c: 2500: USBCheckStdRequest();
  5820  0847  2054  3188         	fcall	_USBCheckStdRequest
  5821                           
  5822                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  5823  0849  3003               	movlw	3
  5824  084A  0020               	movlb	0	; select bank0
  5825  084B  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  5826  084C  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  5827  084D  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  5828  084E  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  5829  084F  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  5830  0850  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  5831  0851  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  5832                           
  5833                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  5834  0853  29BB               	ljmp	i1l3627
  5835  0854                     __end_of_USBCtrlTrfSetupHandler:	
  5836  0854                     __ptext24:	
  5837 ;; *************** function _USBCheckStdRequest *****************
  5838 ;; Defined at:
  5839 ;;		line 2686 in file "usb/usb_device.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;		None
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 1F/1
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5857 ;;Total ram usage:        0 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    5
  5860 ;; This function calls:
  5861 ;;		_USBStdFeatureReqHandler
  5862 ;;		_USBStdGetDscHandler
  5863 ;;		_USBStdGetStatusHandler
  5864 ;;		_USBStdSetCfgHandler
  5865 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5866 ;; This function is called by:
  5867 ;;		_USBCtrlTrfSetupHandler
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           
  5872                           ;psect for function _USBCheckStdRequest
  5873  0854                     _USBCheckStdRequest:	
  5874                           
  5875                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5876                           
  5877                           ;incstack = 0
  5878                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5879  0854  0020               	movlb	0	; select bank0
  5880  0855  0E40               	swapf	64,w	;volatile
  5881  0856  0C89               	rrf	9,f
  5882  0857  3903               	andlw	3
  5883  0858  1D03               	btfss	3,2
  5884  0859  0008               	return
  5885                           
  5886                           ;usb_device.c: 2728: break;
  5887  085A  0841               	movf	65,w	;volatile
  5888                           
  5889                           ; Switch size 1, requested type "speed"
  5890                           ; Number of cases is 11, Range of values is 0 to 12
  5891                           ; switch strategies available:
  5892                           ; Name         Instructions Cycles
  5893                           ; direct_byte           32     6 (fixed)
  5894                           ; simple_byte           34    18 (average)
  5895                           ; jumptable            260     6 (fixed)
  5896                           ;	Chosen strategy is direct_byte
  5897  085B  0084               	movwf	4
  5898  085C  300D               	movlw	13
  5899  085D  0204               	subwf	4,w
  5900  085E  1803               	skipnc
  5901  085F  0008               	return
  5902  0860  3183               	movlp	high i1S5271
  5903  0861  3504               	lslf	4,w
  5904  0862  3EB5               	addlw	low i1S5271
  5905  0863  0082               	movwf	2
  5906  0864                     i1l530:	
  5907  0864  0008               	return
  5908  0865                     i1l532:	
  5909                           ;usb_device.c: 2691: {
  5910                           ;usb_device.c: 2692: case 5:
  5911                           
  5912                           
  5913                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5914  0865  0021               	movlb	1	; select bank1
  5915  0866  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5916                           
  5917                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5918  0867  3008               	movlw	8
  5919  0868  0020               	movlb	0	; select bank0
  5920  0869  00DB               	movwf	_USBDeviceState	;volatile
  5921                           
  5922                           ;usb_device.c: 2696: break;
  5923  086A  0008               	return
  5924  086B                     i1l3735:	
  5925                           
  5926                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5927  086B  2895               	ljmp	i1l3483
  5928  086C                     i1l3737:	
  5929                           ;usb_device.c: 2699: break;
  5930                           
  5931                           
  5932                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5933  086C  2950               	ljmp	i1l3431
  5934  086D                     i1l3739:	
  5935                           ;usb_device.c: 2702: break;
  5936                           
  5937                           
  5938                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5939  086D  305E               	movlw	low _USBActiveConfiguration
  5940  086E  0021               	movlb	1	; select bank1
  5941  086F  00AF               	movwf	_inPipes^(0+128)	;volatile
  5942  0870  3000               	movlw	high _USBActiveConfiguration
  5943  0871  00B0               	movwf	(_inPipes+1)^(0+128)	;volatile
  5944                           
  5945                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5946  0872  1431               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5947                           
  5948                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5949  0873  3001               	movlw	1
  5950  0874  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  5951                           
  5952                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5953  0875  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5954                           
  5955                           ;usb_device.c: 2708: break;
  5956  0876  0008               	return
  5957  0877                     i1l3747:	
  5958                           
  5959                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5960  0877  2905               	ljmp	i1l3513
  5961  0878                     i1l3749:	
  5962                           ;usb_device.c: 2711: break;
  5963                           
  5964                           
  5965                           ;usb_device.c: 2713: case 3:
  5966                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5967  0878  2A90               	ljmp	i1l3541
  5968  0879                     i1l3751:	
  5969                           ;usb_device.c: 2715: break;
  5970                           
  5971                           
  5972                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5973  0879  0844               	movf	68,w	;volatile
  5974  087A  3E5D               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  5975  087B  0021               	movlb	1	; select bank1
  5976  087C  00AF               	movwf	_inPipes^(0+128)	;volatile
  5977  087D  01B0               	clrf	(_inPipes+1)^(0+128)	;volatile
  5978                           
  5979                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5980  087E  1431               	bsf	(_inPipes^(0+128)+2),0	;volatile
  5981                           
  5982                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5983  087F  3001               	movlw	1
  5984  0880  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  5985                           
  5986                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5987  0881  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5988                           
  5989                           ;usb_device.c: 2721: break;
  5990  0882  0008               	return
  5991  0883                     i1l541:	
  5992                           ;usb_device.c: 2722: case 11:
  5993                           
  5994                           
  5995                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5996  0883  0021               	movlb	1	; select bank1
  5997  0884  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  5998                           
  5999                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6000  0885  0020               	movlb	0	; select bank0
  6001  0886  0844               	movf	68,w	;volatile
  6002  0887  3E5D               	addlw	(low (_USBAlternateInterface| 0))& (0+255)
  6003  0888  0086               	movwf	6
  6004  0889  0187               	clrf	7
  6005  088A  0842               	movf	66,w	;volatile
  6006  088B  0081               	movwf	1
  6007                           
  6008                           ;usb_device.c: 2725: break;
  6009  088C  0008               	return
  6010  088D                     i1l3761:	
  6011                           
  6012                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6013  088D  3002               	movlw	2
  6014  088E  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6015  088F  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6016  0890  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6017  0891  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6018  0892  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6019  0893  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6020  0894  2C2D               	ljmp	i1l3277
  6021  0895                     __end_of_USBCheckStdRequest:	
  6022  0895                     __ptext28:	
  6023 ;; *************** function _USBStdGetDscHandler *****************
  6024 ;; Defined at:
  6025 ;;		line 2043 in file "usb/usb_device.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6034 ;; Tracked objects:
  6035 ;;		On entry : 1E/0
  6036 ;;		On exit  : 1E/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;Total ram usage:        3 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_USBCheckStdRequest
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function _USBStdGetDscHandler
  6054  0895                     _USBStdGetDscHandler:	
  6055  0895                     i1l3483:	
  6056                           ;incstack = 0
  6057                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6058                           
  6059                           
  6060                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6061  0895  3080               	movlw	128
  6062  0896  0020               	movlb	0	; select bank0
  6063  0897  0640               	xorwf	64,w	;volatile
  6064  0898  1D03               	btfss	3,2
  6065  0899  0008               	return
  6066                           
  6067                           ;usb_device.c: 2046: {
  6068                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6069  089A  30C0               	movlw	192
  6070  089B  0021               	movlb	1	; select bank1
  6071  089C  00B1               	movwf	(_inPipes^(0+128)+2)	;volatile
  6072                           
  6073                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6074  089D  28F8               	goto	i1l3511
  6075  089E                     i1l3487:	
  6076                           
  6077                           ;usb_device.c: 2053: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6078  089E  30B8               	movlw	low (_device_dsc| (0+32768))
  6079  089F  0021               	movlb	1	; select bank1
  6080  08A0  00AF               	movwf	_inPipes^(0+128)	;volatile
  6081  08A1  3090               	movlw	high (_device_dsc| (0+32768))
  6082  08A2  00B0               	movwf	(_inPipes^(0+128)+1)	;volatile
  6083                           
  6084                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6085  08A3  3012               	movlw	18
  6086  08A4  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  6087  08A5  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  6088                           
  6089                           ;usb_device.c: 2058: break;
  6090  08A6  0008               	return
  6091  08A7                     i1l3489:	
  6092                           
  6093                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6094  08A7  0842               	movf	66,w	;volatile
  6095  08A8  1D03               	btfss	3,2
  6096  08A9  28D3               	goto	i1l3497
  6097                           
  6098                           ;usb_device.c: 2064: {
  6099                           ;usb_device.c: 2066: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6100  08AA  0842               	movf	66,w	;volatile
  6101  08AB  00F0               	movwf	??_USBStdGetDscHandler
  6102  08AC  30D4               	movlw	low (_USB_CD_Ptr| (0+32768))
  6103  08AD  01F1               	clrf	??_USBStdGetDscHandler+1
  6104  08AE  35F0               	lslf	??_USBStdGetDscHandler,f
  6105  08AF  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6106  08B0  0770               	addwf	??_USBStdGetDscHandler,w
  6107  08B1  0084               	movwf	4
  6108  08B2  3090               	movlw	high (_USB_CD_Ptr| (0+32768))
  6109  08B3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6110  08B4  0085               	movwf	5
  6111  08B5  3F00               	moviw [0]fsr0
  6112  08B6  0021               	movlb	1	; select bank1
  6113  08B7  00AF               	movwf	_inPipes^(0+128)	;volatile
  6114  08B8  3F01               	moviw [1]fsr0
  6115  08B9  00B0               	movwf	(_inPipes+1)^(0+128)	;volatile
  6116                           
  6117                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6118  08BA  0830               	movf	(_inPipes+1)^(0+128),w	;volatile
  6119  08BB  00F1               	movwf	??_USBStdGetDscHandler+1
  6120  08BC  082F               	movf	_inPipes^(0+128),w	;volatile
  6121  08BD  00F0               	movwf	??_USBStdGetDscHandler
  6122  08BE  3E02               	addlw	2
  6123  08BF  0084               	movwf	4
  6124  08C0  0871               	movf	??_USBStdGetDscHandler+1,w
  6125  08C1  1803               	skipnc
  6126  08C2  0A71               	incf	??_USBStdGetDscHandler+1,w
  6127  08C3  0085               	movwf	5
  6128  08C4  0800               	movf	0,w	;code access
  6129  08C5  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  6130                           
  6131                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6132  08C6  0830               	movf	(_inPipes+1)^(0+128),w	;volatile
  6133  08C7  00F1               	movwf	??_USBStdGetDscHandler+1
  6134  08C8  082F               	movf	_inPipes^(0+128),w	;volatile
  6135  08C9  00F0               	movwf	??_USBStdGetDscHandler
  6136  08CA  3E03               	addlw	3
  6137  08CB  0084               	movwf	4
  6138  08CC  0871               	movf	??_USBStdGetDscHandler+1,w
  6139  08CD  1803               	skipnc
  6140  08CE  0A71               	incf	??_USBStdGetDscHandler+1,w
  6141  08CF  0085               	movwf	5
  6142  08D0  0800               	movf	0,w	;code access
  6143  08D1  00B3               	movwf	(_inPipes^(0+128)+4)	;volatile
  6144                           
  6145                           ;usb_device.c: 2076: }
  6146  08D2  0008               	return
  6147  08D3                     i1l3497:	
  6148                           
  6149                           ;usb_device.c: 2077: else
  6150                           ;usb_device.c: 2078: {
  6151                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6152  08D3  0021               	movlb	1	; select bank1
  6153  08D4  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
  6154  08D5  0008               	return
  6155  08D6                     i1l3499:	
  6156                           
  6157                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6158  08D6  3003               	movlw	3
  6159  08D7  0242               	subwf	66,w	;volatile
  6160  08D8  1803               	skipnc
  6161  08D9  28F2               	goto	i1l3505
  6162                           
  6163                           ;usb_device.c: 2087: {
  6164                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6165  08DA  0842               	movf	66,w	;volatile
  6166  08DB  00F0               	movwf	??_USBStdGetDscHandler
  6167  08DC  30CA               	movlw	low (_USB_SD_Ptr| (0+32768))
  6168  08DD  01F1               	clrf	??_USBStdGetDscHandler+1
  6169  08DE  35F0               	lslf	??_USBStdGetDscHandler,f
  6170  08DF  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  6171  08E0  0770               	addwf	??_USBStdGetDscHandler,w
  6172  08E1  0084               	movwf	4
  6173  08E2  3090               	movlw	high (_USB_SD_Ptr| (0+32768))
  6174  08E3  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  6175  08E4  0085               	movwf	5
  6176  08E5  3F00               	moviw [0]fsr0
  6177  08E6  0021               	movlb	1	; select bank1
  6178  08E7  00AF               	movwf	_inPipes^(0+128)	;volatile
  6179  08E8  3F01               	moviw [1]fsr0
  6180  08E9  00B0               	movwf	(_inPipes+1)^(0+128)	;volatile
  6181                           
  6182                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6183  08EA  082F               	movf	_inPipes^(0+128),w	;volatile
  6184  08EB  0084               	movwf	4
  6185  08EC  0830               	movf	(_inPipes+1)^(0+128),w	;volatile
  6186  08ED  0085               	movwf	5
  6187  08EE  0800               	movf	0,w	;code access
  6188  08EF  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  6189  08F0  01B3               	clrf	((_inPipes+1)^(0+128)+3)	;volatile
  6190                           
  6191                           ;usb_device.c: 2092: }
  6192  08F1  0008               	return
  6193  08F2                     i1l3505:	
  6194                           
  6195                           ;usb_device.c: 2102: else
  6196                           ;usb_device.c: 2103: {
  6197                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6198  08F2  0021               	movlb	1	; select bank1
  6199  08F3  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
  6200  08F4  0008               	return
  6201  08F5                     i1l3507:	
  6202                           
  6203                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6204  08F5  0021               	movlb	1	; select bank1
  6205  08F6  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
  6206                           
  6207                           ;usb_device.c: 2109: break;
  6208  08F7  0008               	return
  6209  08F8                     i1l3511:	
  6210  08F8  0020               	movlb	0	; select bank0
  6211  08F9  0843               	movf	67,w	;volatile
  6212                           
  6213                           ; Switch size 1, requested type "speed"
  6214                           ; Number of cases is 3, Range of values is 1 to 3
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte           10     6 (average)
  6218                           ; direct_byte           15     9 (fixed)
  6219                           ; jumptable            263     9 (fixed)
  6220                           ;	Chosen strategy is simple_byte
  6221  08FA  3A01               	xorlw	1	; case 1
  6222  08FB  1903               	skipnz
  6223  08FC  289E               	goto	i1l3487
  6224  08FD  3A03               	xorlw	3	; case 2
  6225  08FE  1903               	skipnz
  6226  08FF  28A7               	goto	i1l3489
  6227  0900  3A01               	xorlw	1	; case 3
  6228  0901  1903               	skipnz
  6229  0902  28D6               	goto	i1l3499
  6230  0903  28F5               	goto	i1l3507
  6231  0904  0008               	return
  6232  0905                     __end_of_USBStdGetDscHandler:	
  6233  0905                     __ptext27:	
  6234 ;; *************** function _USBStdGetStatusHandler *****************
  6235 ;; Defined at:
  6236 ;;		line 2129 in file "usb/usb_device.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;  p               2    0[COMMON] PTR struct __BDT
  6241 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      void 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 1E/0
  6248 ;;		On exit  : 1F/1
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;Total ram usage:        2 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_USBCheckStdRequest
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           
  6265                           ;psect for function _USBStdGetStatusHandler
  6266  0905                     _USBStdGetStatusHandler:	
  6267  0905                     i1l3513:	
  6268                           ;incstack = 0
  6269                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  6270                           
  6271                           
  6272                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6273  0905  0020               	movlb	0	; select bank0
  6274  0906  01C8               	clrf	72	;volatile
  6275                           
  6276                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6277  0907  01C9               	clrf	73	;volatile
  6278                           
  6279                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6280  0908  293B               	goto	i1l3533
  6281  0909                     i1l470:	
  6282                           ;usb_device.c: 2135: {
  6283                           ;usb_device.c: 2136: case (0x00):
  6284                           
  6285                           
  6286                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6287  0909  0021               	movlb	1	; select bank1
  6288  090A  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6289                           
  6290                           ;usb_device.c: 2145: }
  6291                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6292                           
  6293                           ;usb_device.c: 2142: if(0 == 1)
  6294  090B  0B5B               	decfsz	_RemoteWakeup^(0+128),w	;volatile
  6295  090C  2946               	goto	i1l473
  6296                           
  6297                           ;usb_device.c: 2148: {
  6298                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6299  090D  0020               	movlb	0	; select bank0
  6300  090E  14C8               	bsf	72,1	;volatile
  6301  090F  2946               	goto	i1l473
  6302  0910                     i1l474:	
  6303                           ;usb_device.c: 2152: case (0x01):
  6304                           
  6305                           
  6306                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6307  0910  0021               	movlb	1	; select bank1
  6308  0911  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6309                           
  6310                           ;usb_device.c: 2154: break;
  6311  0912  2946               	goto	i1l473
  6312  0913                     i1l475:	
  6313                           ;usb_device.c: 2155: case (0x02):
  6314                           
  6315                           
  6316                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6317  0913  0021               	movlb	1	; select bank1
  6318  0914  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6319                           
  6320                           ;usb_device.c: 2160: {
  6321                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6322                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6323  0915  0020               	movlb	0	; select bank0
  6324  0916  1BC4               	btfsc	68,7	;volatile
  6325  0917  2922               	goto	i1l3523
  6326                           
  6327                           ;usb_device.c: 2164: {
  6328                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6329  0918  0844               	movf	68,w	;volatile
  6330  0919  390F               	andlw	15
  6331  091A  0709               	addwf	9,w
  6332  091B  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  6333  091C  0086               	movwf	6
  6334  091D  0187               	clrf	7
  6335  091E  3F40               	moviw [0]fsr1
  6336  091F  00F0               	movwf	USBStdGetStatusHandler@p
  6337  0920  3F41               	moviw [1]fsr1
  6338  0921  292B               	goto	L3
  6339  0922                     i1l3523:	
  6340                           ;usb_device.c: 2166: }
  6341                           
  6342                           
  6343                           ;usb_device.c: 2167: else
  6344                           ;usb_device.c: 2168: {
  6345                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6346  0922  0844               	movf	68,w	;volatile
  6347  0923  390F               	andlw	15
  6348  0924  0709               	addwf	9,w
  6349  0925  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  6350  0926  0086               	movwf	6
  6351  0927  0187               	clrf	7
  6352  0928  3F40               	moviw [0]fsr1
  6353  0929  00F0               	movwf	USBStdGetStatusHandler@p
  6354  092A  3F41               	moviw [1]fsr1
  6355  092B                     L3:	
  6356  092B  00F1               	movwf	USBStdGetStatusHandler@p+1
  6357                           
  6358                           ;usb_device.c: 2170: }
  6359                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6360  092C  0870               	movf	USBStdGetStatusHandler@p,w
  6361  092D  0086               	movwf	6
  6362  092E  0871               	movf	USBStdGetStatusHandler@p+1,w
  6363  092F  0087               	movwf	7
  6364  0930  1F81               	btfss	1,7
  6365  0931  2946               	goto	i1l473
  6366  0932  0870               	movf	USBStdGetStatusHandler@p,w
  6367  0933  0086               	movwf	6
  6368  0934  0871               	movf	USBStdGetStatusHandler@p+1,w
  6369  0935  0087               	movwf	7
  6370  0936  1D01               	btfss	1,2
  6371  0937  2946               	goto	i1l473
  6372                           
  6373                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6374  0938  3001               	movlw	1
  6375  0939  00C8               	movwf	72	;volatile
  6376  093A  2946               	goto	i1l473
  6377  093B                     i1l3533:	
  6378  093B  0840               	movf	64,w	;volatile
  6379  093C  391F               	andlw	31
  6380                           
  6381                           ; Switch size 1, requested type "speed"
  6382                           ; Number of cases is 3, Range of values is 0 to 2
  6383                           ; switch strategies available:
  6384                           ; Name         Instructions Cycles
  6385                           ; simple_byte           10     6 (average)
  6386                           ; direct_byte           12     6 (fixed)
  6387                           ; jumptable            260     6 (fixed)
  6388                           ;	Chosen strategy is simple_byte
  6389  093D  1903               	skipnz
  6390  093E  2909               	goto	i1l470
  6391  093F  3A01               	xorlw	1	; case 1
  6392  0940  1903               	skipnz
  6393  0941  2910               	goto	i1l474
  6394  0942  3A03               	xorlw	3	; case 2
  6395  0943  1903               	skipnz
  6396  0944  2913               	goto	i1l475
  6397  0945  2946               	goto	i1l473
  6398  0946                     i1l473:	
  6399                           
  6400                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6401  0946  0021               	movlb	1	; select bank1
  6402  0947  1FB1               	btfss	(_inPipes^(0+128)+2),7	;volatile
  6403  0948  0008               	return
  6404                           
  6405                           ;usb_device.c: 2179: {
  6406                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6407  0949  3048               	movlw	72
  6408  094A  00AF               	movwf	_inPipes^(0+128)	;volatile
  6409  094B  01B0               	clrf	(_inPipes+1)^(0+128)	;volatile
  6410                           
  6411                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6412  094C  1431               	bsf	(_inPipes^(0+128)+2),0	;volatile
  6413                           
  6414                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6415  094D  3002               	movlw	2
  6416  094E  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  6417  094F  0008               	return
  6418  0950                     __end_of_USBStdGetStatusHandler:	
  6419  0950                     __ptext25:	
  6420 ;; *************** function _USBStdSetCfgHandler *****************
  6421 ;; Defined at:
  6422 ;;		line 1968 in file "usb/usb_device.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  p               2    6[BANK0 ] PTR unsigned char 
  6427 ;;		 -> UEP1(1), 
  6428 ;;  i               1    8[BANK0 ] unsigned char 
  6429 ;;  i               1    9[BANK0 ] unsigned char 
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 1E/0
  6436 ;;		On exit  : 1F/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;Total ram usage:        4 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    4
  6446 ;; This function calls:
  6447 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6448 ;;		i1_memset
  6449 ;; This function is called by:
  6450 ;;		_USBCheckStdRequest
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function _USBStdSetCfgHandler
  6456  0950                     _USBStdSetCfgHandler:	
  6457  0950                     i1l3431:	
  6458                           ;incstack = 0
  6459                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6460                           
  6461                           
  6462                           ;usb_device.c: 1970: uint8_t i;
  6463                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  6464  0950  0021               	movlb	1	; select bank1
  6465  0951  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  6466                           
  6467                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 
      +                          0; };
  6468  0952  300E               	movlw	14
  6469  0953  0020               	movlb	0	; select bank0
  6470  0954  00E6               	movwf	USBStdSetCfgHandler@p+1
  6471  0955  3099               	movlw	153
  6472  0956  00E5               	movwf	USBStdSetCfgHandler@p
  6473  0957  01E7               	clrf	USBStdSetCfgHandler@i_1771
  6474  0958                     i1l3439:	
  6475  0958  0865               	movf	USBStdSetCfgHandler@p,w
  6476  0959  0086               	movwf	6
  6477  095A  0866               	movf	USBStdSetCfgHandler@p+1,w
  6478  095B  0087               	movwf	7
  6479  095C  0181               	clrf	1
  6480  095D  0AE5               	incf	USBStdSetCfgHandler@p,f
  6481  095E  1903               	skipnz
  6482  095F  0AE6               	incf	USBStdSetCfgHandler@p+1,f
  6483  0960  0AE7               	incf	USBStdSetCfgHandler@i_1771,f
  6484  0961  1903               	btfsc	3,2
  6485  0962  2958               	goto	i1l3439
  6486  0963  3020               	movlw	32
  6487                           
  6488                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  6489  0964  01F0               	clrf	i1memset@c
  6490  0965  01F1               	clrf	i1memset@c+1
  6491  0966  00F2               	movwf	i1memset@n
  6492  0967  01F3               	clrf	i1memset@n+1
  6493  0968  21A9  3188         	fcall	i1_memset
  6494                           
  6495                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  6496  096A  003D               	movlb	29	; select bank29
  6497  096B  170E               	bsf	14,6	;volatile
  6498                           
  6499                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(1+1u); i++)
  6500  096C  0020               	movlb	0	; select bank0
  6501  096D  01E8               	clrf	USBStdSetCfgHandler@i
  6502  096E                     i1l3457:	
  6503                           
  6504                           ;usb_device.c: 1988: {
  6505                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  6506  096E  0868               	movf	USBStdSetCfgHandler@i,w
  6507  096F  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  6508  0970  0086               	movwf	6
  6509  0971  0187               	clrf	7
  6510  0972  0181               	clrf	1
  6511                           
  6512                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  6513  0973  0868               	movf	USBStdSetCfgHandler@i,w
  6514  0974  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  6515  0975  0086               	movwf	6
  6516  0976  3002               	movlw	2
  6517  0977  0181               	clrf	1
  6518  0978  0AE8               	incf	USBStdSetCfgHandler@i,f
  6519  0979  0268               	subwf	USBStdSetCfgHandler@i,w
  6520  097A  1C03               	skipc
  6521  097B  296E               	goto	i1l3457
  6522  097C  305D               	movlw	(low (_USBAlternateInterface| 0))& (0+255)
  6523                           
  6524                           ;usb_device.c: 1991: }
  6525                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,1);
  6526  097D  01F0               	clrf	i1memset@c
  6527  097E  01F1               	clrf	i1memset@c+1
  6528  097F  01F2               	clrf	i1memset@n
  6529  0980  0AF2               	incf	i1memset@n,f
  6530  0981  01F3               	clrf	i1memset@n+1
  6531  0982  21A9  3188         	fcall	i1_memset
  6532                           
  6533                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  6534  0984  003D               	movlb	29	; select bank29
  6535  0985  130E               	bcf	14,6	;volatile
  6536                           
  6537                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6538  0986  3028               	movlw	40
  6539  0987  0021               	movlb	1	; select bank1
  6540  0988  00B8               	movwf	_pBDTEntryIn^(0+128)
  6541  0989  3020               	movlw	32
  6542  098A  01B9               	clrf	(_pBDTEntryIn+1)^(0+128)
  6543                           
  6544                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  6545  098B  0020               	movlb	0	; select bank0
  6546  098C  00DA               	movwf	_pBDTEntryEP0OutCurrent
  6547                           
  6548                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6549  098D  00D0               	movwf	_pBDTEntryEP0OutNext
  6550  098E  39FF               	andlw	255
  6551  098F  1D03               	skipz
  6552  0990  3000               	movlw	0
  6553  0991  00D1               	movwf	_pBDTEntryEP0OutNext+1
  6554                           
  6555                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  6556  0992  0842               	movf	66,w	;volatile
  6557  0993  00DE               	movwf	_USBActiveConfiguration	;volatile
  6558                           
  6559                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  6560  0994  085E               	movf	_USBActiveConfiguration,w	;volatile
  6561  0995  1D03               	btfss	3,2
  6562  0996  299A               	goto	i1l3479
  6563                           
  6564                           ;usb_device.c: 2010: {
  6565                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  6566  0997  3010               	movlw	16
  6567  0998  00DB               	movwf	_USBDeviceState	;volatile
  6568                           
  6569                           ;usb_device.c: 2013: }
  6570  0999  0008               	return
  6571  099A                     i1l3479:	
  6572  099A  305E               	movlw	low _USBActiveConfiguration
  6573                           
  6574                           ;usb_device.c: 2014: else
  6575                           ;usb_device.c: 2015: {
  6576                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  6577  099B  01DF               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6578  099C  0ADF               	incf	USER_USB_CALLBACK_EVENT_HANDLER@event,f
  6579  099D  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6580  099E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6581  099F  3000               	movlw	high _USBActiveConfiguration
  6582  09A0  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6583  09A1  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6584  09A2  0AE3               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  6585  09A3  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6586  09A4  242D               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6587                           
  6588                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  6589  09A5  3020               	movlw	32
  6590  09A6  0020               	movlb	0	; select bank0
  6591  09A7  00DB               	movwf	_USBDeviceState	;volatile
  6592  09A8  0008               	return
  6593  09A9                     __end_of_USBStdSetCfgHandler:	
  6594  09A9                     __ptext26:	
  6595 ;; *************** function i1_memset *****************
  6596 ;; Defined at:
  6597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  p1              1    wreg     PTR void 
  6600 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  6601 ;;  c               2    0[COMMON] int 
  6602 ;;  n               2    2[COMMON] unsigned int 
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  p1              1    4[COMMON] PTR void 
  6605 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  6606 ;;  memset          1    5[COMMON] PTR unsigned char 
  6607 ;;		 -> inputReport(8), USBAlternateInterface(1), BDT(32), 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      PTR void 
  6610 ;; Registers used:
  6611 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 1F/0
  6614 ;;		On exit  : 1F/0
  6615 ;;		Unchanged: 1F/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;Total ram usage:        6 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_USBStdSetCfgHandler
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           
  6631                           ;psect for function i1_memset
  6632  09A9                     i1_memset:	
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in i1_memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6636                           ;i1memset@p1 stored from wreg
  6637  09A9  00F4               	movwf	i1memset@p1
  6638  09AA  00F5               	movwf	i1memset@p
  6639  09AB                     i1l3369:	
  6640  09AB  3001               	movlw	1
  6641  09AC  02F2               	subwf	i1memset@n,f
  6642  09AD  3000               	movlw	0
  6643  09AE  3BF3               	subwfb	i1memset@n+1,f
  6644  09AF  0F72               	incfsz	i1memset@n,w
  6645  09B0  29B4               	goto	i1l3365
  6646  09B1  0A73               	incf	i1memset@n+1,w
  6647  09B2  1903               	btfsc	3,2
  6648  09B3  0008               	return
  6649  09B4                     i1l3365:	
  6650  09B4  0875               	movf	i1memset@p,w
  6651  09B5  0086               	movwf	6
  6652  09B6  0187               	clrf	7
  6653  09B7  0870               	movf	i1memset@c,w
  6654  09B8  0081               	movwf	1
  6655  09B9  0AF5               	incf	i1memset@p,f
  6656  09BA  29AB               	goto	i1l3369
  6657  09BB                     __end_ofi1_memset:	
  6658  09BB                     __ptext22:	
  6659 ;; *************** function _USBCtrlEPServiceComplete *****************
  6660 ;; Defined at:
  6661 ;;		line 1616 in file "usb/usb_device.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      void 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/1
  6672 ;;		On exit  : 1E/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6679 ;;Total ram usage:        2 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; Hardware stack levels required when called:    2
  6682 ;; This function calls:
  6683 ;;		_USBCtrlEPAllowDataStage
  6684 ;;		_USBCtrlEPAllowStatusStage
  6685 ;; This function is called by:
  6686 ;;		_USBCtrlTrfSetupHandler
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           
  6691                           ;psect for function _USBCtrlEPServiceComplete
  6692  09BB                     _USBCtrlEPServiceComplete:	
  6693  09BB                     i1l3627:	
  6694                           ;incstack = 0
  6695                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6696                           
  6697                           
  6698                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  6699  09BB  003D               	movlb	29	; select bank29
  6700  09BC  120E               	bcf	14,4	;volatile
  6701                           
  6702                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  6703  09BD  0021               	movlb	1	; select bank1
  6704  09BE  1BB1               	btfsc	(_inPipes^(0+128)+2),7	;volatile
  6705  09BF  29FF               	goto	i1l405
  6706                           
  6707                           ;usb_device.c: 1629: {
  6708                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  6709  09C0  1FAA               	btfss	(_outPipes^(0+128)+2),7	;volatile
  6710  09C1  29CE               	goto	i1l3641
  6711                           
  6712                           ;usb_device.c: 1631: {
  6713                           ;usb_device.c: 1632: controlTransferState = 2;
  6714  09C2  3002               	movlw	2
  6715  09C3  0020               	movlb	0	; select bank0
  6716  09C4  00D8               	movwf	_controlTransferState	;volatile
  6717                           
  6718                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  6719  09C5  0021               	movlb	1	; select bank1
  6720  09C6  0855               	movf	_USBDeferOUTDataStagePackets^(0+128),w	;volatile
  6721  09C7  1D03               	btfss	3,2
  6722  09C8  29CA               	goto	i1l3637
  6723                           
  6724                           ;usb_device.c: 1644: {
  6725                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  6726  09C9  2238               	fcall	_USBCtrlEPAllowDataStage
  6727  09CA                     i1l3637:	
  6728                           
  6729                           ;usb_device.c: 1646: }
  6730                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  6731  09CA  0021               	movlb	1	; select bank1
  6732  09CB  01D7               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  6733                           
  6734                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  6735  09CC  01D8               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  6736                           
  6737                           ;usb_device.c: 1652: }
  6738  09CD  0008               	return
  6739  09CE                     i1l3641:	
  6740                           
  6741                           ;usb_device.c: 1653: else
  6742                           ;usb_device.c: 1654: {
  6743                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  6744  09CE  0020               	movlb	0	; select bank0
  6745  09CF  0850               	movf	_pBDTEntryEP0OutNext,w
  6746  09D0  3E01               	addlw	1
  6747  09D1  00F5               	movwf	??_USBCtrlEPServiceComplete
  6748  09D2  3000               	movlw	0
  6749  09D3  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  6750  09D4  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6751  09D5  0875               	movf	??_USBCtrlEPServiceComplete,w
  6752  09D6  0086               	movwf	6
  6753  09D7  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6754  09D8  0087               	movwf	7
  6755  09D9  3008               	movlw	8
  6756  09DA  0081               	movwf	1
  6757                           
  6758                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6759  09DB  3040               	movlw	64
  6760  09DC  00F5               	movwf	??_USBCtrlEPServiceComplete
  6761  09DD  01F6               	clrf	??_USBCtrlEPServiceComplete+1
  6762  09DE  0850               	movf	_pBDTEntryEP0OutNext,w
  6763  09DF  0086               	movwf	6
  6764  09E0  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6765  09E1  0087               	movwf	7
  6766  09E2  3142               	addfsr 1,2
  6767  09E3  0875               	movf	??_USBCtrlEPServiceComplete,w
  6768  09E4  3FC0               	movwi [0]fsr1
  6769  09E5  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6770  09E6  3FC1               	movwi [1]fsr1
  6771                           
  6772                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6773  09E7  0850               	movf	_pBDTEntryEP0OutNext,w
  6774  09E8  0086               	movwf	6
  6775  09E9  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6776  09EA  0087               	movwf	7
  6777  09EB  300C               	movlw	12
  6778  09EC  0081               	movwf	1
  6779                           
  6780                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6781  09ED  0850               	movf	_pBDTEntryEP0OutNext,w
  6782  09EE  0086               	movwf	6
  6783  09EF  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6784  09F0  0087               	movwf	7
  6785  09F1  1781               	bsf	1,7
  6786                           
  6787                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  6788  09F2  0021               	movlb	1	; select bank1
  6789  09F3  0838               	movf	_pBDTEntryIn^(0+128),w
  6790  09F4  0086               	movwf	6
  6791  09F5  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  6792  09F6  0087               	movwf	7
  6793  09F7  3004               	movlw	4
  6794  09F8  0081               	movwf	1
  6795                           
  6796                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  6797  09F9  0838               	movf	_pBDTEntryIn^(0+128),w
  6798  09FA  0086               	movwf	6
  6799  09FB  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  6800  09FC  0087               	movwf	7
  6801  09FD  1781               	bsf	1,7
  6802  09FE  0008               	return
  6803  09FF                     i1l405:	
  6804                           
  6805                           ;usb_device.c: 1667: else
  6806                           ;usb_device.c: 1668: {
  6807                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  6808  09FF  0020               	movlb	0	; select bank0
  6809  0A00  1FC0               	btfss	64,7	;volatile
  6810  0A01  2A12               	goto	i1l3667
  6811                           
  6812                           ;usb_device.c: 1670: {
  6813                           ;usb_device.c: 1671: controlTransferState = 1;
  6814  0A02  3001               	movlw	1
  6815  0A03  00D8               	movwf	_controlTransferState	;volatile
  6816                           
  6817                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  6818  0A04  0021               	movlb	1	; select bank1
  6819  0A05  0856               	movf	_USBDeferINDataStagePackets^(0+128),w	;volatile
  6820  0A06  1D03               	btfss	3,2
  6821  0A07  2A0A               	goto	i1l3659
  6822                           
  6823                           ;usb_device.c: 1686: {
  6824                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  6825  0A08  2238  3188         	fcall	_USBCtrlEPAllowDataStage
  6826  0A0A                     i1l3659:	
  6827                           
  6828                           ;usb_device.c: 1688: }
  6829                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  6830  0A0A  0021               	movlb	1	; select bank1
  6831  0A0B  01D7               	clrf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  6832                           
  6833                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  6834  0A0C  01D8               	clrf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  6835                           
  6836                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  6837  0A0D  0020               	movlb	0	; select bank0
  6838  0A0E  0854               	movf	_USBDeferStatusStagePacket,w	;volatile
  6839  0A0F  1D03               	btfss	3,2
  6840  0A10  0008               	return
  6841                           
  6842                           ;usb_device.c: 1713: {
  6843                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  6844  0A11  2CD3               	ljmp	i1l3371
  6845  0A12                     i1l3667:	
  6846                           
  6847                           ;usb_device.c: 1717: else
  6848                           ;usb_device.c: 1718: {
  6849                           ;usb_device.c: 1729: controlTransferState = 2;
  6850  0A12  3002               	movlw	2
  6851  0A13  00D8               	movwf	_controlTransferState	;volatile
  6852                           
  6853                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  6854  0A14  0850               	movf	_pBDTEntryEP0OutNext,w
  6855  0A15  3E01               	addlw	1
  6856  0A16  00F5               	movwf	??_USBCtrlEPServiceComplete
  6857  0A17  3000               	movlw	0
  6858  0A18  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  6859  0A19  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  6860  0A1A  0875               	movf	??_USBCtrlEPServiceComplete,w
  6861  0A1B  0086               	movwf	6
  6862  0A1C  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6863  0A1D  0087               	movwf	7
  6864  0A1E  3008               	movlw	8
  6865  0A1F  0081               	movwf	1
  6866                           
  6867                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  6868  0A20  3040               	movlw	64
  6869  0A21  00F5               	movwf	??_USBCtrlEPServiceComplete
  6870  0A22  01F6               	clrf	??_USBCtrlEPServiceComplete+1
  6871  0A23  0850               	movf	_pBDTEntryEP0OutNext,w
  6872  0A24  0086               	movwf	6
  6873  0A25  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6874  0A26  0087               	movwf	7
  6875  0A27  3142               	addfsr 1,2
  6876  0A28  0875               	movf	??_USBCtrlEPServiceComplete,w
  6877  0A29  3FC0               	movwi [0]fsr1
  6878  0A2A  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  6879  0A2B  3FC1               	movwi [1]fsr1
  6880                           
  6881                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  6882  0A2C  0850               	movf	_pBDTEntryEP0OutNext,w
  6883  0A2D  0086               	movwf	6
  6884  0A2E  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6885  0A2F  0087               	movwf	7
  6886  0A30  3004               	movlw	4
  6887  0A31  0081               	movwf	1
  6888                           
  6889                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6890  0A32  0850               	movf	_pBDTEntryEP0OutNext,w
  6891  0A33  0086               	movwf	6
  6892  0A34  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6893  0A35  0087               	movwf	7
  6894  0A36  1781               	bsf	1,7
  6895  0A37  2A0A               	goto	i1l3659
  6896  0A38                     __end_of_USBCtrlEPServiceComplete:	
  6897                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  6898                           
  6899                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  6900                           
  6901                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  6902                           
  6903  0A38                     __ptext23:	
  6904 ;; *************** function _USBCtrlEPAllowDataStage *****************
  6905 ;; Defined at:
  6906 ;;		line 1488 in file "usb/usb_device.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6915 ;; Tracked objects:
  6916 ;;		On entry : 1F/1
  6917 ;;		On exit  : 1E/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;Total ram usage:        2 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; Hardware stack levels required when called:    1
  6927 ;; This function calls:
  6928 ;;		_USBCtrlTrfTxService
  6929 ;; This function is called by:
  6930 ;;		_USBCtrlEPServiceComplete
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function _USBCtrlEPAllowDataStage
  6936  0A38                     _USBCtrlEPAllowDataStage:	
  6937                           
  6938                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6942  0A38  01D6               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
  6943                           
  6944                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  6945  0A39  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
  6946                           
  6947                           ;usb_device.c: 1493: if(controlTransferState == 2)
  6948  0A3A  3002               	movlw	2
  6949  0A3B  0020               	movlb	0	; select bank0
  6950  0A3C  0658               	xorwf	_controlTransferState,w	;volatile
  6951  0A3D  1D03               	btfss	3,2
  6952  0A3E  2A63               	goto	i1l3419
  6953                           
  6954                           ;usb_device.c: 1494: {
  6955                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  6956  0A3F  0850               	movf	_pBDTEntryEP0OutNext,w
  6957  0A40  3E01               	addlw	1
  6958  0A41  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6959  0A42  3000               	movlw	0
  6960  0A43  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  6961  0A44  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  6962  0A45  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6963  0A46  0086               	movwf	6
  6964  0A47  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6965  0A48  0087               	movwf	7
  6966  0A49  3008               	movlw	8
  6967  0A4A  0081               	movwf	1
  6968                           
  6969                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  6970  0A4B  3048               	movlw	72
  6971  0A4C  00F3               	movwf	??_USBCtrlEPAllowDataStage
  6972  0A4D  01F4               	clrf	??_USBCtrlEPAllowDataStage+1
  6973  0A4E  0850               	movf	_pBDTEntryEP0OutNext,w
  6974  0A4F  0086               	movwf	6
  6975  0A50  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6976  0A51  0087               	movwf	7
  6977  0A52  3142               	addfsr 1,2
  6978  0A53  0873               	movf	??_USBCtrlEPAllowDataStage,w
  6979  0A54  3FC0               	movwi [0]fsr1
  6980  0A55  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  6981  0A56  3FC1               	movwi [1]fsr1
  6982                           
  6983                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  6984  0A57  0850               	movf	_pBDTEntryEP0OutNext,w
  6985  0A58  0086               	movwf	6
  6986  0A59  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6987  0A5A  0087               	movwf	7
  6988  0A5B  3048               	movlw	72
  6989  0A5C  0081               	movwf	1
  6990                           
  6991                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  6992  0A5D  0850               	movf	_pBDTEntryEP0OutNext,w
  6993  0A5E  0086               	movwf	6
  6994  0A5F  0851               	movf	_pBDTEntryEP0OutNext+1,w
  6995  0A60  0087               	movwf	7
  6996  0A61  1781               	bsf	1,7
  6997                           
  6998                           ;usb_device.c: 1500: }
  6999  0A62  0008               	return
  7000  0A63                     i1l3419:	
  7001                           
  7002                           ;usb_device.c: 1501: else
  7003                           ;usb_device.c: 1502: {
  7004                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7005  0A63  0021               	movlb	1	; select bank1
  7006  0A64  0833               	movf	((_inPipes+1)^(0+128)+3),w	;volatile
  7007  0A65  0020               	movlb	0	; select bank0
  7008  0A66  0247               	subwf	71,w	;volatile
  7009  0A67  1D03               	skipz
  7010  0A68  2A6D               	goto	u211_25
  7011  0A69  0021               	movlb	1	; select bank1
  7012  0A6A  0832               	movf	(_inPipes^(0+128)+3),w	;volatile
  7013  0A6B  0020               	movlb	0	; select bank0
  7014  0A6C  0246               	subwf	70,w	;volatile
  7015  0A6D                     u211_25:	
  7016  0A6D  1803               	skipnc
  7017  0A6E  2A76               	goto	i1l3423
  7018                           
  7019                           ;usb_device.c: 1506: {
  7020                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  7021  0A6F  0847               	movf	71,w	;volatile
  7022  0A70  0021               	movlb	1	; select bank1
  7023  0A71  00B3               	movwf	((_inPipes+1)^(0+128)+3)	;volatile
  7024  0A72  0020               	movlb	0	; select bank0
  7025  0A73  0846               	movf	70,w	;volatile
  7026  0A74  0021               	movlb	1	; select bank1
  7027  0A75  00B2               	movwf	(_inPipes^(0+128)+3)	;volatile
  7028  0A76                     i1l3423:	
  7029                           
  7030                           ;usb_device.c: 1508: }
  7031                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  7032  0A76  26FA               	fcall	_USBCtrlTrfTxService
  7033                           
  7034                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7035  0A77  3048               	movlw	72
  7036  0A78  00F3               	movwf	??_USBCtrlEPAllowDataStage
  7037  0A79  01F4               	clrf	??_USBCtrlEPAllowDataStage+1
  7038  0A7A  0021               	movlb	1	; select bank1
  7039  0A7B  0838               	movf	_pBDTEntryIn^(0+128),w
  7040  0A7C  0086               	movwf	6
  7041  0A7D  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  7042  0A7E  0087               	movwf	7
  7043  0A7F  3142               	addfsr 1,2
  7044  0A80  0873               	movf	??_USBCtrlEPAllowDataStage,w
  7045  0A81  3FC0               	movwi [0]fsr1
  7046  0A82  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  7047  0A83  3FC1               	movwi [1]fsr1
  7048                           
  7049                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7050  0A84  0838               	movf	_pBDTEntryIn^(0+128),w
  7051  0A85  0086               	movwf	6
  7052  0A86  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  7053  0A87  0087               	movwf	7
  7054  0A88  3048               	movlw	72
  7055  0A89  0081               	movwf	1
  7056                           
  7057                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7058  0A8A  0838               	movf	_pBDTEntryIn^(0+128),w
  7059  0A8B  0086               	movwf	6
  7060  0A8C  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  7061  0A8D  0087               	movwf	7
  7062  0A8E  1781               	bsf	1,7
  7063  0A8F  0008               	return
  7064  0A90                     __end_of_USBCtrlEPAllowDataStage:	
  7065  0A90                     __ptext29:	
  7066 ;; *************** function _USBStdFeatureReqHandler *****************
  7067 ;; Defined at:
  7068 ;;		line 2754 in file "usb/usb_device.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  p               2    9[BANK0 ] PTR struct __BDT
  7073 ;;		 -> RAM(4096), NULL(0), BDT(32), 
  7074 ;;  pUEP            2    6[BANK0 ] PTR unsigned char 
  7075 ;;		 -> UEP0(1), 
  7076 ;;  current_ep_d    1    8[BANK0 ] struct .
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      void 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 1E/0
  7083 ;;		On exit  : 1F/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;Total ram usage:        7 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    4
  7093 ;; This function calls:
  7094 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7095 ;; This function is called by:
  7096 ;;		_USBCheckStdRequest
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _USBStdFeatureReqHandler
  7102  0A90                     _USBStdFeatureReqHandler:	
  7103  0A90                     i1l3541:	
  7104                           ;incstack = 0
  7105                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7106                           
  7107                           
  7108                           ;usb_device.c: 2756: BDT_ENTRY *p;
  7109                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  7110                           ;usb_device.c: 2761: unsigned char* pUEP;
  7111                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  7112                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  7113  0A90  0020               	movlb	0	; select bank0
  7114  0A91  0B42               	decfsz	66,w	;volatile
  7115  0A92  2AA4               	goto	i1l3553
  7116  0A93  0840               	movf	64,w	;volatile
  7117  0A94  391F               	andlw	31
  7118  0A95  1D03               	skipz
  7119  0A96  2AA4               	goto	i1l3553
  7120                           
  7121                           ;usb_device.c: 2801: {
  7122                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  7123  0A97  0021               	movlb	1	; select bank1
  7124  0A98  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7125                           
  7126                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  7127  0A99  3003               	movlw	3
  7128  0A9A  0020               	movlb	0	; select bank0
  7129  0A9B  0641               	xorwf	65,w	;volatile
  7130  0A9C  1D03               	btfss	3,2
  7131  0A9D  2AA2               	goto	i1l3551
  7132                           
  7133                           ;usb_device.c: 2804: RemoteWakeup = 1;
  7134  0A9E  3001               	movlw	1
  7135  0A9F  0021               	movlb	1	; select bank1
  7136  0AA0  00DB               	movwf	_RemoteWakeup^(0+128)	;volatile
  7137  0AA1  2AA4               	goto	i1l3553
  7138  0AA2                     i1l3551:	
  7139                           
  7140                           ;usb_device.c: 2805: else
  7141                           ;usb_device.c: 2806: RemoteWakeup = 0;
  7142  0AA2  0021               	movlb	1	; select bank1
  7143  0AA3  01DB               	clrf	_RemoteWakeup^(0+128)	;volatile
  7144  0AA4                     i1l3553:	
  7145                           
  7146                           ;usb_device.c: 2807: }
  7147                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  7148                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  7149                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 1)&&
  7150                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  7151  0AA4  0020               	movlb	0	; select bank0
  7152  0AA5  0842               	movf	66,w	;volatile
  7153  0AA6  1D03               	btfss	3,2
  7154  0AA7  0008               	return
  7155  0AA8  0840               	movf	64,w	;volatile
  7156  0AA9  391F               	andlw	31
  7157  0AAA  3A02               	xorlw	2
  7158  0AAB  1D03               	skipz
  7159  0AAC  0008               	return
  7160  0AAD  0844               	movf	68,w	;volatile
  7161  0AAE  390F               	andlw	15
  7162  0AAF  1903               	skipnz
  7163  0AB0  0008               	return
  7164  0AB1  0844               	movf	68,w	;volatile
  7165  0AB2  390F               	andlw	15
  7166  0AB3  00FB               	movwf	??_USBStdFeatureReqHandler
  7167  0AB4  3002               	movlw	2
  7168  0AB5  027B               	subwf	??_USBStdFeatureReqHandler,w
  7169  0AB6  1803               	skipnc
  7170  0AB7  0008               	return
  7171  0AB8  3020               	movlw	32
  7172  0AB9  065B               	xorwf	_USBDeviceState,w	;volatile
  7173  0ABA  1D03               	btfss	3,2
  7174  0ABB  0008               	return
  7175                           
  7176                           ;usb_device.c: 2814: {
  7177                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  7178  0ABC  0021               	movlb	1	; select bank1
  7179  0ABD  17B1               	bsf	(_inPipes^(0+128)+2),7	;volatile
  7180                           
  7181                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  7182  0ABE  0020               	movlb	0	; select bank0
  7183  0ABF  1BC4               	btfsc	68,7	;volatile
  7184  0AC0  2ACF               	goto	i1l3567
  7185                           
  7186                           ;usb_device.c: 2821: {
  7187                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7188  0AC1  0844               	movf	68,w	;volatile
  7189  0AC2  390F               	andlw	15
  7190  0AC3  0709               	addwf	9,w
  7191  0AC4  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  7192  0AC5  0086               	movwf	6
  7193  0AC6  0187               	clrf	7
  7194  0AC7  3F40               	moviw [0]fsr1
  7195  0AC8  00E8               	movwf	USBStdFeatureReqHandler@p
  7196  0AC9  3F41               	moviw [1]fsr1
  7197  0ACA  00E9               	movwf	USBStdFeatureReqHandler@p+1
  7198                           
  7199                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  7200  0ACB  0844               	movf	68,w	;volatile
  7201  0ACC  390F               	andlw	15
  7202  0ACD  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  7203  0ACE  2ADC               	goto	L4
  7204  0ACF                     i1l3567:	
  7205                           ;usb_device.c: 2824: }
  7206                           
  7207                           
  7208                           ;usb_device.c: 2825: else
  7209                           ;usb_device.c: 2826: {
  7210                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  7211  0ACF  0844               	movf	68,w	;volatile
  7212  0AD0  390F               	andlw	15
  7213  0AD1  0709               	addwf	9,w
  7214  0AD2  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7215  0AD3  0086               	movwf	6
  7216  0AD4  0187               	clrf	7
  7217  0AD5  3F40               	moviw [0]fsr1
  7218  0AD6  00E8               	movwf	USBStdFeatureReqHandler@p
  7219  0AD7  3F41               	moviw [1]fsr1
  7220  0AD8  00E9               	movwf	USBStdFeatureReqHandler@p+1
  7221                           
  7222                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  7223  0AD9  0844               	movf	68,w	;volatile
  7224  0ADA  390F               	andlw	15
  7225  0ADB  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  7226  0ADC                     L4:	
  7227  0ADC  0086               	movwf	6
  7228  0ADD  0801               	movf	1,w
  7229  0ADE  00E7               	movwf	USBStdFeatureReqHandler@current_ep_data
  7230                           
  7231                           ;usb_device.c: 2829: }
  7232                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  7233  0ADF  1867               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  7234  0AE0  2AEC               	goto	i1l3573
  7235                           
  7236                           ;usb_device.c: 2836: {
  7237                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  7238  0AE1  30FB               	movlw	251
  7239  0AE2  00FB               	movwf	??_USBStdFeatureReqHandler
  7240  0AE3  30FF               	movlw	255
  7241  0AE4  00FC               	movwf	??_USBStdFeatureReqHandler+1
  7242  0AE5  0868               	movf	USBStdFeatureReqHandler@p,w
  7243  0AE6  057B               	andwf	??_USBStdFeatureReqHandler,w
  7244  0AE7  00E8               	movwf	USBStdFeatureReqHandler@p
  7245  0AE8  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7246  0AE9  057C               	andwf	??_USBStdFeatureReqHandler+1,w
  7247  0AEA  00E9               	movwf	USBStdFeatureReqHandler@p+1
  7248                           
  7249                           ;usb_device.c: 2838: }
  7250  0AEB  2AEF               	goto	i1l3575
  7251  0AEC                     i1l3573:	
  7252                           
  7253                           ;usb_device.c: 2839: else
  7254                           ;usb_device.c: 2840: {
  7255                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  7256  0AEC  3004               	movlw	4
  7257  0AED  0468               	iorwf	USBStdFeatureReqHandler@p,w
  7258  0AEE  00E8               	movwf	USBStdFeatureReqHandler@p
  7259  0AEF                     i1l3575:	
  7260                           
  7261                           ;usb_device.c: 2842: }
  7262                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  7263  0AEF  1BC4               	btfsc	68,7	;volatile
  7264  0AF0  2AFC               	goto	i1l3579
  7265                           
  7266                           ;usb_device.c: 2848: {
  7267                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7268  0AF1  0844               	movf	68,w	;volatile
  7269  0AF2  390F               	andlw	15
  7270  0AF3  0709               	addwf	9,w
  7271  0AF4  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
  7272  0AF5  0086               	movwf	6
  7273  0AF6  0187               	clrf	7
  7274  0AF7  0868               	movf	USBStdFeatureReqHandler@p,w
  7275  0AF8  3FC0               	movwi [0]fsr1
  7276  0AF9  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7277  0AFA  3FC1               	movwi [1]fsr1
  7278                           
  7279                           ;usb_device.c: 2850: }
  7280  0AFB  2B06               	goto	i1l3581
  7281  0AFC                     i1l3579:	
  7282                           
  7283                           ;usb_device.c: 2851: else
  7284                           ;usb_device.c: 2852: {
  7285                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  7286  0AFC  0844               	movf	68,w	;volatile
  7287  0AFD  390F               	andlw	15
  7288  0AFE  0709               	addwf	9,w
  7289  0AFF  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
  7290  0B00  0086               	movwf	6
  7291  0B01  0187               	clrf	7
  7292  0B02  0868               	movf	USBStdFeatureReqHandler@p,w
  7293  0B03  3FC0               	movwi [0]fsr1
  7294  0B04  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7295  0B05  3FC1               	movwi [1]fsr1
  7296  0B06                     i1l3581:	
  7297                           
  7298                           ;usb_device.c: 2854: }
  7299                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  7300  0B06  3003               	movlw	3
  7301  0B07  0641               	xorwf	65,w	;volatile
  7302  0B08  1D03               	btfss	3,2
  7303  0B09  2B27               	goto	i1l3595
  7304                           
  7305                           ;usb_device.c: 2858: {
  7306                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  7307  0B0A  0868               	movf	USBStdFeatureReqHandler@p,w
  7308  0B0B  0086               	movwf	6
  7309  0B0C  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7310  0B0D  0087               	movwf	7
  7311  0B0E  1F81               	btfss	1,7
  7312  0B0F  2B1C               	goto	i1l3591
  7313                           
  7314                           ;usb_device.c: 2860: {
  7315                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  7316  0B10  1BC4               	btfsc	68,7	;volatile
  7317  0B11  2B16               	goto	i1l3589
  7318                           
  7319                           ;usb_device.c: 2864: {
  7320                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7321  0B12  0844               	movf	68,w	;volatile
  7322  0B13  390F               	andlw	15
  7323  0B14  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  7324  0B15  2B19               	goto	L5
  7325  0B16                     i1l3589:	
  7326                           ;usb_device.c: 2866: }
  7327                           
  7328                           
  7329                           ;usb_device.c: 2867: else
  7330                           ;usb_device.c: 2868: {
  7331                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  7332  0B16  0844               	movf	68,w	;volatile
  7333  0B17  390F               	andlw	15
  7334  0B18  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  7335  0B19                     L5:	
  7336  0B19  0086               	movwf	6
  7337  0B1A  0187               	clrf	7
  7338  0B1B  1481               	bsf	1,1
  7339  0B1C                     i1l3591:	
  7340                           
  7341                           ;usb_device.c: 2870: }
  7342                           ;usb_device.c: 2871: }
  7343                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  7344  0B1C  0868               	movf	USBStdFeatureReqHandler@p,w
  7345  0B1D  0086               	movwf	6
  7346  0B1E  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7347  0B1F  0087               	movwf	7
  7348  0B20  1501               	bsf	1,2
  7349                           
  7350                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  7351  0B21  0868               	movf	USBStdFeatureReqHandler@p,w
  7352  0B22  0086               	movwf	6
  7353  0B23  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7354  0B24  0087               	movwf	7
  7355  0B25  1781               	bsf	1,7
  7356                           
  7357                           ;usb_device.c: 2876: }
  7358  0B26  0008               	return
  7359  0B27                     i1l3595:	
  7360                           
  7361                           ;usb_device.c: 2877: else
  7362                           ;usb_device.c: 2878: {
  7363                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7364  0B27  3004               	movlw	4
  7365  0B28  0668               	xorwf	USBStdFeatureReqHandler@p,w
  7366  0B29  00E8               	movwf	USBStdFeatureReqHandler@p
  7367                           
  7368                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  7369  0B2A  0086               	movwf	6
  7370  0B2B  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7371  0B2C  0087               	movwf	7
  7372                           
  7373                           ;usb_device.c: 2885: {
  7374                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7375  0B2D  0868               	movf	USBStdFeatureReqHandler@p,w
  7376  0B2E  1F81               	btfss	1,7
  7377  0B2F  2B46               	goto	L7
  7378  0B30  0086               	movwf	6
  7379  0B31  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7380  0B32  0087               	movwf	7
  7381  0B33  1381               	bcf	1,7
  7382                           
  7383                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7384  0B34  0868               	movf	USBStdFeatureReqHandler@p,w
  7385  0B35  0086               	movwf	6
  7386  0B36  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7387  0B37  0087               	movwf	7
  7388  0B38  3005               	movlw	5
  7389  0B39  1701               	bsf	1,6
  7390                           
  7391                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7392  0B3A  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7393  0B3B  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7394  0B3C  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7395  0B3D  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7396  0B3E  0868               	movf	USBStdFeatureReqHandler@p,w
  7397  0B3F  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7398  0B40  3002               	movlw	2
  7399  0B41  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7400  0B42  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7401  0B43  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7402                           
  7403                           ;usb_device.c: 2891: }
  7404  0B45  2B4A               	goto	i1l3605
  7405  0B46                     L7:	
  7406                           ;usb_device.c: 2892: else
  7407                           ;usb_device.c: 2893: {
  7408                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7409                           
  7410  0B46  0086               	movwf	6
  7411  0B47  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7412  0B48  0087               	movwf	7
  7413  0B49  1701               	bsf	1,6
  7414  0B4A                     i1l3605:	
  7415                           
  7416                           ;usb_device.c: 2896: }
  7417                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7418  0B4A  3004               	movlw	4
  7419  0B4B  0020               	movlb	0	; select bank0
  7420  0B4C  0668               	xorwf	USBStdFeatureReqHandler@p,w
  7421  0B4D  00E8               	movwf	USBStdFeatureReqHandler@p
  7422                           
  7423                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7424  0B4E  18E7               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  7425  0B4F  2B56               	goto	i1l566
  7426  0B50  0868               	movf	USBStdFeatureReqHandler@p,w
  7427  0B51  0086               	movwf	6
  7428  0B52  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7429  0B53  0087               	movwf	7
  7430  0B54  1F81               	btfss	1,7
  7431  0B55  2B75               	goto	i1l3617
  7432  0B56                     i1l566:	
  7433                           
  7434                           ;usb_device.c: 2907: {
  7435                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7436  0B56  1BC4               	btfsc	68,7	;volatile
  7437  0B57  2B5C               	goto	i1l3613
  7438                           
  7439                           ;usb_device.c: 2909: {
  7440                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7441  0B58  0844               	movf	68,w	;volatile
  7442  0B59  390F               	andlw	15
  7443  0B5A  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  7444  0B5B  2B5F               	goto	L6
  7445  0B5C                     i1l3613:	
  7446                           ;usb_device.c: 2911: }
  7447                           
  7448                           
  7449                           ;usb_device.c: 2912: else
  7450                           ;usb_device.c: 2913: {
  7451                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7452  0B5C  0844               	movf	68,w	;volatile
  7453  0B5D  390F               	andlw	15
  7454  0B5E  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  7455  0B5F                     L6:	
  7456  0B5F  0086               	movwf	6
  7457  0B60  0187               	clrf	7
  7458  0B61  1081               	bcf	1,1
  7459                           
  7460                           ;usb_device.c: 2915: }
  7461                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7462  0B62  0868               	movf	USBStdFeatureReqHandler@p,w
  7463  0B63  0086               	movwf	6
  7464  0B64  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7465  0B65  0087               	movwf	7
  7466  0B66  303B               	movlw	59
  7467  0B67  0581               	andwf	1,f
  7468                           
  7469                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7470  0B68  3005               	movlw	5
  7471  0B69  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7472  0B6A  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7473  0B6B  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7474  0B6C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7475  0B6D  0868               	movf	USBStdFeatureReqHandler@p,w
  7476  0B6E  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7477  0B6F  3002               	movlw	2
  7478  0B70  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7479  0B71  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7480  0B72  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7481                           
  7482                           ;usb_device.c: 2921: }
  7483  0B74  2B7B               	goto	i1l3619
  7484  0B75                     i1l3617:	
  7485                           
  7486                           ;usb_device.c: 2922: else
  7487                           ;usb_device.c: 2923: {
  7488                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7489  0B75  0868               	movf	USBStdFeatureReqHandler@p,w
  7490  0B76  0086               	movwf	6
  7491  0B77  0869               	movf	USBStdFeatureReqHandler@p+1,w
  7492  0B78  0087               	movwf	7
  7493  0B79  303B               	movlw	59
  7494  0B7A  0581               	andwf	1,f
  7495  0B7B                     i1l3619:	
  7496                           
  7497                           ;usb_device.c: 2926: }
  7498                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7499  0B7B  0020               	movlb	0	; select bank0
  7500  0B7C  0844               	movf	68,w	;volatile
  7501  0B7D  390F               	andlw	15
  7502  0B7E  3E98               	addlw	152
  7503  0B7F  00FB               	movwf	??_USBStdFeatureReqHandler
  7504  0B80  300E               	movlw	14
  7505  0B81  01FC               	clrf	??_USBStdFeatureReqHandler+1
  7506  0B82  3DFC               	addwfc	??_USBStdFeatureReqHandler+1,f
  7507  0B83  087B               	movf	??_USBStdFeatureReqHandler,w
  7508  0B84  00E5               	movwf	USBStdFeatureReqHandler@pUEP
  7509  0B85  087C               	movf	??_USBStdFeatureReqHandler+1,w
  7510  0B86  00E6               	movwf	USBStdFeatureReqHandler@pUEP+1
  7511                           
  7512                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7513  0B87  0865               	movf	USBStdFeatureReqHandler@pUEP,w
  7514  0B88  0086               	movwf	6
  7515  0B89  0866               	movf	USBStdFeatureReqHandler@pUEP+1,w
  7516  0B8A  0087               	movwf	7
  7517  0B8B  1001               	bcf	1,0
  7518  0B8C  0008               	return
  7519  0B8D                     __end_of_USBStdFeatureReqHandler:	
  7520  0B8D                     __ptext14:	
  7521 ;; *************** function _USBDeviceTasks *****************
  7522 ;; Defined at:
  7523 ;;		line 477 in file "usb/usb_device.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;  i               1   14[BANK0 ] unsigned char 
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  1    wreg      void 
  7530 ;; Registers used:
  7531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 1F/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7541 ;;Total ram usage:        2 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    8
  7544 ;; This function calls:
  7545 ;;		_USBCtrlEPAllowStatusStage
  7546 ;;		_USBCtrlEPService
  7547 ;;		_USBIncrement1msInternalTimers
  7548 ;;		_USBStallHandler
  7549 ;;		_USBSuspend
  7550 ;;		_USBWakeFromSuspend
  7551 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7552 ;;		i1_USBDeviceInit
  7553 ;; This function is called by:
  7554 ;;		_SYS_InterruptHigh
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           
  7559                           ;psect for function _USBDeviceTasks
  7560  0B8D                     _USBDeviceTasks:	
  7561                           
  7562                           ;usb_device.c: 479: uint8_t i;
  7563                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  7564                           
  7565                           ;incstack = 0
  7566                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7567  0B8D  0020               	movlb	0	; select bank0
  7568  0B8E  035B               	decf	_USBDeviceState,w	;volatile
  7569  0B8F  1D03               	btfss	3,2
  7570  0B90  2B9A               	goto	i1l4215
  7571                           
  7572                           ;usb_device.c: 591: {
  7573                           ;usb_device.c: 601: if(!UCONbits.SE0)
  7574  0B91  003D               	movlb	29	; select bank29
  7575  0B92  1A8E               	btfsc	14,5	;volatile
  7576  0B93  2B9A               	goto	i1l4215
  7577                           
  7578                           ;usb_device.c: 602: {
  7579                           ;usb_device.c: 608: {UIR = 0;};
  7580  0B94  0190               	clrf	16	;volatile
  7581                           
  7582                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  7583  0B95  1412               	bsf	18,0	;volatile
  7584                           
  7585                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  7586  0B96  1612               	bsf	18,4	;volatile
  7587                           
  7588                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  7589  0B97  3002               	movlw	2
  7590  0B98  0020               	movlb	0	; select bank0
  7591  0B99  00DB               	movwf	_USBDeviceState	;volatile
  7592  0B9A                     i1l4215:	
  7593                           
  7594                           ;usb_device.c: 617: }
  7595                           ;usb_device.c: 618: }
  7596                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  7597  0B9A  003D               	movlb	29	; select bank29
  7598  0B9B  1910               	btfsc	16,2	;volatile
  7599  0B9C  1D12               	btfss	18,2	;volatile
  7600  0B9D  2BA1               	goto	i1l4223
  7601                           
  7602                           ;usb_device.c: 635: {
  7603                           ;usb_device.c: 636: (UIR &= 0xFB);
  7604  0B9E  1110               	bcf	16,2	;volatile
  7605                           
  7606                           ;usb_device.c: 640: USBWakeFromSuspend();
  7607  0B9F  2772  3188         	fcall	_USBWakeFromSuspend
  7608  0BA1                     i1l4223:	
  7609                           
  7610                           ;usb_device.c: 642: }
  7611                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  7612  0BA1  003D               	movlb	29	; select bank29
  7613  0BA2  1C8E               	btfss	14,1	;volatile
  7614  0BA3  2BA7               	goto	i1l331
  7615                           
  7616                           ;usb_device.c: 648: {
  7617                           ;usb_device.c: 649: PIR2bits.USBIF = 0;;
  7618  0BA4  0020               	movlb	0	; select bank0
  7619  0BA5  1112               	bcf	18,2	;volatile
  7620                           
  7621                           ;usb_device.c: 650: return;
  7622  0BA6  0008               	return
  7623  0BA7                     i1l331:	
  7624                           
  7625                           ;usb_device.c: 651: }
  7626                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  7627  0BA7  1810               	btfsc	16,0	;volatile
  7628  0BA8  1C12               	btfss	18,0	;volatile
  7629  0BA9  2BB3               	goto	i1l4237
  7630                           
  7631                           ;usb_device.c: 664: {
  7632                           ;usb_device.c: 665: USBDeviceInit();
  7633  0BAA  2789  3188         	fcall	i1_USBDeviceInit
  7634                           
  7635                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  7636  0BAC  0021               	movlb	1	; select bank1
  7637  0BAD  1512               	bsf	18,2	;volatile
  7638                           
  7639                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  7640  0BAE  3004               	movlw	4
  7641  0BAF  0020               	movlb	0	; select bank0
  7642  0BB0  00DB               	movwf	_USBDeviceState	;volatile
  7643                           
  7644                           ;usb_device.c: 681: (UIR &= 0xFE);
  7645  0BB1  003D               	movlb	29	; select bank29
  7646  0BB2  1010               	bcf	16,0	;volatile
  7647  0BB3                     i1l4237:	
  7648                           
  7649                           ;usb_device.c: 682: }
  7650                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  7651  0BB3  1A10               	btfsc	16,4	;volatile
  7652  0BB4  1E12               	btfss	18,4	;volatile
  7653  0BB5  2BB8               	goto	i1l4243
  7654                           
  7655                           ;usb_device.c: 688: {
  7656                           ;usb_device.c: 694: USBSuspend();
  7657  0BB6  2678  3188         	fcall	_USBSuspend
  7658  0BB8                     i1l4243:	
  7659                           
  7660                           ;usb_device.c: 696: }
  7661                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  7662  0BB8  003D               	movlb	29	; select bank29
  7663  0BB9  1F10               	btfss	16,6	;volatile
  7664  0BBA  2BD5               	goto	i1l4261
  7665                           
  7666                           ;usb_device.c: 709: {
  7667                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  7668  0BBB  1F12               	btfss	18,6	;volatile
  7669  0BBC  2BC8               	goto	i1l4249
  7670                           
  7671                           ;usb_device.c: 712: {
  7672                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  7673  0BBD  3073               	movlw	115
  7674  0BBE  0020               	movlb	0	; select bank0
  7675  0BBF  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7676  0BC0  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7677  0BC1  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7678  0BC2  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7679  0BC3  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7680  0BC4  0AE3               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  7681  0BC5  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7682  0BC6  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7683  0BC8                     i1l4249:	
  7684                           
  7685                           ;usb_device.c: 714: }
  7686                           ;usb_device.c: 715: (UIR &= 0xBF);
  7687  0BC8  003D               	movlb	29	; select bank29
  7688  0BC9  1310               	bcf	16,6	;volatile
  7689                           
  7690                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  7691  0BCA  2666  3188         	fcall	_USBIncrement1msInternalTimers
  7692                           
  7693                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  7694  0BCC  0020               	movlb	0	; select bank0
  7695  0BCD  0855               	movf	_USBStatusStageTimeoutCounter,w
  7696  0BCE  1D03               	btfss	3,2
  7697                           
  7698                           ;usb_device.c: 736: {
  7699                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  7700  0BCF  03D5               	decf	_USBStatusStageTimeoutCounter,f	;volatile
  7701                           
  7702                           ;usb_device.c: 738: }
  7703                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  7704  0BD0  0855               	movf	_USBStatusStageTimeoutCounter,w	;volatile
  7705  0BD1  1D03               	btfss	3,2
  7706  0BD2  2BD5               	goto	i1l4261
  7707                           
  7708                           ;usb_device.c: 745: {
  7709                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  7710  0BD3  24D3  3188         	fcall	_USBCtrlEPAllowStatusStage
  7711  0BD5                     i1l4261:	
  7712                           
  7713                           ;usb_device.c: 747: }
  7714                           ;usb_device.c: 749: }
  7715                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  7716  0BD5  003D               	movlb	29	; select bank29
  7717  0BD6  1A90               	btfsc	16,5	;volatile
  7718  0BD7  1E92               	btfss	18,5	;volatile
  7719  0BD8  2BDB               	goto	i1l4267
  7720                           
  7721                           ;usb_device.c: 752: {
  7722                           ;usb_device.c: 753: USBStallHandler();
  7723  0BD9  2752  3188         	fcall	_USBStallHandler
  7724  0BDB                     i1l4267:	
  7725                           
  7726                           ;usb_device.c: 754: }
  7727                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  7728  0BDB  1890               	btfsc	16,1	;volatile
  7729  0BDC  1C92               	btfss	18,1	;volatile
  7730  0BDD  2BEC               	goto	i1l4275
  7731                           
  7732                           ;usb_device.c: 757: {
  7733                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  7734  0BDE  30FF               	movlw	255
  7735  0BDF  0020               	movlb	0	; select bank0
  7736  0BE0  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7737  0BE1  307F               	movlw	127
  7738  0BE2  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7739  0BE3  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7740  0BE4  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7741  0BE5  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7742  0BE6  0AE3               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  7743  0BE7  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7744  0BE8  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7745                           
  7746                           ;usb_device.c: 759: {UEIR = 0;};
  7747  0BEA  003D               	movlb	29	; select bank29
  7748  0BEB  0193               	clrf	19	;volatile
  7749  0BEC                     i1l4275:	
  7750                           
  7751                           ;usb_device.c: 767: }
  7752                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  7753  0BEC  3004               	movlw	4
  7754  0BED  0020               	movlb	0	; select bank0
  7755  0BEE  025B               	subwf	_USBDeviceState,w	;volatile
  7756  0BEF  1803               	skipnc
  7757  0BF0  2BF3               	goto	i1l341
  7758                           
  7759                           ;usb_device.c: 775: {
  7760                           ;usb_device.c: 776: PIR2bits.USBIF = 0;;
  7761  0BF1  1112               	bcf	18,2	;volatile
  7762                           
  7763                           ;usb_device.c: 777: return;
  7764  0BF2  0008               	return
  7765  0BF3                     i1l341:	
  7766                           
  7767                           ;usb_device.c: 778: }
  7768                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  7769  0BF3  003D               	movlb	29	; select bank29
  7770  0BF4  1D92               	btfss	18,3	;volatile
  7771  0BF5  2C2A               	goto	i1l342
  7772                           
  7773                           ;usb_device.c: 784: {
  7774                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  7775  0BF6  0020               	movlb	0	; select bank0
  7776  0BF7  01ED               	clrf	USBDeviceTasks@i
  7777  0BF8  2C27               	goto	i1l343
  7778  0BF9                     i1l4285:	
  7779                           
  7780                           ;usb_device.c: 788: {
  7781                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  7782  0BF9  080F               	movf	15,w	;volatile
  7783  0BFA  0020               	movlb	0	; select bank0
  7784  0BFB  00DC               	movwf	_USTATcopy	;volatile
  7785                           
  7786                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  7787  0BFC  0C5C               	rrf	_USTATcopy,w	;volatile
  7788  0BFD  00FD               	movwf	??_USBDeviceTasks
  7789  0BFE  0CFD               	rrf	??_USBDeviceTasks,f
  7790  0BFF  0C7D               	rrf	??_USBDeviceTasks,w
  7791  0C00  390F               	andlw	15
  7792  0C01  00D6               	movwf	_endpoint_number	;volatile
  7793                           
  7794                           ;usb_device.c: 793: (UIR &= 0xF7);
  7795  0C02  003D               	movlb	29	; select bank29
  7796  0C03  1190               	bcf	16,3	;volatile
  7797                           
  7798                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  7799  0C04  0020               	movlb	0	; select bank0
  7800  0C05  195C               	btfsc	_USTATcopy,2	;volatile
  7801  0C06  2C0A               	goto	i1l4295
  7802                           
  7803                           ;usb_device.c: 799: {
  7804                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  7805  0C07  0856               	movf	_endpoint_number,w	;volatile
  7806  0C08  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
  7807  0C09  2C0C               	goto	L2
  7808  0C0A                     i1l4295:	
  7809                           ;usb_device.c: 801: }
  7810                           
  7811                           
  7812                           ;usb_device.c: 802: else
  7813                           ;usb_device.c: 803: {
  7814                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  7815  0C0A  0856               	movf	_endpoint_number,w	;volatile
  7816  0C0B  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
  7817  0C0C                     L2:	
  7818  0C0C  0086               	movwf	6
  7819  0C0D  3001               	movlw	1
  7820  0C0E  0187               	clrf	7
  7821  0C0F  0681               	xorwf	1,f
  7822                           
  7823                           ;usb_device.c: 805: }
  7824                           ;usb_device.c: 810: if(endpoint_number == 0)
  7825  0C10  0856               	movf	_endpoint_number,w	;volatile
  7826  0C11  1D03               	btfss	3,2
  7827  0C12  2C16               	goto	i1l4301
  7828                           
  7829                           ;usb_device.c: 811: {
  7830                           ;usb_device.c: 812: USBCtrlEPService();
  7831  0C13  2627  3188         	fcall	_USBCtrlEPService
  7832                           
  7833                           ;usb_device.c: 813: }
  7834  0C15  2C21               	goto	i1l4303
  7835  0C16                     i1l4301:	
  7836                           
  7837                           ;usb_device.c: 814: else
  7838                           ;usb_device.c: 815: {
  7839                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  7840  0C16  3072               	movlw	114
  7841  0C17  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7842  0C18  305C               	movlw	low _USTATcopy
  7843  0C19  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7844  0C1A  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7845  0C1B  3000               	movlw	high _USTATcopy
  7846  0C1C  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7847  0C1D  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7848  0C1E  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7849  0C1F  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7850  0C21                     i1l4303:	
  7851  0C21  0020               	movlb	0	; select bank0
  7852  0C22  3004               	movlw	4
  7853  0C23  0AED               	incf	USBDeviceTasks@i,f
  7854  0C24  026D               	subwf	USBDeviceTasks@i,w
  7855  0C25  1803               	btfsc	3,0
  7856  0C26  2C2A               	goto	i1l342
  7857  0C27                     i1l343:	
  7858                           
  7859                           ;usb_device.c: 786: {
  7860                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  7861  0C27  003D               	movlb	29	; select bank29
  7862  0C28  1990               	btfsc	16,3	;volatile
  7863  0C29  2BF9               	goto	i1l4285
  7864  0C2A                     i1l342:	
  7865                           
  7866                           ;usb_device.c: 822: }
  7867                           ;usb_device.c: 823: }
  7868                           ;usb_device.c: 824: }
  7869                           ;usb_device.c: 826: PIR2bits.USBIF = 0;;
  7870  0C2A  0020               	movlb	0	; select bank0
  7871  0C2B  1112               	bcf	18,2	;volatile
  7872  0C2C  0008               	return
  7873  0C2D                     __end_of_USBDeviceTasks:	
  7874  0C2D                     __ptext30:	
  7875 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7876 ;; Defined at:
  7877 ;;		line 67 in file "demo_src/usb_events.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  event           2    0[BANK0 ] enum E2883
  7880 ;;  pdata           2    2[BANK0 ] PTR void 
  7881 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7882 ;;		 -> BDT(32), 
  7883 ;;  size            2    4[BANK0 ] unsigned int 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      unsigned char 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 1F/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7898 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;Total ram usage:        6 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    3
  7902 ;; This function calls:
  7903 ;;		_APP_KeyboardInit
  7904 ;;		_APP_LEDUpdateUSBStatus
  7905 ;;		_BUTTON_UpdateStates
  7906 ;;		_USBCheckHIDRequest
  7907 ;;		i1_SYSTEM_Initialize
  7908 ;; This function is called by:
  7909 ;;		_USBDeviceTasks
  7910 ;;		_USBStdSetCfgHandler
  7911 ;;		_USBSuspend
  7912 ;;		_USBWakeFromSuspend
  7913 ;;		_USBCtrlTrfSetupHandler
  7914 ;;		_USBCheckStdRequest
  7915 ;;		_USBStdFeatureReqHandler
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  7921  0C2D                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  7922  0C2D                     i1l3277:	
  7923                           ;incstack = 0
  7924                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  7925                           
  7926                           
  7927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7928                           ; Switch size 1, requested type "speed"
  7929                           ; Number of cases is 2, Range of values is 0 to 127
  7930                           ; switch strategies available:
  7931                           ; Name         Instructions Cycles
  7932                           ; simple_byte            7     4 (average)
  7933                           ; direct_byte          262     6 (fixed)
  7934                           ; jumptable            260     6 (fixed)
  7935                           ;	Chosen strategy is simple_byte
  7936                           
  7937                           ;usb_events.c: 126: break;
  7938                           
  7939                           ;usb_events.c: 69: switch((int)event)
  7940  0C2D  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  7941  0C2E  3A00               	xorlw	0	; case 0
  7942  0C2F  1903               	skipnz
  7943  0C30  2C55               	goto	i1l5273
  7944  0C31  3A7F               	xorlw	127	; case 127
  7945  0C32  1903               	skipnz
  7946  0C33  2C62               	goto	i1l5275
  7947  0C34  2C67               	goto	i1l182
  7948  0C35                     i1l3279:	
  7949                           
  7950                           ;usb_events.c: 77: APP_LEDUpdateUSBStatus();
  7951  0C35  2468  3188         	fcall	_APP_LEDUpdateUSBStatus
  7952                           
  7953                           ;usb_events.c: 78: BUTTON_UpdateStates ();
  7954  0C37  2534  3188         	fcall	_BUTTON_UpdateStates
  7955                           
  7956                           ;usb_events.c: 79: if(SOFCounter < 32767)
  7957  0C39  0020               	movlb	0	; select bank0
  7958  0C3A  0A52               	incf	_SOFCounter,w	;volatile
  7959  0C3B  307F               	movlw	127
  7960  0C3C  1903               	skipnz
  7961  0C3D  0653               	xorwf	_SOFCounter+1,w	;volatile
  7962  0C3E  1903               	btfsc	3,2
  7963  0C3F  2C44               	goto	i1l3285
  7964                           
  7965                           ;usb_events.c: 80: {
  7966                           ;usb_events.c: 81: SOFCounter++;
  7967  0C40  0AD2               	incf	_SOFCounter,f	;volatile
  7968  0C41  1903               	skipnz
  7969  0C42  0AD3               	incf	_SOFCounter+1,f	;volatile
  7970                           
  7971                           ;usb_events.c: 82: }
  7972  0C43  0008               	return
  7973  0C44                     i1l3285:	
  7974                           
  7975                           ;usb_events.c: 83: else
  7976                           ;usb_events.c: 84: {
  7977                           ;usb_events.c: 85: SOFCounter = 0;
  7978  0C44  01D2               	clrf	_SOFCounter	;volatile
  7979  0C45  01D3               	clrf	_SOFCounter+1	;volatile
  7980  0C46  0008               	return
  7981  0C47                     i1l3287:	
  7982                           
  7983                           ;usb_events.c: 91: APP_LEDUpdateUSBStatus();
  7984  0C47  2468  3188         	fcall	_APP_LEDUpdateUSBStatus
  7985                           
  7986                           ;usb_events.c: 99: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  7987  0C49  3001               	movlw	1
  7988  0C4A  25C6               	fcall	i1_SYSTEM_Initialize
  7989                           
  7990                           ;usb_events.c: 100: break;
  7991  0C4B  0008               	return
  7992  0C4C                     i1l3289:	
  7993                           
  7994                           ;usb_events.c: 104: APP_LEDUpdateUSBStatus();
  7995  0C4C  2468  3188         	fcall	_APP_LEDUpdateUSBStatus
  7996                           
  7997                           ;usb_events.c: 110: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  7998  0C4E  3002               	movlw	2
  7999  0C4F  25C6               	fcall	i1_SYSTEM_Initialize
  8000                           
  8001                           ;usb_events.c: 111: break;
  8002  0C50  0008               	return
  8003  0C51                     i1l3291:	
  8004                           
  8005                           ;usb_events.c: 116: APP_KeyboardInit();
  8006  0C51  3182  2AC7         	ljmp	i1l3197
  8007  0C53                     i1l3293:	
  8008                           ;usb_events.c: 117: break;
  8009                           
  8010                           
  8011                           ;usb_events.c: 125: USBCheckHIDRequest();
  8012  0C53  3185  2DB5         	ljmp	i1l3205
  8013  0C55                     i1l5273:	
  8014                           
  8015                           ; Switch size 1, requested type "speed"
  8016                           ; Number of cases is 8, Range of values is 1 to 117
  8017                           ; switch strategies available:
  8018                           ; Name         Instructions Cycles
  8019                           ; direct_byte          243     9 (fixed)
  8020                           ; simple_byte           25    13 (average)
  8021                           ; jumptable            263     9 (fixed)
  8022                           ;	Chosen strategy is direct_byte
  8023  0C55  085F               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8024  0C56  3EFF               	addlw	-1
  8025  0C57  1C03               	skipc
  8026  0C58  0008               	return
  8027  0C59  0084               	movwf	4
  8028  0C5A  3075               	movlw	117
  8029  0C5B  0204               	subwf	4,w
  8030  0C5C  1803               	skipnc
  8031  0C5D  0008               	return
  8032  0C5E  3184               	movlp	high i1S5277
  8033  0C5F  3504               	lslf	4,w
  8034  0C60  3E00               	addlw	low i1S5277
  8035  0C61  0082               	movwf	2
  8036  0C62                     i1l5275:	
  8037                           
  8038                           ; Switch size 1, requested type "speed"
  8039                           ; Number of cases is 1, Range of values is 255 to 255
  8040                           ; switch strategies available:
  8041                           ; Name         Instructions Cycles
  8042                           ; simple_byte            4     3 (average)
  8043                           ; direct_byte            7     5 (fixed)
  8044                           ; jumptable            263     9 (fixed)
  8045                           ;	Chosen strategy is simple_byte
  8046  0C62  085F               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  8047  0C63  3AFF               	xorlw	255	; case 255
  8048  0C64  1903               	skipnz
  8049  0C65  2C67               	goto	i1l182
  8050  0C66  2C67               	goto	i1l182
  8051  0C67                     i1l182:	
  8052  0C67  0008               	return
  8053  0C68                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  8054  0C68                     __ptext38:	
  8055 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  8056 ;; Defined at:
  8057 ;;		line 49 in file "demo_src/app_led_usb_status.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 1F/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    1
  8078 ;; This function calls:
  8079 ;;		i1_LED_Off
  8080 ;;		i1_LED_On
  8081 ;; This function is called by:
  8082 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086                           
  8087                           ;psect for function _APP_LEDUpdateUSBStatus
  8088  0C68                     _APP_LEDUpdateUSBStatus:	
  8089                           
  8090                           ;app_led_usb_status.c: 51: static uint16_t ledCount = 0;
  8091                           ;app_led_usb_status.c: 53: if(UCONbits.SUSPND == 1)
  8092                           
  8093                           ;incstack = 0
  8094                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8095  0C68  003D               	movlb	29	; select bank29
  8096  0C69  1C8E               	btfss	14,1	;volatile
  8097  0C6A  2CA0               	goto	i1l3193
  8098                           
  8099                           ;app_led_usb_status.c: 54: {
  8100                           ;app_led_usb_status.c: 55: LED_Off(LED_D1);
  8101  0C6B  3001               	movlw	1
  8102  0C6C  24AB               	fcall	i1_LED_Off
  8103  0C6D  0008               	return
  8104  0C6E                     i1l3167:	
  8105                           
  8106                           ;app_led_usb_status.c: 64: if(ledCount == 1)
  8107  0C6E  0021               	movlb	1	; select bank1
  8108  0C6F  0340               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  8109  0C70  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8110  0C71  1D03               	btfss	3,2
  8111  0C72  2C77               	goto	i1l3171
  8112                           
  8113                           ;app_led_usb_status.c: 65: {
  8114                           ;app_led_usb_status.c: 66: LED_On(LED_D1);
  8115  0C73  3001               	movlw	1
  8116  0C74  24BF  3188         	fcall	i1_LED_On
  8117                           
  8118                           ;app_led_usb_status.c: 67: }
  8119  0C76  2CA6               	goto	i1l3195
  8120  0C77                     i1l3171:	
  8121                           
  8122                           ;app_led_usb_status.c: 68: else if(ledCount == 75)
  8123  0C77  304B               	movlw	75
  8124  0C78  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  8125  0C79  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8126  0C7A  1D03               	btfss	3,2
  8127  0C7B  2C80               	goto	i1l3175
  8128                           
  8129                           ;app_led_usb_status.c: 69: {
  8130                           ;app_led_usb_status.c: 70: LED_Off(LED_D1);
  8131  0C7C  3001               	movlw	1
  8132  0C7D  24AB  3188         	fcall	i1_LED_Off
  8133                           
  8134                           ;app_led_usb_status.c: 71: }
  8135  0C7F  2CA6               	goto	i1l3195
  8136  0C80                     i1l3175:	
  8137                           
  8138                           ;app_led_usb_status.c: 72: else if(ledCount > 150)
  8139  0C80  3000               	movlw	0
  8140  0C81  0241               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8141  0C82  3097               	movlw	151
  8142  0C83                     L18:	
  8143  0C83  1903               	skipnz
  8144  0C84  0240               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  8145  0C85  1C03               	skipc
  8146  0C86  2CA6               	goto	i1l3195
  8147                           
  8148                           ;app_led_usb_status.c: 73: {
  8149                           ;app_led_usb_status.c: 74: ledCount = 0;
  8150  0C87  01C0               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+128)
  8151  0C88  01C1               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128)
  8152                           
  8153                           ;app_led_usb_status.c: 75: }
  8154                           ;app_led_usb_status.c: 76: break;
  8155  0C89  2CA6               	goto	i1l3195
  8156  0C8A                     i1l3179:	
  8157                           
  8158                           ;app_led_usb_status.c: 81: if(ledCount == 1)
  8159  0C8A  0021               	movlb	1	; select bank1
  8160  0C8B  0340               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  8161  0C8C  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8162  0C8D  1D03               	btfss	3,2
  8163  0C8E  2C93               	goto	i1l3183
  8164                           
  8165                           ;app_led_usb_status.c: 82: {
  8166                           ;app_led_usb_status.c: 83: LED_On(LED_D1);
  8167  0C8F  3001               	movlw	1
  8168  0C90  24BF  3188         	fcall	i1_LED_On
  8169                           
  8170                           ;app_led_usb_status.c: 84: }
  8171  0C92  2CA6               	goto	i1l3195
  8172  0C93                     i1l3183:	
  8173                           
  8174                           ;app_led_usb_status.c: 85: else if(ledCount == 50)
  8175  0C93  3032               	movlw	50
  8176  0C94  0640               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+128),w
  8177  0C95  0441               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8178  0C96  1D03               	btfss	3,2
  8179  0C97  2C9C               	goto	i1l3187
  8180                           
  8181                           ;app_led_usb_status.c: 86: {
  8182                           ;app_led_usb_status.c: 87: LED_Off(LED_D1);
  8183  0C98  3001               	movlw	1
  8184  0C99  24AB  3188         	fcall	i1_LED_Off
  8185                           
  8186                           ;app_led_usb_status.c: 88: }
  8187  0C9B  2CA6               	goto	i1l3195
  8188  0C9C                     i1l3187:	
  8189                           
  8190                           ;app_led_usb_status.c: 89: else if(ledCount > 950)
  8191  0C9C  3003               	movlw	3
  8192  0C9D  0241               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),w
  8193  0C9E  30B7               	movlw	183
  8194  0C9F  2C83               	goto	L18
  8195  0CA0                     i1l3193:	
  8196  0CA0  0020               	movlb	0	; select bank0
  8197  0CA1  085B               	movf	_USBDeviceState,w	;volatile
  8198                           
  8199                           ; Switch size 1, requested type "speed"
  8200                           ; Number of cases is 1, Range of values is 32 to 32
  8201                           ; switch strategies available:
  8202                           ; Name         Instructions Cycles
  8203                           ; simple_byte            4     3 (average)
  8204                           ; direct_byte           11     9 (fixed)
  8205                           ; jumptable            263     9 (fixed)
  8206                           ;	Chosen strategy is simple_byte
  8207  0CA2  3A20               	xorlw	32	; case 32
  8208  0CA3  1903               	skipnz
  8209  0CA4  2C6E               	goto	i1l3167
  8210  0CA5  2C8A               	goto	i1l3179
  8211  0CA6                     i1l3195:	
  8212                           
  8213                           ;app_led_usb_status.c: 97: ledCount++;
  8214  0CA6  0021               	movlb	1	; select bank1
  8215  0CA7  0AC0               	incf	APP_LEDUpdateUSBStatus@ledCount^(0+128),f
  8216  0CA8  1903               	skipnz
  8217  0CA9  0AC1               	incf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+128),f
  8218  0CAA  0008               	return
  8219  0CAB                     __end_of_APP_LEDUpdateUSBStatus:	
  8220  0CAB                     __ptext50:	
  8221 ;; *************** function i1_LED_Off *****************
  8222 ;; Defined at:
  8223 ;;		line 100 in file "bsp/leds.c"
  8224 ;; Parameters:    Size  Location     Type
  8225 ;;  led             1    wreg     enum E2
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;  led             1    0[COMMON] enum E2
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/1D
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;Total ram usage:        1 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_APP_LEDUpdateUSBStatus
  8247 ;;		i1_APP_KeyboardProcessOutputReport
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           
  8252                           ;psect for function i1_LED_Off
  8253  0CAB                     i1_LED_Off:	
  8254                           
  8255                           ;incstack = 0
  8256                           ; Regs used in i1_LED_Off: [wreg-fsr0h+status,2+status,0]
  8257                           ;i1LED_Off@led stored from wreg
  8258  0CAB  00F0               	movwf	i1LED_Off@led
  8259                           
  8260                           ;leds.c: 102: switch(led)
  8261  0CAC  2CB3               	goto	i1l3041
  8262  0CAD                     i1l111:	
  8263                           ;leds.c: 103: {
  8264                           ;leds.c: 104: case LED_D1:
  8265                           
  8266                           
  8267                           ;leds.c: 105: LATCbits.LATC6 = 0;
  8268  0CAD  0022               	movlb	2	; select bank2
  8269  0CAE  130E               	bcf	14,6	;volatile
  8270                           
  8271                           ;leds.c: 106: break;
  8272  0CAF  0008               	return
  8273  0CB0                     i1l113:	
  8274                           ;leds.c: 108: case LED_D2:
  8275                           
  8276                           
  8277                           ;leds.c: 109: LATCbits.LATC2 = 0;
  8278  0CB0  0022               	movlb	2	; select bank2
  8279  0CB1  110E               	bcf	14,2	;volatile
  8280                           
  8281                           ;leds.c: 110: break;
  8282  0CB2  0008               	return
  8283  0CB3                     i1l3041:	
  8284  0CB3  0870               	movf	i1LED_Off@led,w
  8285                           
  8286                           ; Switch size 1, requested type "speed"
  8287                           ; Number of cases is 3, Range of values is 0 to 2
  8288                           ; switch strategies available:
  8289                           ; Name         Instructions Cycles
  8290                           ; simple_byte           10     6 (average)
  8291                           ; direct_byte           12     6 (fixed)
  8292                           ; jumptable            260     6 (fixed)
  8293                           ;	Chosen strategy is simple_byte
  8294  0CB4  3A00               	xorlw	0	; case 0
  8295  0CB5  1903               	skipnz
  8296  0CB6  2CBE               	goto	i1l115
  8297  0CB7  3A01               	xorlw	1	; case 1
  8298  0CB8  1903               	skipnz
  8299  0CB9  2CAD               	goto	i1l111
  8300  0CBA  3A03               	xorlw	3	; case 2
  8301  0CBB  1903               	skipnz
  8302  0CBC  2CB0               	goto	i1l113
  8303  0CBD  2CBE               	goto	i1l115
  8304  0CBE                     i1l115:	
  8305  0CBE  0008               	return
  8306  0CBF                     __end_ofi1_LED_Off:	
  8307  0CBF                     __ptext49:	
  8308 ;; *************** function i1_LED_On *****************
  8309 ;; Defined at:
  8310 ;;		line 59 in file "bsp/leds.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  led             1    wreg     enum E2
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  led             1    0[COMMON] enum E2
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8319 ;; Tracked objects:
  8320 ;;		On entry : 1C/1
  8321 ;;		On exit  : 1C/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;Total ram usage:        1 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; This function calls:
  8331 ;;		Nothing
  8332 ;; This function is called by:
  8333 ;;		_APP_LEDUpdateUSBStatus
  8334 ;;		i1_APP_KeyboardProcessOutputReport
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           
  8339                           ;psect for function i1_LED_On
  8340  0CBF                     i1_LED_On:	
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in i1_LED_On: [wreg-fsr0h+status,2+status,0]
  8344                           ;i1LED_On@led stored from wreg
  8345  0CBF  00F0               	movwf	i1LED_On@led
  8346                           
  8347                           ;leds.c: 61: switch(led)
  8348  0CC0  2CC7               	goto	i1l3035
  8349  0CC1                     i1l103:	
  8350                           ;leds.c: 62: {
  8351                           ;leds.c: 63: case LED_D1:
  8352                           
  8353                           
  8354                           ;leds.c: 64: LATCbits.LATC6 = 1;
  8355  0CC1  0022               	movlb	2	; select bank2
  8356  0CC2  170E               	bsf	14,6	;volatile
  8357                           
  8358                           ;leds.c: 65: break;
  8359  0CC3  0008               	return
  8360  0CC4                     i1l105:	
  8361                           ;leds.c: 67: case LED_D2:
  8362                           
  8363                           
  8364                           ;leds.c: 68: LATCbits.LATC2 = 1;
  8365  0CC4  0022               	movlb	2	; select bank2
  8366  0CC5  150E               	bsf	14,2	;volatile
  8367                           
  8368                           ;leds.c: 69: break;
  8369  0CC6  0008               	return
  8370  0CC7                     i1l3035:	
  8371  0CC7  0870               	movf	i1LED_On@led,w
  8372                           
  8373                           ; Switch size 1, requested type "speed"
  8374                           ; Number of cases is 3, Range of values is 0 to 2
  8375                           ; switch strategies available:
  8376                           ; Name         Instructions Cycles
  8377                           ; simple_byte           10     6 (average)
  8378                           ; direct_byte           12     6 (fixed)
  8379                           ; jumptable            260     6 (fixed)
  8380                           ;	Chosen strategy is simple_byte
  8381  0CC8  3A00               	xorlw	0	; case 0
  8382  0CC9  1903               	skipnz
  8383  0CCA  2CD2               	goto	i1l107
  8384  0CCB  3A01               	xorlw	1	; case 1
  8385  0CCC  1903               	skipnz
  8386  0CCD  2CC1               	goto	i1l103
  8387  0CCE  3A03               	xorlw	3	; case 2
  8388  0CCF  1903               	skipnz
  8389  0CD0  2CC4               	goto	i1l105
  8390  0CD1  2CD2               	goto	i1l107
  8391  0CD2                     i1l107:	
  8392  0CD2  0008               	return
  8393  0CD3                     __end_ofi1_LED_On:	
  8394  0CD3                     __ptext45:	
  8395 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8396 ;; Defined at:
  8397 ;;		line 1416 in file "usb/usb_device.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;		None
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 1E/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;Total ram usage:        2 bytes
  8416 ;; Hardware stack levels used:    1
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_USBDeviceTasks
  8421 ;;		_USBCtrlEPServiceComplete
  8422 ;;		_USBCtrlTrfRxService
  8423 ;; This function uses a non-reentrant model
  8424 ;;
  8425                           
  8426                           
  8427                           ;psect for function _USBCtrlEPAllowStatusStage
  8428  0CD3                     _USBCtrlEPAllowStatusStage:	
  8429  0CD3                     i1l3371:	
  8430                           ;incstack = 0
  8431                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  8432                           
  8433                           
  8434                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8435  0CD3  0021               	movlb	1	; select bank1
  8436  0CD4  0858               	movf	_USBStatusStageEnabledFlag1^(0+128),w	;volatile
  8437  0CD5  1D03               	btfss	3,2
  8438  0CD6  0008               	return
  8439                           
  8440                           ;usb_device.c: 1424: {
  8441                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8442  0CD7  3001               	movlw	1
  8443  0CD8  00D8               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
  8444                           
  8445                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8446  0CD9  0857               	movf	_USBStatusStageEnabledFlag2^(0+128),w	;volatile
  8447  0CDA  1D03               	btfss	3,2
  8448  0CDB  0008               	return
  8449                           
  8450                           ;usb_device.c: 1427: {
  8451                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8452  0CDC  3001               	movlw	1
  8453  0CDD  00D7               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
  8454                           
  8455                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8456  0CDE  3002               	movlw	2
  8457  0CDF  0020               	movlb	0	; select bank0
  8458  0CE0  0658               	xorwf	_controlTransferState,w	;volatile
  8459  0CE1  1D03               	btfss	3,2
  8460  0CE2  2CF6               	goto	i1l3387
  8461                           
  8462                           ;usb_device.c: 1433: {
  8463                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8464  0CE3  0021               	movlb	1	; select bank1
  8465  0CE4  0838               	movf	_pBDTEntryIn^(0+128),w
  8466  0CE5  0086               	movwf	6
  8467  0CE6  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  8468  0CE7  0087               	movwf	7
  8469  0CE8  3141               	addfsr 1,1
  8470  0CE9  0181               	clrf	1
  8471                           
  8472                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8473  0CEA  0838               	movf	_pBDTEntryIn^(0+128),w
  8474  0CEB  0086               	movwf	6
  8475  0CEC  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  8476  0CED  0087               	movwf	7
  8477  0CEE  3048               	movlw	72
  8478  0CEF  0081               	movwf	1
  8479                           
  8480                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8481  0CF0  0838               	movf	_pBDTEntryIn^(0+128),w
  8482  0CF1  0086               	movwf	6
  8483  0CF2  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  8484  0CF3  0087               	movwf	7
  8485  0CF4  1781               	bsf	1,7
  8486                           
  8487                           ;usb_device.c: 1437: }
  8488  0CF5  0008               	return
  8489  0CF6                     i1l3387:	
  8490                           
  8491                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8492  0CF6  0B58               	decfsz	_controlTransferState,w	;volatile
  8493  0CF7  0008               	return
  8494                           
  8495                           ;usb_device.c: 1439: {
  8496                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8497  0CF8  0021               	movlb	1	; select bank1
  8498  0CF9  01D9               	clrf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8499                           
  8500                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8501  0CFA  0020               	movlb	0	; select bank0
  8502  0CFB  0A5A               	incf	_pBDTEntryEP0OutCurrent,w
  8503  0CFC  0086               	movwf	6
  8504  0CFD  3008               	movlw	8
  8505  0CFE  0187               	clrf	7
  8506  0CFF  0081               	movwf	1
  8507                           
  8508                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8509  0D00  3040               	movlw	64
  8510  0D01  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8511  0D02  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8512  0D03  085A               	movf	_pBDTEntryEP0OutCurrent,w
  8513  0D04  3E02               	addlw	2
  8514  0D05  0086               	movwf	6
  8515  0D06  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8516  0D07  3FC0               	movwi [0]fsr1
  8517  0D08  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8518  0D09  3FC1               	movwi [1]fsr1
  8519                           
  8520                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8521  0D0A  085A               	movf	_pBDTEntryEP0OutCurrent,w
  8522  0D0B  0086               	movwf	6
  8523  0D0C  3004               	movlw	4
  8524  0D0D  0081               	movwf	1
  8525                           
  8526                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8527  0D0E  085A               	movf	_pBDTEntryEP0OutCurrent,w
  8528  0D0F  0086               	movwf	6
  8529  0D10  3001               	movlw	1
  8530  0D11  1781               	bsf	1,7
  8531                           
  8532                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8533  0D12  0021               	movlb	1	; select bank1
  8534  0D13  00D9               	movwf	_BothEP0OutUOWNsSet^(0+128)	;volatile
  8535                           
  8536                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8537  0D14  0020               	movlb	0	; select bank0
  8538  0D15  0850               	movf	_pBDTEntryEP0OutNext,w
  8539  0D16  3E01               	addlw	1
  8540  0D17  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8541  0D18  3000               	movlw	0
  8542  0D19  3D51               	addwfc	_pBDTEntryEP0OutNext+1,w
  8543  0D1A  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  8544  0D1B  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8545  0D1C  0086               	movwf	6
  8546  0D1D  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8547  0D1E  0087               	movwf	7
  8548  0D1F  3008               	movlw	8
  8549  0D20  0081               	movwf	1
  8550                           
  8551                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  8552  0D21  3040               	movlw	64
  8553  0D22  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  8554  0D23  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  8555  0D24  0850               	movf	_pBDTEntryEP0OutNext,w
  8556  0D25  0086               	movwf	6
  8557  0D26  0851               	movf	_pBDTEntryEP0OutNext+1,w
  8558  0D27  0087               	movwf	7
  8559  0D28  3142               	addfsr 1,2
  8560  0D29  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  8561  0D2A  3FC0               	movwi [0]fsr1
  8562  0D2B  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  8563  0D2C  3FC1               	movwi [1]fsr1
  8564                           
  8565                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8566  0D2D  0850               	movf	_pBDTEntryEP0OutNext,w
  8567  0D2E  0086               	movwf	6
  8568  0D2F  0851               	movf	_pBDTEntryEP0OutNext+1,w
  8569  0D30  0087               	movwf	7
  8570  0D31  3080               	movlw	128
  8571  0D32  0081               	movwf	1
  8572  0D33  0008               	return
  8573  0D34                     __end_of_USBCtrlEPAllowStatusStage:	
  8574  0D34                     __ptext37:	
  8575 ;; *************** function _BUTTON_UpdateStates *****************
  8576 ;; Defined at:
  8577 ;;		line 60 in file "bsp/buttons.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 1F/1
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;Total ram usage:        1 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _BUTTON_UpdateStates
  8606  0D34                     _BUTTON_UpdateStates:	
  8607                           
  8608                           ;buttons.c: 63: if (timer < 9) {
  8609                           
  8610                           ;incstack = 0
  8611                           ; Regs used in _BUTTON_UpdateStates: [wreg-fsr0h+status,2+status,0]
  8612  0D34  0021               	movlb	1	; select bank1
  8613  0D35  084D               	movf	(_timer+1)^(0+128),w
  8614  0D36  3A80               	xorlw	128
  8615  0D37  00F0               	movwf	??_BUTTON_UpdateStates
  8616  0D38  3080               	movlw	128
  8617  0D39  0270               	subwf	??_BUTTON_UpdateStates,w
  8618  0D3A  1D03               	skipz
  8619  0D3B  2D3E               	goto	u174_25
  8620  0D3C  3009               	movlw	9
  8621  0D3D  024C               	subwf	_timer^(0+128),w
  8622  0D3E                     u174_25:	
  8623  0D3E  1803               	skipnc
  8624  0D3F  2D45               	goto	i1l3081
  8625                           
  8626                           ;buttons.c: 64: timer++;
  8627  0D40  0021               	movlb	1	; select bank1
  8628  0D41  0ACC               	incf	_timer^(0+128),f
  8629  0D42  1903               	skipnz
  8630  0D43  0ACD               	incf	(_timer+1)^(0+128),f
  8631                           
  8632                           ;buttons.c: 65: } else {
  8633  0D44  0008               	return
  8634  0D45                     i1l3081:	
  8635                           
  8636                           ;buttons.c: 66: timer = 0;
  8637  0D45  0021               	movlb	1	; select bank1
  8638  0D46  01CC               	clrf	_timer^(0+128)
  8639  0D47  01CD               	clrf	(_timer+1)^(0+128)
  8640                           
  8641                           ;buttons.c: 69: switch (state1) {
  8642  0D48  2D61               	goto	i1l3099
  8643  0D49                     i1l3083:	
  8644                           
  8645                           ;buttons.c: 71: state1 = (PORTBbits.RB6 == 0) ? 1 : 0;
  8646  0D49  1003               	clrc
  8647  0D4A  0020               	movlb	0	; select bank0
  8648  0D4B  1F0D               	btfss	13,6	;volatile
  8649  0D4C  1403               	setc
  8650  0D4D  3000               	movlw	0
  8651  0D4E  3D09               	addwfc	9,w
  8652  0D4F  2D5C               	goto	L16
  8653  0D50                     i1l26:	
  8654                           ;buttons.c: 73: case 1:
  8655                           
  8656                           ;buttons.c: 72: break;
  8657                           
  8658                           
  8659                           ;buttons.c: 74: state1 = (PORTBbits.RB6 == 0) ? 2 : 0;
  8660  0D50  0020               	movlb	0	; select bank0
  8661  0D51  1F0D               	btfss	13,6	;volatile
  8662  0D52  2D56               	goto	i1l3087
  8663  0D53  0021               	movlb	1	; select bank1
  8664  0D54  01D2               	clrf	_state1^(0+128)
  8665  0D55  2D5E               	goto	L12
  8666  0D56                     i1l3087:	
  8667  0D56  3002               	movlw	2
  8668  0D57  2D5C               	goto	L16
  8669  0D58                     i1l31:	
  8670                           ;buttons.c: 76: case 2:
  8671                           
  8672                           
  8673                           ;buttons.c: 77: state1 = (PORTBbits.RB6 == 0) ? 2 : 3;
  8674  0D58  0020               	movlb	0	; select bank0
  8675  0D59  1F0D               	btfss	13,6	;volatile
  8676  0D5A  2D56               	goto	i1l3087
  8677  0D5B  3003               	movlw	3
  8678  0D5C                     L16:	
  8679  0D5C  0021               	movlb	1	; select bank1
  8680  0D5D  00D2               	movwf	_state1^(0+128)
  8681  0D5E                     L12:	
  8682  0D5E  01D3               	clrf	(_state1+1)^(0+128)
  8683  0D5F  2D88               	goto	i1l3117
  8684  0D60                     i1l36:	
  8685                           ;buttons.c: 79: case 3:
  8686                           
  8687  0D60  2D50               	goto	i1l26
  8688  0D61                     i1l3099:	
  8689                           ;buttons.c: 80: state1 = (PORTBbits.RB6 == 0) ? 2 : 0;
  8690                           
  8691                           
  8692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8693                           ; Switch size 1, requested type "speed"
  8694                           ; Number of cases is 1, Range of values is 0 to 0
  8695                           ; switch strategies available:
  8696                           ; Name         Instructions Cycles
  8697                           ; simple_byte            4     3 (average)
  8698                           ; direct_byte            8     6 (fixed)
  8699                           ; jumptable            260     6 (fixed)
  8700                           ;	Chosen strategy is simple_byte
  8701  0D61  0853               	movf	(_state1+1)^(0+128),w
  8702  0D62  3A00               	xorlw	0	; case 0
  8703  0D63  1903               	skipnz
  8704  0D64  2D66               	goto	i1l5283
  8705  0D65  2D88               	goto	i1l3117
  8706  0D66                     i1l5283:	
  8707                           
  8708                           ; Switch size 1, requested type "speed"
  8709                           ; Number of cases is 4, Range of values is 0 to 3
  8710                           ; switch strategies available:
  8711                           ; Name         Instructions Cycles
  8712                           ; direct_byte           14     6 (fixed)
  8713                           ; simple_byte           13     7 (average)
  8714                           ; jumptable            260     6 (fixed)
  8715                           ;	Chosen strategy is direct_byte
  8716  0D66  0852               	movf	_state1^(0+128),w
  8717  0D67  0084               	movwf	4
  8718  0D68  3004               	movlw	4
  8719  0D69  0204               	subwf	4,w
  8720  0D6A  1803               	skipnc
  8721  0D6B  2D88               	goto	i1l3117
  8722  0D6C  3186               	movlp	high i1S5285
  8723  0D6D  3504               	lslf	4,w
  8724  0D6E  3E36               	addlw	low i1S5285
  8725  0D6F  0082               	movwf	2
  8726  0D70                     i1l3101:	
  8727                           
  8728                           ;buttons.c: 87: state2 = (PORTBbits.RB5 == 0) ? 1 : 0;
  8729  0D70  1003               	clrc
  8730  0D71  0020               	movlb	0	; select bank0
  8731  0D72  1E8D               	btfss	13,5	;volatile
  8732  0D73  1403               	setc
  8733  0D74  3000               	movlw	0
  8734  0D75  3D09               	addwfc	9,w
  8735  0D76  2D83               	goto	L17
  8736  0D77                     i1l44:	
  8737                           ;buttons.c: 89: case 1:
  8738                           
  8739                           ;buttons.c: 88: break;
  8740                           
  8741                           
  8742                           ;buttons.c: 90: state2 = (PORTBbits.RB5 == 0) ? 2 : 0;
  8743  0D77  0020               	movlb	0	; select bank0
  8744  0D78  1E8D               	btfss	13,5	;volatile
  8745  0D79  2D7D               	goto	i1l3105
  8746  0D7A  0021               	movlb	1	; select bank1
  8747  0D7B  01D0               	clrf	_state2^(0+128)
  8748  0D7C  2D85               	goto	L15
  8749  0D7D                     i1l3105:	
  8750  0D7D  3002               	movlw	2
  8751  0D7E  2D83               	goto	L17
  8752  0D7F                     i1l49:	
  8753                           ;buttons.c: 92: case 2:
  8754                           
  8755                           
  8756                           ;buttons.c: 93: state2 = (PORTBbits.RB5 == 0) ? 2 : 3;
  8757  0D7F  0020               	movlb	0	; select bank0
  8758  0D80  1E8D               	btfss	13,5	;volatile
  8759  0D81  2D7D               	goto	i1l3105
  8760  0D82  3003               	movlw	3
  8761  0D83                     L17:	
  8762  0D83  0021               	movlb	1	; select bank1
  8763  0D84  00D0               	movwf	_state2^(0+128)
  8764  0D85                     L15:	
  8765  0D85  01D1               	clrf	(_state2+1)^(0+128)
  8766  0D86  2DB6               	goto	i1l3135
  8767  0D87                     i1l54:	
  8768                           ;buttons.c: 95: case 3:
  8769                           
  8770  0D87  2D77               	goto	i1l44
  8771  0D88                     i1l3117:	
  8772                           ;buttons.c: 96: state2 = (PORTBbits.RB5 == 0) ? 2 : 0;
  8773                           
  8774                           
  8775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8776                           ; Switch size 1, requested type "speed"
  8777                           ; Number of cases is 1, Range of values is 0 to 0
  8778                           ; switch strategies available:
  8779                           ; Name         Instructions Cycles
  8780                           ; simple_byte            4     3 (average)
  8781                           ; direct_byte            8     6 (fixed)
  8782                           ; jumptable            260     6 (fixed)
  8783                           ;	Chosen strategy is simple_byte
  8784  0D88  0851               	movf	(_state2+1)^(0+128),w
  8785  0D89  3A00               	xorlw	0	; case 0
  8786  0D8A  1903               	skipnz
  8787  0D8B  2D8D               	goto	i1l5287
  8788  0D8C  2DB6               	goto	i1l3135
  8789  0D8D                     i1l5287:	
  8790                           
  8791                           ; Switch size 1, requested type "speed"
  8792                           ; Number of cases is 4, Range of values is 0 to 3
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; direct_byte           14     6 (fixed)
  8796                           ; simple_byte           13     7 (average)
  8797                           ; jumptable            260     6 (fixed)
  8798                           ;	Chosen strategy is direct_byte
  8799  0D8D  0850               	movf	_state2^(0+128),w
  8800  0D8E  0084               	movwf	4
  8801  0D8F  3004               	movlw	4
  8802  0D90  0204               	subwf	4,w
  8803  0D91  1803               	skipnc
  8804  0D92  2DB6               	goto	i1l3135
  8805  0D93  3186               	movlp	high i1S5289
  8806  0D94  3504               	lslf	4,w
  8807  0D95  3E3E               	addlw	low i1S5289
  8808  0D96  0082               	movwf	2
  8809  0D97                     i1l3119:	
  8810                           
  8811                           ;buttons.c: 103: state3 = (PORTBbits.RB4 == 0) ? 1 : 0;
  8812  0D97  1003               	clrc
  8813  0D98  0020               	movlb	0	; select bank0
  8814  0D99  1E0D               	btfss	13,4	;volatile
  8815  0D9A  1403               	setc
  8816  0D9B  3000               	movlw	0
  8817  0D9C  3D09               	addwfc	9,w
  8818  0D9D  0021               	movlb	1	; select bank1
  8819  0D9E  00CE               	movwf	_state3^(0+128)
  8820  0D9F  01CF               	clrf	(_state3+1)^(0+128)
  8821                           
  8822                           ;buttons.c: 104: break;
  8823  0DA0  0008               	return
  8824  0DA1                     i1l62:	
  8825                           ;buttons.c: 105: case 1:
  8826                           
  8827                           
  8828                           ;buttons.c: 106: state3 = (PORTBbits.RB4 == 0) ? 2 : 0;
  8829  0DA1  0020               	movlb	0	; select bank0
  8830  0DA2  1E0D               	btfss	13,4	;volatile
  8831  0DA3  2DA8               	goto	i1l3123
  8832  0DA4  0021               	movlb	1	; select bank1
  8833  0DA5  01CE               	clrf	_state3^(0+128)
  8834  0DA6  01CF               	clrf	(_state3+1)^(0+128)
  8835  0DA7  0008               	return
  8836  0DA8                     i1l3123:	
  8837  0DA8  3002               	movlw	2
  8838  0DA9  0021               	movlb	1	; select bank1
  8839  0DAA  00CE               	movwf	_state3^(0+128)
  8840  0DAB  01CF               	clrf	(_state3+1)^(0+128)
  8841  0DAC  0008               	return
  8842  0DAD                     i1l67:	
  8843                           ;buttons.c: 108: case 2:
  8844                           
  8845                           
  8846                           ;buttons.c: 109: state3 = (PORTBbits.RB4 == 0) ? 2 : 3;
  8847  0DAD  0020               	movlb	0	; select bank0
  8848  0DAE  1E0D               	btfss	13,4	;volatile
  8849  0DAF  2DA8               	goto	i1l3123
  8850  0DB0  3003               	movlw	3
  8851  0DB1  0021               	movlb	1	; select bank1
  8852  0DB2  00CE               	movwf	_state3^(0+128)
  8853  0DB3  01CF               	clrf	(_state3+1)^(0+128)
  8854  0DB4  0008               	return
  8855  0DB5                     i1l72:	
  8856                           ;buttons.c: 111: case 3:
  8857                           
  8858  0DB5  2DA1               	goto	i1l62
  8859  0DB6                     i1l3135:	
  8860                           ;buttons.c: 112: state3 = (PORTBbits.RB4 == 0) ? 2 : 0;
  8861                           
  8862                           
  8863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8864                           ; Switch size 1, requested type "speed"
  8865                           ; Number of cases is 1, Range of values is 0 to 0
  8866                           ; switch strategies available:
  8867                           ; Name         Instructions Cycles
  8868                           ; simple_byte            4     3 (average)
  8869                           ; direct_byte            8     6 (fixed)
  8870                           ; jumptable            260     6 (fixed)
  8871                           ;	Chosen strategy is simple_byte
  8872  0DB6  084F               	movf	(_state3+1)^(0+128),w
  8873  0DB7  3A00               	xorlw	0	; case 0
  8874  0DB8  1903               	skipnz
  8875  0DB9  2DBB               	goto	i1l5291
  8876  0DBA  2DC5               	goto	i1l77
  8877  0DBB                     i1l5291:	
  8878                           
  8879                           ; Switch size 1, requested type "speed"
  8880                           ; Number of cases is 4, Range of values is 0 to 3
  8881                           ; switch strategies available:
  8882                           ; Name         Instructions Cycles
  8883                           ; direct_byte           14     6 (fixed)
  8884                           ; simple_byte           13     7 (average)
  8885                           ; jumptable            260     6 (fixed)
  8886                           ;	Chosen strategy is direct_byte
  8887  0DBB  084E               	movf	_state3^(0+128),w
  8888  0DBC  0084               	movwf	4
  8889  0DBD  3004               	movlw	4
  8890  0DBE  0204               	subwf	4,w
  8891  0DBF  1803               	skipnc
  8892  0DC0  0008               	return
  8893  0DC1  3186               	movlp	high i1S5293
  8894  0DC2  3504               	lslf	4,w
  8895  0DC3  3E46               	addlw	low i1S5293
  8896  0DC4  0082               	movwf	2
  8897  0DC5                     i1l77:	
  8898  0DC5  0008               	return
  8899  0DC6                     __end_of_BUTTON_UpdateStates:	
  8900  0DC6                     __ptext31:	
  8901 ;; *************** function i1_SYSTEM_Initialize *****************
  8902 ;; Defined at:
  8903 ;;		line 84 in file "system.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  state           1    wreg     enum E2866
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  state           1    1[COMMON] enum E2866
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;Total ram usage:        1 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:    1
  8924 ;; This function calls:
  8925 ;;		i1_BUTTON_Enable
  8926 ;;		i1_LED_Enable
  8927 ;; This function is called by:
  8928 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           
  8933                           ;psect for function i1_SYSTEM_Initialize
  8934  0DC6                     i1_SYSTEM_Initialize:	
  8935                           
  8936                           ;incstack = 0
  8937                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8938                           ;i1SYSTEM_Initialize@state stored from wreg
  8939  0DC6  00F1               	movwf	i1SYSTEM_Initialize@state
  8940                           
  8941                           ;system.c: 86: switch(state)
  8942  0DC7  2DDD               	goto	i1l3275
  8943  0DC8                     i1l3261:	
  8944                           
  8945                           ;system.c: 92: OSCCON = 0xFC;
  8946  0DC8  30FC               	movlw	252
  8947  0DC9  0021               	movlb	1	; select bank1
  8948  0DCA  0099               	movwf	25	;volatile
  8949                           
  8950                           ;system.c: 93: ACTCON = 0x90;
  8951  0DCB  3090               	movlw	144
  8952  0DCC  0027               	movlb	7	; select bank7
  8953  0DCD  009B               	movwf	27	;volatile
  8954                           
  8955                           ;system.c: 95: LED_Enable(LED_D1);
  8956  0DCE  3001               	movlw	1
  8957  0DCF  2613  3188         	fcall	i1_LED_Enable
  8958                           
  8959                           ;system.c: 96: LED_Enable(LED_D2);
  8960  0DD1  3002               	movlw	2
  8961  0DD2  2613  3188         	fcall	i1_LED_Enable
  8962                           
  8963                           ;system.c: 97: BUTTON_Enable(BUTTON_S1);
  8964  0DD4  3001               	movlw	1
  8965  0DD5  25E9  3188         	fcall	i1_BUTTON_Enable
  8966                           
  8967                           ;system.c: 98: BUTTON_Enable(BUTTON_S2);
  8968  0DD7  3002               	movlw	2
  8969  0DD8  25E9  3188         	fcall	i1_BUTTON_Enable
  8970                           
  8971                           ;system.c: 99: BUTTON_Enable(BUTTON_S3);
  8972  0DDA  3003               	movlw	3
  8973  0DDB  25E9               	fcall	i1_BUTTON_Enable
  8974                           
  8975                           ;system.c: 100: break;
  8976  0DDC  0008               	return
  8977  0DDD                     i1l3275:	
  8978  0DDD  0871               	movf	i1SYSTEM_Initialize@state,w
  8979                           
  8980                           ; Switch size 1, requested type "speed"
  8981                           ; Number of cases is 3, Range of values is 0 to 2
  8982                           ; switch strategies available:
  8983                           ; Name         Instructions Cycles
  8984                           ; simple_byte           10     6 (average)
  8985                           ; direct_byte           12     6 (fixed)
  8986                           ; jumptable            260     6 (fixed)
  8987                           ;	Chosen strategy is simple_byte
  8988  0DDE  3A00               	xorlw	0	; case 0
  8989  0DDF  1903               	skipnz
  8990  0DE0  2DC8               	goto	i1l3261
  8991  0DE1  3A01               	xorlw	1	; case 1
  8992  0DE2  1903               	skipnz
  8993  0DE3  2DE8               	goto	i1l765
  8994  0DE4  3A03               	xorlw	3	; case 2
  8995  0DE5  1903               	skipnz
  8996  0DE6  2DE8               	goto	i1l765
  8997  0DE7  2DE8               	goto	i1l765
  8998  0DE8                     i1l765:	
  8999  0DE8  0008               	return
  9000  0DE9                     __end_ofi1_SYSTEM_Initialize:	
  9001  0DE9                     __ptext33:	
  9002 ;; *************** function i1_BUTTON_Enable *****************
  9003 ;; Defined at:
  9004 ;;		line 155 in file "bsp/buttons.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;  button          1    wreg     enum E2617
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  button          1    0[COMMON] enum E2617
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/7
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;Total ram usage:        1 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; This function calls:
  9025 ;;		Nothing
  9026 ;; This function is called by:
  9027 ;;		i1_SYSTEM_Initialize
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           
  9032                           ;psect for function i1_BUTTON_Enable
  9033  0DE9                     i1_BUTTON_Enable:	
  9034                           
  9035                           ;incstack = 0
  9036                           ; Regs used in i1_BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  9037                           ;i1BUTTON_Enable@button stored from wreg
  9038  0DE9  00F0               	movwf	i1BUTTON_Enable@button
  9039                           
  9040                           ;buttons.c: 157: switch(button)
  9041  0DEA  2E08               	goto	i1l3025
  9042  0DEB                     i1l90:	
  9043                           ;buttons.c: 158: {
  9044                           ;buttons.c: 159: case BUTTON_S1:
  9045                           
  9046                           
  9047                           ;buttons.c: 160: OPTION_REGbits.nWPUEN = 0;
  9048  0DEB  0021               	movlb	1	; select bank1
  9049  0DEC  1395               	bcf	21,7	;volatile
  9050                           
  9051                           ;buttons.c: 161: TRISBbits.TRISB6 = 1;
  9052  0DED  170D               	bsf	13,6	;volatile
  9053                           
  9054                           ;buttons.c: 162: WPUBbits.WPUB6 = 1;
  9055  0DEE  0024               	movlb	4	; select bank4
  9056  0DEF  170D               	bsf	13,6	;volatile
  9057                           
  9058                           ;buttons.c: 163: state1 = 0;
  9059  0DF0  0021               	movlb	1	; select bank1
  9060  0DF1  01D2               	clrf	_state1^(0+128)
  9061  0DF2  01D3               	clrf	(_state1+1)^(0+128)
  9062                           
  9063                           ;buttons.c: 164: break;
  9064  0DF3  0008               	return
  9065  0DF4                     i1l92:	
  9066                           ;buttons.c: 166: case BUTTON_S2:
  9067                           
  9068                           
  9069                           ;buttons.c: 167: TRISBbits.TRISB5 = 1;
  9070  0DF4  0021               	movlb	1	; select bank1
  9071  0DF5  168D               	bsf	13,5	;volatile
  9072                           
  9073                           ;buttons.c: 168: ANSELBbits.ANSB5 = 0;
  9074  0DF6  0023               	movlb	3	; select bank3
  9075  0DF7  128D               	bcf	13,5	;volatile
  9076                           
  9077                           ;buttons.c: 169: WPUBbits.WPUB5 = 1;
  9078  0DF8  0024               	movlb	4	; select bank4
  9079  0DF9  168D               	bsf	13,5	;volatile
  9080                           
  9081                           ;buttons.c: 170: state2 = 0;
  9082  0DFA  0021               	movlb	1	; select bank1
  9083  0DFB  01D0               	clrf	_state2^(0+128)
  9084  0DFC  01D1               	clrf	(_state2+1)^(0+128)
  9085                           
  9086                           ;buttons.c: 171: break;
  9087  0DFD  0008               	return
  9088  0DFE                     i1l93:	
  9089                           ;buttons.c: 173: case BUTTON_S3:
  9090                           
  9091                           
  9092                           ;buttons.c: 174: TRISBbits.TRISB4 = 1;
  9093  0DFE  0021               	movlb	1	; select bank1
  9094  0DFF  160D               	bsf	13,4	;volatile
  9095                           
  9096                           ;buttons.c: 175: ANSELBbits.ANSB4 = 0;
  9097  0E00  0023               	movlb	3	; select bank3
  9098  0E01  120D               	bcf	13,4	;volatile
  9099                           
  9100                           ;buttons.c: 176: WPUBbits.WPUB4 = 1;
  9101  0E02  0024               	movlb	4	; select bank4
  9102  0E03  160D               	bsf	13,4	;volatile
  9103                           
  9104                           ;buttons.c: 177: state3 = 0;
  9105  0E04  0021               	movlb	1	; select bank1
  9106  0E05  01CE               	clrf	_state3^(0+128)
  9107  0E06  01CF               	clrf	(_state3+1)^(0+128)
  9108                           
  9109                           ;buttons.c: 178: break;
  9110  0E07  0008               	return
  9111  0E08                     i1l3025:	
  9112  0E08  0870               	movf	i1BUTTON_Enable@button,w
  9113                           
  9114                           ; Switch size 1, requested type "speed"
  9115                           ; Number of cases is 4, Range of values is 0 to 3
  9116                           ; switch strategies available:
  9117                           ; Name         Instructions Cycles
  9118                           ; direct_byte           14     6 (fixed)
  9119                           ; simple_byte           13     7 (average)
  9120                           ; jumptable            260     6 (fixed)
  9121                           ;	Chosen strategy is direct_byte
  9122  0E09  0084               	movwf	4
  9123  0E0A  3004               	movlw	4
  9124  0E0B  0204               	subwf	4,w
  9125  0E0C  1803               	skipnc
  9126  0E0D  0008               	return
  9127  0E0E  3183               	movlp	high i1S5279
  9128  0E0F  3504               	lslf	4,w
  9129  0E10  3EF5               	addlw	low i1S5279
  9130  0E11  0082               	movwf	2
  9131  0E12                     i1l95:	
  9132  0E12  0008               	return
  9133  0E13                     __end_ofi1_BUTTON_Enable:	
  9134  0E13                     __ptext32:	
  9135 ;; *************** function i1_LED_Enable *****************
  9136 ;; Defined at:
  9137 ;;		line 220 in file "bsp/leds.c"
  9138 ;; Parameters:    Size  Location     Type
  9139 ;;  led             1    wreg     enum E2
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  led             1    0[COMMON] enum E2
  9142 ;; Return value:  Size  Location     Type
  9143 ;;                  1    wreg      void 
  9144 ;; Registers used:
  9145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9146 ;; Tracked objects:
  9147 ;;		On entry : 0/7
  9148 ;;		On exit  : 0/0
  9149 ;;		Unchanged: 0/0
  9150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;Total ram usage:        1 bytes
  9156 ;; Hardware stack levels used:    1
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		i1_SYSTEM_Initialize
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           
  9165                           ;psect for function i1_LED_Enable
  9166  0E13                     i1_LED_Enable:	
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in i1_LED_Enable: [wreg-fsr0h+status,2+status,0]
  9170                           ;i1LED_Enable@led stored from wreg
  9171  0E13  00F0               	movwf	i1LED_Enable@led
  9172                           
  9173                           ;leds.c: 222: switch(led)
  9174  0E14  2E1B               	goto	i1l3047
  9175  0E15                     i1l135:	
  9176                           ;leds.c: 223: {
  9177                           ;leds.c: 224: case LED_D1:
  9178                           
  9179                           
  9180                           ;leds.c: 225: TRISCbits.TRISC6 = 0;
  9181  0E15  0021               	movlb	1	; select bank1
  9182  0E16  130E               	bcf	14,6	;volatile
  9183                           
  9184                           ;leds.c: 226: break;
  9185  0E17  0008               	return
  9186  0E18                     i1l137:	
  9187                           ;leds.c: 228: case LED_D2:
  9188                           
  9189                           
  9190                           ;leds.c: 229: TRISCbits.TRISC2 = 0;
  9191  0E18  0021               	movlb	1	; select bank1
  9192  0E19  110E               	bcf	14,2	;volatile
  9193                           
  9194                           ;leds.c: 230: break;
  9195  0E1A  0008               	return
  9196  0E1B                     i1l3047:	
  9197  0E1B  0870               	movf	i1LED_Enable@led,w
  9198                           
  9199                           ; Switch size 1, requested type "speed"
  9200                           ; Number of cases is 3, Range of values is 0 to 2
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte           10     6 (average)
  9204                           ; direct_byte           12     6 (fixed)
  9205                           ; jumptable            260     6 (fixed)
  9206                           ;	Chosen strategy is simple_byte
  9207  0E1C  3A00               	xorlw	0	; case 0
  9208  0E1D  1903               	skipnz
  9209  0E1E  2E26               	goto	i1l139
  9210  0E1F  3A01               	xorlw	1	; case 1
  9211  0E20  1903               	skipnz
  9212  0E21  2E15               	goto	i1l135
  9213  0E22  3A03               	xorlw	3	; case 2
  9214  0E23  1903               	skipnz
  9215  0E24  2E18               	goto	i1l137
  9216  0E25  2E26               	goto	i1l139
  9217  0E26                     i1l139:	
  9218  0E26  0008               	return
  9219  0E27                     __end_ofi1_LED_Enable:	
  9220  0E27                     __ptext20:	
  9221 ;; *************** function _USBCtrlEPService *****************
  9222 ;; Defined at:
  9223 ;;		line 2372 in file "usb/usb_device.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;		None
  9228 ;; Return value:  Size  Location     Type
  9229 ;;                  1    wreg      void 
  9230 ;; Registers used:
  9231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9232 ;; Tracked objects:
  9233 ;;		On entry : 1F/0
  9234 ;;		On exit  : 1E/0
  9235 ;;		Unchanged: 0/0
  9236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;Total ram usage:        3 bytes
  9242 ;; Hardware stack levels used:    1
  9243 ;; Hardware stack levels required when called:    7
  9244 ;; This function calls:
  9245 ;;		_USBCtrlTrfInHandler
  9246 ;;		_USBCtrlTrfOutHandler
  9247 ;;		_USBCtrlTrfSetupHandler
  9248 ;; This function is called by:
  9249 ;;		_USBDeviceTasks
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           
  9254                           ;psect for function _USBCtrlEPService
  9255  0E27                     _USBCtrlEPService:	
  9256                           
  9257                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9261  0E27  302D               	movlw	45
  9262  0E28  00D5               	movwf	_USBStatusStageTimeoutCounter	;volatile
  9263                           
  9264                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  9265  0E29  085C               	movf	_USTATcopy,w	;volatile
  9266  0E2A  39FD               	andlw	253
  9267  0E2B  1D03               	btfss	3,2
  9268  0E2C  2E5F               	goto	i1l3979
  9269                           
  9270                           ;usb_device.c: 2383: {
  9271                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  9272  0E2D  365C               	lsrf	_USTATcopy,w	;volatile
  9273  0E2E  393F               	andlw	63
  9274  0E2F  0709               	addwf	9,w
  9275  0E30  0709               	addwf	9,w
  9276  0E31  3E20               	addlw	32
  9277  0E32  00DA               	movwf	_pBDTEntryEP0OutCurrent
  9278                           
  9279                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9280  0E33  00D0               	movwf	_pBDTEntryEP0OutNext
  9281  0E34  39FF               	andlw	255
  9282  0E35  1D03               	skipz
  9283  0E36  3000               	movlw	0
  9284  0E37  00D1               	movwf	_pBDTEntryEP0OutNext+1
  9285                           
  9286                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  9287  0E38  3004               	movlw	4
  9288  0E39  0650               	xorwf	_pBDTEntryEP0OutNext,w
  9289  0E3A  00D0               	movwf	_pBDTEntryEP0OutNext
  9290                           
  9291                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9292  0E3B  085A               	movf	_pBDTEntryEP0OutCurrent,w
  9293  0E3C  0086               	movwf	6
  9294  0E3D  0187               	clrf	7
  9295  0E3E  0C01               	rrf	1,w
  9296  0E3F  0C89               	rrf	9,f
  9297  0E40  390F               	andlw	15
  9298  0E41  3A0D               	xorlw	13
  9299  0E42  1D03               	skipz
  9300  0E43  2E5D               	goto	i1l3977
  9301                           
  9302                           ;usb_device.c: 2400: {
  9303                           ;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t*)((void *)(pBDTEntryE
      +                          P0OutCurrent->ADR)),8);
  9304  0E44  3040               	movlw	64
  9305  0E45  0086               	movwf	6
  9306  0E46  0020               	movlb	0	; select bank0
  9307  0E47  085A               	movf	_pBDTEntryEP0OutCurrent,w
  9308  0E48  3E02               	addlw	2
  9309  0E49  0084               	movwf	4
  9310  0E4A  0185               	clrf	5
  9311  0E4B  3F00               	moviw [0]fsr0
  9312  0E4C  00EA               	movwf	??_USBCtrlEPService
  9313  0E4D  3F01               	moviw [1]fsr0
  9314  0E4E  00EB               	movwf	??_USBCtrlEPService+1
  9315  0E4F  086A               	movf	??_USBCtrlEPService,w
  9316  0E50  0084               	movwf	4
  9317  0E51  086B               	movf	??_USBCtrlEPService+1,w
  9318  0E52  0085               	movwf	5
  9319  0E53  3008               	movlw	8
  9320  0E54  00EC               	movwf	??_USBCtrlEPService+2
  9321  0E55  086C               	movf	??_USBCtrlEPService+2,w
  9322  0E56  1903               	skipnz
  9323  0E57  2E5C               	goto	i1l3975
  9324  0E58                     u278_2m0:	
  9325  0E58  0012               	moviw fsr0++
  9326  0E59  001E               	movwi fsr1++
  9327  0E5A  0BEC               	decfsz	??_USBCtrlEPService+2,f
  9328  0E5B  2E58               	goto	u278_2m0
  9329  0E5C                     i1l3975:	
  9330                           
  9331                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  9332  0E5C  2821               	ljmp	i1l3785
  9333  0E5D                     i1l3977:	
  9334                           ;usb_device.c: 2409: }
  9335                           
  9336                           
  9337                           ;usb_device.c: 2410: else
  9338                           ;usb_device.c: 2411: {
  9339                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  9340  0E5D  3184  2CEA         	ljmp	i1l3811
  9341  0E5F                     i1l3979:	
  9342                           
  9343                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  9344  0E5F  30FD               	movlw	253
  9345  0E60  055C               	andwf	_USTATcopy,w	;volatile
  9346  0E61  00EA               	movwf	??_USBCtrlEPService
  9347  0E62  3A04               	xorlw	4
  9348  0E63  1D03               	btfss	3,2
  9349  0E64  0008               	return
  9350                           
  9351                           ;usb_device.c: 2417: {
  9352                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  9353  0E65  2E88               	ljmp	i1l3829
  9354  0E66                     __end_of_USBCtrlEPService:	
  9355  0E66                     __ptext19:	
  9356 ;; *************** function _USBIncrement1msInternalTimers *****************
  9357 ;; Defined at:
  9358 ;;		line 3025 in file "usb/usb_device.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0
  9367 ;; Tracked objects:
  9368 ;;		On entry : 1F/1D
  9369 ;;		On exit  : 1F/1
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;Total ram usage:        0 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_USBDeviceTasks
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function _USBIncrement1msInternalTimers
  9387  0E66                     _USBIncrement1msInternalTimers:	
  9388                           
  9389                           ;usb_device.c: 3033: USB1msTickCount++;
  9390                           
  9391                           ;incstack = 0
  9392                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9393  0E66  3001               	movlw	1
  9394  0E67  0022               	movlb	2	; select bank2
  9395  0E68  07A9               	addwf	_USB1msTickCount^(0+256),f	;volatile
  9396  0E69  3000               	movlw	0
  9397  0E6A  3DAA               	addwfc	(_USB1msTickCount+1)^(0+256),f	;volatile
  9398  0E6B  3DAB               	addwfc	(_USB1msTickCount+2)^(0+256),f	;volatile
  9399  0E6C  3DAC               	addwfc	(_USB1msTickCount+3)^(0+256),f	;volatile
  9400                           
  9401                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9402  0E6D  0021               	movlb	1	; select bank1
  9403  0E6E  085A               	movf	_USBBusIsSuspended^(0+128),w	;volatile
  9404  0E6F  1D03               	btfss	3,2
  9405  0E70  0008               	return
  9406                           
  9407                           ;usb_device.c: 3035: {
  9408                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9409  0E71  0AD4               	incf	_USBTicksSinceSuspendEnd^(0+128),f	;volatile
  9410                           
  9411                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9412  0E72  0854               	movf	_USBTicksSinceSuspendEnd^(0+128),w	;volatile
  9413  0E73  1D03               	btfss	3,2
  9414  0E74  0008               	return
  9415                           
  9416                           ;usb_device.c: 3039: {
  9417                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9418  0E75  30FF               	movlw	255
  9419  0E76  00D4               	movwf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  9420  0E77  0008               	return
  9421  0E78                     __end_of_USBIncrement1msInternalTimers:	
  9422  0E78                     __ptext17:	
  9423 ;; *************** function _USBSuspend *****************
  9424 ;; Defined at:
  9425 ;;		line 2245 in file "usb/usb_device.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 1F/1D
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;Total ram usage:        0 bytes
  9444 ;; Hardware stack levels used:    1
  9445 ;; Hardware stack levels required when called:    4
  9446 ;; This function calls:
  9447 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9448 ;; This function is called by:
  9449 ;;		_USBDeviceTasks
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function _USBSuspend
  9455  0E78                     _USBSuspend:	
  9456                           
  9457                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  9458                           
  9459                           ;incstack = 0
  9460                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9461  0E78  1512               	bsf	18,2	;volatile
  9462                           
  9463                           ;usb_device.c: 2271: (UIR &= 0xEF);
  9464  0E79  1210               	bcf	16,4	;volatile
  9465                           
  9466                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  9467  0E7A  148E               	bsf	14,1	;volatile
  9468                           
  9469                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  9470  0E7B  3001               	movlw	1
  9471  0E7C  0021               	movlb	1	; select bank1
  9472  0E7D  00DA               	movwf	_USBBusIsSuspended^(0+128)	;volatile
  9473                           
  9474                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  9475  0E7E  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
  9476                           
  9477                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  9478  0E7F  3075               	movlw	117
  9479  0E80  0020               	movlb	0	; select bank0
  9480  0E81  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  9481  0E82  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  9482  0E83  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9483  0E84  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9484  0E85  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  9485  0E86  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  9486  0E87  2C2D               	ljmp	i1l3277
  9487  0E88                     __end_of_USBSuspend:	
  9488  0E88                     __ptext46:	
  9489 ;; *************** function _USBCtrlTrfInHandler *****************
  9490 ;; Defined at:
  9491 ;;		line 2592 in file "usb/usb_device.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;  lastDTS         1    5[COMMON] unsigned char 
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9500 ;; Tracked objects:
  9501 ;;		On entry : 1F/0
  9502 ;;		On exit  : 1E/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;Total ram usage:        3 bytes
  9510 ;; Hardware stack levels used:    1
  9511 ;; Hardware stack levels required when called:    3
  9512 ;; This function calls:
  9513 ;;		_USBCtrlTrfTxService
  9514 ;;		_USBHIDCBSetReportComplete
  9515 ;; This function is called by:
  9516 ;;		_USBCtrlEPService
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           
  9521                           ;psect for function _USBCtrlTrfInHandler
  9522  0E88                     _USBCtrlTrfInHandler:	
  9523  0E88                     i1l3829:	
  9524                           ;incstack = 0
  9525                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9526                           
  9527                           
  9528                           ;usb_device.c: 2594: uint8_t lastDTS;
  9529                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9530  0E88  0021               	movlb	1	; select bank1
  9531  0E89  0838               	movf	_pBDTEntryIn^(0+128),w
  9532  0E8A  0086               	movwf	6
  9533  0E8B  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9534  0E8C  0087               	movwf	7
  9535  0E8D  3000               	movlw	0
  9536  0E8E  1B01               	btfsc	1,6
  9537  0E8F  3001               	movlw	1
  9538  0E90  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
  9539                           
  9540                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9541  0E91  3004               	movlw	4
  9542  0E92  0638               	xorwf	_pBDTEntryIn^(0+128),w
  9543  0E93  00B8               	movwf	_pBDTEntryIn^(0+128)
  9544                           
  9545                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9546  0E94  3008               	movlw	8
  9547  0E95  0020               	movlb	0	; select bank0
  9548  0E96  065B               	xorwf	_USBDeviceState,w	;volatile
  9549  0E97  1D03               	btfss	3,2
  9550  0E98  2EA5               	goto	i1l3843
  9551                           
  9552                           ;usb_device.c: 2605: {
  9553                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9554  0E99  0842               	movf	66,w	;volatile
  9555  0E9A  397F               	andlw	127
  9556  0E9B  003D               	movlb	29	; select bank29
  9557  0E9C  0096               	movwf	22	;volatile
  9558                           
  9559                           ;usb_device.c: 2607: if(UADDR != 0u)
  9560  0E9D  0816               	movf	22,w
  9561  0E9E  1903               	btfsc	3,2
  9562  0E9F  2EA2               	goto	i1l3841
  9563                           
  9564                           ;usb_device.c: 2608: {
  9565                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9566  0EA0  3010               	movlw	16
  9567  0EA1  2EA3               	goto	L21
  9568  0EA2                     i1l3841:	
  9569                           ;usb_device.c: 2610: }
  9570                           
  9571                           
  9572                           ;usb_device.c: 2611: else
  9573                           ;usb_device.c: 2612: {
  9574                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9575  0EA2  3004               	movlw	4
  9576  0EA3                     L21:	
  9577  0EA3  0020               	movlb	0	; select bank0
  9578  0EA4  00DB               	movwf	_USBDeviceState	;volatile
  9579  0EA5                     i1l3843:	
  9580                           
  9581                           ;usb_device.c: 2614: }
  9582                           ;usb_device.c: 2615: }
  9583                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9584  0EA5  0B58               	decfsz	_controlTransferState,w	;volatile
  9585  0EA6  2EE5               	goto	i1l518
  9586                           
  9587                           ;usb_device.c: 2619: {
  9588                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfData)) & 0x7FFF);
  9589  0EA7  3048               	movlw	72
  9590  0EA8  00F3               	movwf	??_USBCtrlTrfInHandler
  9591  0EA9  01F4               	clrf	??_USBCtrlTrfInHandler+1
  9592  0EAA  0021               	movlb	1	; select bank1
  9593  0EAB  0838               	movf	_pBDTEntryIn^(0+128),w
  9594  0EAC  0086               	movwf	6
  9595  0EAD  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9596  0EAE  0087               	movwf	7
  9597  0EAF  3142               	addfsr 1,2
  9598  0EB0  0873               	movf	??_USBCtrlTrfInHandler,w
  9599  0EB1  3FC0               	movwi [0]fsr1
  9600  0EB2  0874               	movf	??_USBCtrlTrfInHandler+1,w
  9601  0EB3  3FC1               	movwi [1]fsr1
  9602                           
  9603                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9604  0EB4  26FA  3188         	fcall	_USBCtrlTrfTxService
  9605                           
  9606                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9607  0EB6  3002               	movlw	2
  9608  0EB7  0020               	movlb	0	; select bank0
  9609  0EB8  0659               	xorwf	_shortPacketStatus,w	;volatile
  9610  0EB9  1D03               	btfss	3,2
  9611  0EBA  2EC8               	goto	i1l3853
  9612                           
  9613                           ;usb_device.c: 2628: {
  9614                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9615  0EBB  0021               	movlb	1	; select bank1
  9616  0EBC  0838               	movf	_pBDTEntryIn^(0+128),w
  9617  0EBD  0086               	movwf	6
  9618  0EBE  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9619  0EBF  0087               	movwf	7
  9620  0EC0  3004               	movlw	4
  9621  0EC1  0081               	movwf	1
  9622                           
  9623                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9624  0EC2  0838               	movf	_pBDTEntryIn^(0+128),w
  9625  0EC3  0086               	movwf	6
  9626  0EC4  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9627  0EC5  0087               	movwf	7
  9628  0EC6  1781               	bsf	1,7
  9629                           
  9630                           ;usb_device.c: 2633: }
  9631  0EC7  0008               	return
  9632  0EC8                     i1l3853:	
  9633                           
  9634                           ;usb_device.c: 2634: else
  9635                           ;usb_device.c: 2635: {
  9636                           ;usb_device.c: 2636: if(lastDTS == 0)
  9637  0EC8  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
  9638  0EC9  1D03               	btfss	3,2
  9639  0ECA  2ED8               	goto	i1l3857
  9640                           
  9641                           ;usb_device.c: 2637: {
  9642                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9643  0ECB  0021               	movlb	1	; select bank1
  9644  0ECC  0838               	movf	_pBDTEntryIn^(0+128),w
  9645  0ECD  0086               	movwf	6
  9646  0ECE  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9647  0ECF  0087               	movwf	7
  9648  0ED0  3048               	movlw	72
  9649  0ED1  0081               	movwf	1
  9650                           
  9651                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9652  0ED2  0838               	movf	_pBDTEntryIn^(0+128),w
  9653  0ED3  0086               	movwf	6
  9654  0ED4  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9655  0ED5  0087               	movwf	7
  9656  0ED6  1781               	bsf	1,7
  9657                           
  9658                           ;usb_device.c: 2640: }
  9659  0ED7  0008               	return
  9660  0ED8                     i1l3857:	
  9661                           
  9662                           ;usb_device.c: 2641: else
  9663                           ;usb_device.c: 2642: {
  9664                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9665  0ED8  0021               	movlb	1	; select bank1
  9666  0ED9  0838               	movf	_pBDTEntryIn^(0+128),w
  9667  0EDA  0086               	movwf	6
  9668  0EDB  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9669  0EDC  0087               	movwf	7
  9670  0EDD  3008               	movlw	8
  9671  0EDE  0081               	movwf	1
  9672                           
  9673                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9674  0EDF  0838               	movf	_pBDTEntryIn^(0+128),w
  9675  0EE0  0086               	movwf	6
  9676  0EE1  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9677  0EE2  0087               	movwf	7
  9678  0EE3  1781               	bsf	1,7
  9679  0EE4  0008               	return
  9680  0EE5                     i1l518:	
  9681                           
  9682                           ;usb_device.c: 2648: else
  9683                           ;usb_device.c: 2649: {
  9684                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9685  0EE5  0021               	movlb	1	; select bank1
  9686  0EE6  1FAA               	btfss	(_outPipes^(0+128)+2),7	;volatile
  9687  0EE7  2EF7               	goto	i1l3865
  9688                           
  9689                           ;usb_device.c: 2654: {
  9690                           ;usb_device.c: 2655: if(outPipes[0].pFunc != (0))
  9691  0EE8  082D               	movf	(low ((_outPipes| 0+5)))^(0+128),w	;volatile
  9692  0EE9  042E               	iorwf	((low ((_outPipes| 0+5))+1))^(0+128),w	;volatile
  9693  0EEA  1903               	btfsc	3,2
  9694  0EEB  2EF5               	goto	i1l3863
  9695                           
  9696                           ;usb_device.c: 2656: {
  9697                           ;usb_device.c: 2657: outPipes[0].pFunc();
  9698  0EEC  3005               	movlw	5
  9699  0EED  3EA8               	addlw	(low (_outPipes| 0))& (0+255)
  9700  0EEE  0086               	movwf	6
  9701  0EEF  0187               	clrf	7
  9702  0EF0  3F41               	moviw [1]fsr1
  9703  0EF1  008A               	movwf	10
  9704  0EF2  3F40               	moviw [0]fsr1
  9705  0EF3  000A               	callw
  9706  0EF4  3188               	pagesel	$
  9707  0EF5                     i1l3863:	
  9708                           
  9709                           ;usb_device.c: 2658: }
  9710                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9711  0EF5  0021               	movlb	1	; select bank1
  9712  0EF6  13AA               	bcf	(_outPipes^(0+128)+2),7	;volatile
  9713  0EF7                     i1l3865:	
  9714                           
  9715                           ;usb_device.c: 2660: }
  9716                           ;usb_device.c: 2662: controlTransferState = 0;
  9717  0EF7  0020               	movlb	0	; select bank0
  9718  0EF8  01D8               	clrf	_controlTransferState	;volatile
  9719  0EF9  0008               	return
  9720  0EFA                     __end_of_USBCtrlTrfInHandler:	
  9721  0EFA                     __ptext51:	
  9722 ;; *************** function _USBCtrlTrfTxService *****************
  9723 ;; Defined at:
  9724 ;;		line 1771 in file "usb/usb_device.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;  byteToSend      1    2[COMMON] unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9733 ;; Tracked objects:
  9734 ;;		On entry : 1E/0
  9735 ;;		On exit  : 1E/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;Total ram usage:        3 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_USBCtrlEPAllowDataStage
  9748 ;;		_USBCtrlTrfInHandler
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           
  9753                           ;psect for function _USBCtrlTrfTxService
  9754  0EFA                     _USBCtrlTrfTxService:	
  9755                           
  9756                           ;usb_device.c: 1773: uint8_t byteToSend;
  9757                           ;usb_device.c: 1777: byteToSend = 8;
  9758                           
  9759                           ;incstack = 0
  9760                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
  9761  0EFA  3008               	movlw	8
  9762  0EFB  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9763                           
  9764                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9765  0EFC  3000               	movlw	0
  9766  0EFD  0021               	movlb	1	; select bank1
  9767  0EFE  0233               	subwf	((_inPipes+1)^(0+128)+3),w	;volatile
  9768  0EFF  3008               	movlw	8
  9769  0F00  1903               	skipnz
  9770  0F01  0232               	subwf	(_inPipes^(0+128)+3),w	;volatile
  9771  0F02  1803               	skipnc
  9772  0F03  2F10               	goto	i1l418
  9773                           
  9774                           ;usb_device.c: 1779: {
  9775                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9776  0F04  0832               	movf	(_inPipes^(0+128)+3),w	;volatile
  9777  0F05  00F2               	movwf	USBCtrlTrfTxService@byteToSend
  9778                           
  9779                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9780  0F06  0020               	movlb	0	; select bank0
  9781  0F07  0859               	movf	_shortPacketStatus,w	;volatile
  9782  0F08  1D03               	btfss	3,2
  9783  0F09  2F0C               	goto	i1l3325
  9784                           
  9785                           ;usb_device.c: 1788: {
  9786                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9787  0F0A  3001               	movlw	1
  9788  0F0B  2F0F               	goto	L22
  9789  0F0C                     i1l3325:	
  9790                           ;usb_device.c: 1790: }
  9791                           
  9792                           
  9793                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9794  0F0C  0B59               	decfsz	_shortPacketStatus,w	;volatile
  9795  0F0D  2F10               	goto	i1l418
  9796                           
  9797                           ;usb_device.c: 1792: {
  9798                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9799  0F0E  3002               	movlw	2
  9800  0F0F                     L22:	
  9801  0F0F  00D9               	movwf	_shortPacketStatus	;volatile
  9802  0F10                     i1l418:	
  9803                           
  9804                           ;usb_device.c: 1794: }
  9805                           ;usb_device.c: 1795: }
  9806                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9807  0F10  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9808  0F11  0021               	movlb	1	; select bank1
  9809  0F12  02B2               	subwf	(_inPipes^(0+128)+3),f	;volatile
  9810  0F13  1C03               	skipc
  9811  0F14  03B3               	decf	((_inPipes+1)^(0+128)+3),f	;volatile
  9812                           
  9813                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9814  0F15  0838               	movf	_pBDTEntryIn^(0+128),w
  9815  0F16  3E01               	addlw	1
  9816  0F17  00F0               	movwf	??_USBCtrlTrfTxService
  9817  0F18  3000               	movlw	0
  9818  0F19  3D39               	addwfc	(_pBDTEntryIn+1)^(0+128),w
  9819  0F1A  00F1               	movwf	??_USBCtrlTrfTxService+1
  9820  0F1B  0870               	movf	??_USBCtrlTrfTxService,w
  9821  0F1C  0086               	movwf	6
  9822  0F1D  0871               	movf	??_USBCtrlTrfTxService+1,w
  9823  0F1E  0087               	movwf	7
  9824  0F1F  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9825  0F20  0081               	movwf	1
  9826                           
  9827                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
  9828  0F21  3048               	movlw	72
  9829  0F22  0020               	movlb	0	; select bank0
  9830  0F23  00D7               	movwf	_pDst
  9831                           
  9832                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9833  0F24  0021               	movlb	1	; select bank1
  9834  0F25  1C31               	btfss	(_inPipes^(0+128)+2),0	;volatile
  9835  0F26  2F39               	goto	i1l3345
  9836  0F27  2F4E               	goto	i1l3355
  9837  0F28                     i1l3337:	
  9838                           
  9839                           ;usb_device.c: 1812: {
  9840                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9841  0F28  0020               	movlb	0	; select bank0
  9842  0F29  0857               	movf	_pDst,w
  9843  0F2A  0086               	movwf	6
  9844  0F2B  0187               	clrf	7
  9845  0F2C  0021               	movlb	1	; select bank1
  9846  0F2D  082F               	movf	_inPipes^(0+128),w	;volatile
  9847  0F2E  0084               	movwf	4
  9848  0F2F  0830               	movf	(_inPipes+1)^(0+128),w	;volatile
  9849  0F30  0085               	movwf	5
  9850  0F31  0800               	movf	0,w	;code access
  9851  0F32  0081               	movwf	1
  9852  0F33  0AAF               	incf	_inPipes^(0+128),f	;volatile
  9853  0F34  1903               	skipnz
  9854  0F35  0AB0               	incf	(_inPipes+1)^(0+128),f	;volatile
  9855  0F36  0020               	movlb	0	; select bank0
  9856  0F37  0AD7               	incf	_pDst,f
  9857                           
  9858                           ;usb_device.c: 1814: byteToSend--;
  9859  0F38  03F2               	decf	USBCtrlTrfTxService@byteToSend,f
  9860  0F39                     i1l3345:	
  9861  0F39  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9862  0F3A  1903               	btfsc	3,2
  9863  0F3B  0008               	return
  9864  0F3C  2F28               	goto	i1l3337
  9865  0F3D                     i1l3347:	
  9866                           
  9867                           ;usb_device.c: 1820: {
  9868                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9869  0F3D  0020               	movlb	0	; select bank0
  9870  0F3E  0857               	movf	_pDst,w
  9871  0F3F  0086               	movwf	6
  9872  0F40  0187               	clrf	7
  9873  0F41  0021               	movlb	1	; select bank1
  9874  0F42  082F               	movf	_inPipes^(0+128),w	;volatile
  9875  0F43  0084               	movwf	4
  9876  0F44  0830               	movf	(_inPipes+1)^(0+128),w	;volatile
  9877  0F45  0085               	movwf	5
  9878  0F46  0800               	movf	0,w	;code access
  9879  0F47  0081               	movwf	1
  9880  0F48  0AAF               	incf	_inPipes^(0+128),f	;volatile
  9881  0F49  1903               	skipnz
  9882  0F4A  0AB0               	incf	(_inPipes+1)^(0+128),f	;volatile
  9883  0F4B  0020               	movlb	0	; select bank0
  9884  0F4C  0AD7               	incf	_pDst,f
  9885                           
  9886                           ;usb_device.c: 1822: byteToSend--;
  9887  0F4D  03F2               	decf	USBCtrlTrfTxService@byteToSend,f
  9888  0F4E                     i1l3355:	
  9889  0F4E  0872               	movf	USBCtrlTrfTxService@byteToSend,w
  9890  0F4F  1903               	btfsc	3,2
  9891  0F50  0008               	return
  9892  0F51  2F3D               	goto	i1l3347
  9893  0F52                     __end_of_USBCtrlTrfTxService:	
  9894  007E                     btemp	set	126	;btemp
  9895  007E                     int$flags	set	126
  9896  007E                     wtemp0	set	126
  9897  0F52                     __ptext18:	
  9898 ;; *************** function _USBStallHandler *****************
  9899 ;; Defined at:
  9900 ;;		line 2202 in file "usb/usb_device.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9909 ;; Tracked objects:
  9910 ;;		On entry : 1F/1D
  9911 ;;		On exit  : 1F/1D
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_USBDeviceTasks
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           
  9928                           ;psect for function _USBStallHandler
  9929  0F52                     _USBStallHandler:	
  9930                           
  9931                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9932                           
  9933                           ;incstack = 0
  9934                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9935  0F52  1C18               	btfss	24,0	;volatile
  9936  0F53  2F70               	goto	i1l3959
  9937                           
  9938                           ;usb_device.c: 2215: {
  9939                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  9940  0F54  0020               	movlb	0	; select bank0
  9941  0F55  085A               	movf	_pBDTEntryEP0OutCurrent,w
  9942  0F56  0086               	movwf	6
  9943  0F57  3080               	movlw	128
  9944  0F58  0187               	clrf	7
  9945  0F59  0601               	xorwf	1,w
  9946  0F5A  1D03               	btfss	3,2
  9947  0F5B  2F6E               	goto	i1l3957
  9948  0F5C  0021               	movlb	1	; select bank1
  9949  0F5D  0838               	movf	_pBDTEntryIn^(0+128),w
  9950  0F5E  0086               	movwf	6
  9951  0F5F  0839               	movf	(_pBDTEntryIn+1)^(0+128),w
  9952  0F60  0087               	movwf	7
  9953  0F61  3084               	movlw	132
  9954  0F62  0601               	xorwf	1,w
  9955  0F63  1D03               	btfss	3,2
  9956  0F64  2F6E               	goto	i1l3957
  9957                           
  9958                           ;usb_device.c: 2218: {
  9959                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  9960  0F65  0020               	movlb	0	; select bank0
  9961  0F66  085A               	movf	_pBDTEntryEP0OutCurrent,w
  9962  0F67  0086               	movwf	6
  9963  0F68  300C               	movlw	12
  9964  0F69  0187               	clrf	7
  9965  0F6A  0081               	movwf	1
  9966                           
  9967                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9968  0F6B  085A               	movf	_pBDTEntryEP0OutCurrent,w
  9969  0F6C  0086               	movwf	6
  9970  0F6D  1781               	bsf	1,7
  9971  0F6E                     i1l3957:	
  9972                           
  9973                           ;usb_device.c: 2222: }
  9974                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  9975  0F6E  003D               	movlb	29	; select bank29
  9976  0F6F  1018               	bcf	24,0	;volatile
  9977  0F70                     i1l3959:	
  9978                           
  9979                           ;usb_device.c: 2224: }
  9980                           ;usb_device.c: 2226: (UIR &= 0xDF);
  9981  0F70  1290               	bcf	16,5	;volatile
  9982  0F71  0008               	return
  9983  0F72                     __end_of_USBStallHandler:	
  9984  0F72                     __ptext16:	
  9985 ;; *************** function _USBWakeFromSuspend *****************
  9986 ;; Defined at:
  9987 ;;		line 2303 in file "usb/usb_device.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;		None
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;		None
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 1F/1D
  9998 ;;		On exit  : 1F/1
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;Total ram usage:        0 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    4
 10008 ;; This function calls:
 10009 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10010 ;; This function is called by:
 10011 ;;		_USBDeviceTasks
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           
 10016                           ;psect for function _USBWakeFromSuspend
 10017  0F72                     _USBWakeFromSuspend:	
 10018                           
 10019                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10020                           
 10021                           ;incstack = 0
 10022                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10023  0F72  0021               	movlb	1	; select bank1
 10024  0F73  01DA               	clrf	_USBBusIsSuspended^(0+128)	;volatile
 10025                           
 10026                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10027  0F74  3074               	movlw	116
 10028  0F75  0020               	movlb	0	; select bank0
 10029  0F76  00DF               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
 10030  0F77  3000               	movlw	0
 10031  0F78  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10032  0F79  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10033  0F7A  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10034  0F7B  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
 10035  0F7C  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10036  0F7D  242D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10037                           
 10038                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10039  0F7F  003D               	movlb	29	; select bank29
 10040  0F80  108E               	bcf	14,1	;volatile
 10041                           
 10042                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10043  0F81  1112               	bcf	18,2	;volatile
 10044  0F82                     i1l491:	
 10045                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10046                           
 10047  0F82  1D10               	btfss	16,2	;volatile
 10048  0F83  2F86               	goto	i1l3931
 10049                           
 10050                           ;usb_device.c: 2343: {
 10051                           ;usb_device.c: 2344: (UIR &= 0xFB);
 10052  0F84  1110               	bcf	16,2	;volatile
 10053  0F85  2F82               	goto	i1l491
 10054  0F86                     i1l3931:	
 10055                           
 10056                           ;usb_device.c: 2345: }
 10057                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10058  0F86  0021               	movlb	1	; select bank1
 10059  0F87  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
 10060  0F88  0008               	return
 10061  0F89                     __end_of_USBWakeFromSuspend:	
 10062  0F89                     __ptext15:	
 10063 ;; *************** function i1_USBDeviceInit *****************
 10064 ;; Defined at:
 10065 ;;		line 277 in file "usb/usb_device.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;		None
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;  USBDeviceIni    2    0[COMMON] PTR unsigned char 
 10070 ;;		 -> UEP1(1), 
 10071 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10072 ;;  USBDeviceIni    1    2[COMMON] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10077 ;; Tracked objects:
 10078 ;;		On entry : 1F/1D
 10079 ;;		On exit  : 1F/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;Total ram usage:        4 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; This function calls:
 10089 ;;		Nothing
 10090 ;; This function is called by:
 10091 ;;		_USBDeviceTasks
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function i1_USBDeviceInit
 10097  0F89                     i1_USBDeviceInit:	
 10098                           
 10099                           ;usb_device.c: 279: uint8_t i;
 10100                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10101                           
 10102                           ;incstack = 0
 10103                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10104  0F89  0021               	movlb	1	; select bank1
 10105  0F8A  1112               	bcf	18,2	;volatile
 10106                           
 10107                           ;usb_device.c: 285: ;
 10108                           ;usb_device.c: 288: {UEIR = 0;};
 10109  0F8B  003D               	movlb	29	; select bank29
 10110  0F8C  0193               	clrf	19	;volatile
 10111                           
 10112                           ;usb_device.c: 291: {UIR = 0;};
 10113  0F8D  0190               	clrf	16	;volatile
 10114                           
 10115                           ;usb_device.c: 294: UEP0 = 0;
 10116  0F8E  0198               	clrf	24	;volatile
 10117                           
 10118                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<1;i++) *p++ = 0
      +                          ; };
 10119  0F8F  300E               	movlw	14
 10120  0F90  00F1               	movwf	i1USBDeviceInit@p+1
 10121  0F91  3099               	movlw	153
 10122  0F92  00F0               	movwf	i1USBDeviceInit@p
 10123  0F93  01F2               	clrf	i1USBDeviceInit@i_1020
 10124  0F94                     i1l4035:	
 10125  0F94  0870               	movf	i1USBDeviceInit@p,w
 10126  0F95  0086               	movwf	6
 10127  0F96  0871               	movf	i1USBDeviceInit@p+1,w
 10128  0F97  0087               	movwf	7
 10129  0F98  0181               	clrf	1
 10130  0F99  0AF0               	incf	i1USBDeviceInit@p,f
 10131  0F9A  1903               	skipnz
 10132  0F9B  0AF1               	incf	i1USBDeviceInit@p+1,f
 10133  0F9C  0AF2               	incf	i1USBDeviceInit@i_1020,f
 10134  0F9D  1903               	btfsc	3,2
 10135  0F9E  2F94               	goto	i1l4035
 10136                           
 10137                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10138  0F9F  3016               	movlw	22
 10139  0FA0  0091               	movwf	17	;volatile
 10140  0FA1  309F               	movlw	159
 10141  0FA2  0097               	movwf	23	;volatile
 10142  0FA3  307B               	movlw	123
 10143  0FA4  0092               	movwf	18	;volatile
 10144                           
 10145                           ;usb_device.c: 301: ;
 10146                           ;usb_device.c: 304: ;
 10147                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
 10148  0FA5  01F3               	clrf	i1USBDeviceInit@i
 10149  0FA6                     i1l4051:	
 10150                           
 10151                           ;usb_device.c: 308: {
 10152                           ;usb_device.c: 309: BDT[i].Val = 0x00;
 10153  0FA6  0873               	movf	i1USBDeviceInit@i,w
 10154  0FA7  0709               	addwf	9,w
 10155  0FA8  0709               	addwf	9,w
 10156  0FA9  3E20               	addlw	32
 10157  0FAA  0086               	movwf	6
 10158  0FAB  3000               	movlw	0
 10159  0FAC  0187               	clrf	7
 10160  0FAD  3FC0               	movwi [0]fsr1
 10161  0FAE  3FC1               	movwi [1]fsr1
 10162  0FAF  3FC2               	movwi [2]fsr1
 10163  0FB0  3FC3               	movwi [3]fsr1
 10164  0FB1  3008               	movlw	8
 10165  0FB2  0AF3               	incf	i1USBDeviceInit@i,f
 10166  0FB3  0273               	subwf	i1USBDeviceInit@i,w
 10167  0FB4  1C03               	skipc
 10168  0FB5  2FA6               	goto	i1l4051
 10169                           
 10170                           ;usb_device.c: 310: }
 10171                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
 10172  0FB6  170E               	bsf	14,6	;volatile
 10173                           
 10174                           ;usb_device.c: 316: UADDR = 0x00;
 10175  0FB7  0196               	clrf	22	;volatile
 10176                           
 10177                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10178  0FB8  120E               	bcf	14,4	;volatile
 10179                           
 10180                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10181  0FB9  130E               	bcf	14,6	;volatile
 10182  0FBA                     i1l4063:	
 10183                           
 10184                           ;usb_device.c: 326: {
 10185                           ;usb_device.c: 327: (UIR &= 0xF7);
 10186  0FBA  1190               	bcf	16,3	;volatile
 10187                           
 10188                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10189  0FBB  0021               	movlb	1	; select bank1
 10190  0FBC  01B1               	clrf	(_inPipes^(0+128)+2)	;volatile
 10191                           
 10192                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10193  0FBD  01AA               	clrf	(_outPipes^(0+128)+2)	;volatile
 10194                           
 10195                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10196  0FBE  01AB               	clrf	(_outPipes^(0+128)+3)	;volatile
 10197  0FBF  01AC               	clrf	((_outPipes+1)^(0+128)+3)	;volatile
 10198                           
 10199                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10200  0FC0  003D               	movlb	29	; select bank29
 10201  0FC1  1990               	btfsc	16,3	;volatile
 10202  0FC2  2FBA               	goto	i1l4063
 10203                           
 10204                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10205  0FC3  3001               	movlw	1
 10206  0FC4  0021               	movlb	1	; select bank1
 10207  0FC5  00D8               	movwf	_USBStatusStageEnabledFlag1^(0+128)	;volatile
 10208                           
 10209                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10210  0FC6  00D7               	movwf	_USBStatusStageEnabledFlag2^(0+128)	;volatile
 10211                           
 10212                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10213  0FC7  01D6               	clrf	_USBDeferINDataStagePackets^(0+128)	;volatile
 10214                           
 10215                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10216  0FC8  01D5               	clrf	_USBDeferOUTDataStagePackets^(0+128)	;volatile
 10217                           
 10218                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10219  0FC9  01DA               	clrf	_USBBusIsSuspended^(0+128)	;volatile
 10220                           
 10221                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(1+1u); i++)
 10222  0FCA  01F3               	clrf	i1USBDeviceInit@i
 10223  0FCB                     i1l4079:	
 10224                           
 10225                           ;usb_device.c: 346: {
 10226                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10227  0FCB  3573               	lslf	i1USBDeviceInit@i,w
 10228  0FCC  3EB8               	addlw	(low (_pBDTEntryIn| 0))& (0+255)
 10229  0FCD  0086               	movwf	6
 10230  0FCE  3000               	movlw	0
 10231  0FCF  0187               	clrf	7
 10232  0FD0  3FC0               	movwi [0]fsr1
 10233  0FD1  3FC1               	movwi [1]fsr1
 10234                           
 10235                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10236  0FD2  3573               	lslf	i1USBDeviceInit@i,w
 10237  0FD3  3EBC               	addlw	(low (_pBDTEntryOut| 0))& (0+255)
 10238  0FD4  0086               	movwf	6
 10239  0FD5  3000               	movlw	0
 10240  0FD6  3FC0               	movwi [0]fsr1
 10241  0FD7  3FC1               	movwi [1]fsr1
 10242                           
 10243                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10244  0FD8  0873               	movf	i1USBDeviceInit@i,w
 10245  0FD9  3ECA               	addlw	(low (_ep_data_in| 0))& (0+255)
 10246  0FDA  0086               	movwf	6
 10247  0FDB  0181               	clrf	1
 10248                           
 10249                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10250  0FDC  0873               	movf	i1USBDeviceInit@i,w
 10251  0FDD  3EC8               	addlw	(low (_ep_data_out| 0))& (0+255)
 10252  0FDE  0086               	movwf	6
 10253  0FDF  3002               	movlw	2
 10254  0FE0  0181               	clrf	1
 10255  0FE1  0AF3               	incf	i1USBDeviceInit@i,f
 10256  0FE2  0273               	subwf	i1USBDeviceInit@i,w
 10257  0FE3  1C03               	skipc
 10258  0FE4  2FCB               	goto	i1l4079
 10259                           
 10260                           ;usb_device.c: 351: }
 10261                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10262  0FE5  3028               	movlw	40
 10263  0FE6  0021               	movlb	1	; select bank1
 10264  0FE7  00B8               	movwf	_pBDTEntryIn^(0+128)
 10265  0FE8  3016               	movlw	22
 10266  0FE9  01B9               	clrf	(_pBDTEntryIn+1)^(0+128)
 10267                           
 10268                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10269  0FEA  003D               	movlb	29	; select bank29
 10270  0FEB  0098               	movwf	24	;volatile
 10271                           
 10272                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10273  0FEC  0020               	movlb	0	; select bank0
 10274  0FED  01A3               	clrf	35	;volatile
 10275  0FEE  3040               	movlw	64
 10276  0FEF  00A2               	movwf	34	;volatile
 10277                           
 10278                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10279  0FF0  3008               	movlw	8
 10280  0FF1  00A1               	movwf	33	;volatile
 10281                           
 10282                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10283  0FF2  3004               	movlw	4
 10284  0FF3  00A0               	movwf	32	;volatile
 10285                           
 10286                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10287  0FF4  17A0               	bsf	32,7	;volatile
 10288                           
 10289                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10290  0FF5  01DE               	clrf	_USBActiveConfiguration	;volatile
 10291                           
 10292                           ;usb_device.c: 366: USB1msTickCount = 0;
 10293  0FF6  0022               	movlb	2	; select bank2
 10294  0FF7  01A9               	clrf	_USB1msTickCount^(0+256)	;volatile
 10295  0FF8  01AA               	clrf	(_USB1msTickCount+1)^(0+256)	;volatile
 10296  0FF9  01AB               	clrf	(_USB1msTickCount+2)^(0+256)	;volatile
 10297  0FFA  01AC               	clrf	(_USB1msTickCount+3)^(0+256)	;volatile
 10298                           
 10299                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10300  0FFB  0021               	movlb	1	; select bank1
 10301  0FFC  01D4               	clrf	_USBTicksSinceSuspendEnd^(0+128)	;volatile
 10302                           
 10303                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10304  0FFD  0020               	movlb	0	; select bank0
 10305  0FFE  01DB               	clrf	_USBDeviceState	;volatile
 10306  0FFF  0008               	return
 10307  1000                     __end_ofi1_USBDeviceInit:	


Data Sizes:
    Strings     0
    Constant    214
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            32     15      30
    BANK1            72     16      70
    BANK2            79      0      12
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0[8]), RAM(DATA[4096]), SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[32]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> inputReport(BANK1[8]), USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> inputReport(BANK1[8]), USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    S2163$lastOUTTransmission	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    keyboard.lastOUTTransmission	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    S2163$lastINTransmission	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    keyboard.lastINTransmission	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> inputReport(BANK1[8]), USBAlternateInterface(BANK0[1]), BDT(BANK0[32]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 32
		 -> BDT(BANK0[32]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 32
		 -> NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 8
		 -> inputReport(BANK1[8]), outputReport(BANK2[1]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[2] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    pBDTEntryIn	PTR volatile struct __BDT[2] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[32]), 

    S448$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USBHIDCBSetReportComplete(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USBHIDCBSetReportComplete(), 

    S438$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S438$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S414$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S414$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S414$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S414$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[28]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 41
		 -> configDescriptor1(CODE[41]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    i1_SYSTEM_Initialize->i1_BUTTON_Enable
    i1_SYSTEM_Initialize->i1_LED_Enable
    _USBCheckHIDRequest->_USBHIDCBSetIdleRateHandler
    _APP_LEDUpdateUSBStatus->i1_LED_Off
    _APP_LEDUpdateUSBStatus->i1_LED_On
    _APP_KeyboardInit->i1_USBTransferOnePacket
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    i1_APP_KeyboardProcessOutputReport->i1_LED_Off
    i1_APP_KeyboardProcessOutputReport->i1_LED_On

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _main->_APP_KeyboardTasks
    _SYSTEM_Initialize->_BUTTON_Enable
    _SYSTEM_Initialize->_LED_Enable
    _APP_KeyboardTasks->_USBTransferOnePacket
    _APP_KeyboardProcessOutputReport->_LED_Off
    _APP_KeyboardProcessOutputReport->_LED_On

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2697
                  _APP_KeyboardTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        4     4      0     396
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      93
                                              1 BANK1      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_KeyboardTasks                                    7     7      0    2208
                                             11 BANK1      5     5      0
    _APP_KeyboardProcessOutputReport
                   _BUTTON_IsPressed
               _USBTransferOnePacket
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     2      4     738
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    1099
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 (2) _BUTTON_IsPressed                                     2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _APP_KeyboardProcessOutputReport                      0     0      0      62
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (3) _LED_On                                               1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_Off                                              1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    0     0      0   29835
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       2     2      0   29835
                                             13 COMMON     1     1      0
                                             14 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      4     4      0     272
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   0     0      0    4033
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           0     0      0    4033
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   17418
                                             11 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               0     0      0   17101
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   0     0      0   12976
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  4     4      0    4393
                                              6 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i1_memset
 ---------------------------------------------------------------------------------
 (10) i1_memset                                            6     2      4     200
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4504
                                             11 COMMON     2     2      0
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    4033
                                              0 BANK0      6     0      6
                   _APP_KeyboardInit
             _APP_LEDUpdateUSBStatus
                _BUTTON_UpdateStates
                 _USBCheckHIDRequest
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      66
                                              1 COMMON     1     1      0
                    i1_BUTTON_Enable
                       i1_LED_Enable
 ---------------------------------------------------------------------------------
 (8) i1_LED_Enable                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_BUTTON_Enable                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCheckHIDRequest                                   0     0      0     133
         _USBHIDCBSetIdleRateHandler
           _USBHIDCBSetReportHandler
 ---------------------------------------------------------------------------------
 (8) _USBHIDCBSetReportHandler                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBHIDCBSetIdleRateHandler                           2     1      1     133
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (7) _BUTTON_UpdateStates                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                          i1_LED_Off
                           i1_LED_On
 ---------------------------------------------------------------------------------
 (7) _APP_KeyboardInit                                     0     0      0    1098
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     644
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 4     3      1     400
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     158
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     158
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
          _USBHIDCBSetReportComplete *
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     159
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
          _USBHIDCBSetReportComplete *
 ---------------------------------------------------------------------------------
 (9) _USBHIDCBSetReportComplete                            0     0      0      44
  i1_APP_KeyboardProcessOutputReport
 ---------------------------------------------------------------------------------
 (10) i1_APP_KeyboardProcessOutputReport                   0     0      0      44
                          i1_LED_Off
                           i1_LED_On
 ---------------------------------------------------------------------------------
 (8) i1_LED_On                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_LED_Off                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_KeyboardTasks
     _APP_KeyboardProcessOutputReport
       _LED_Off
       _LED_On
     _BUTTON_IsPressed
     _USBTransferOnePacket
     _memset
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
   _USBDeviceAttach
   _USBDeviceInit

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
         _USBHIDCBSetReportComplete *
           i1_APP_KeyboardProcessOutputReport
             i1_LED_Off
             i1_LED_On
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
           _USBHIDCBSetReportComplete *
             i1_APP_KeyboardProcessOutputReport
               i1_LED_Off
               i1_LED_On
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_KeyboardInit
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_LED_Off
                 i1_LED_On
               _BUTTON_UpdateStates
               _USBCheckHIDRequest
                 _USBHIDCBSetIdleRateHandler
                 _USBHIDCBSetReportHandler
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_KeyboardInit
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _APP_LEDUpdateUSBStatus
                 i1_LED_Off
                 i1_LED_On
               _BUTTON_UpdateStates
               _USBCheckHIDRequest
                 _USBHIDCBSetIdleRateHandler
                 _USBHIDCBSetReportHandler
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
             i1_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_KeyboardInit
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _APP_LEDUpdateUSBStatus
               i1_LED_Off
               i1_LED_On
             _BUTTON_UpdateStates
             _USBCheckHIDRequest
               _USBHIDCBSetIdleRateHandler
               _USBHIDCBSetReportHandler
             i1_SYSTEM_Initialize
               i1_BUTTON_Enable
               i1_LED_Enable
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_KeyboardInit
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _APP_LEDUpdateUSBStatus
             i1_LED_Off
             i1_LED_On
           _BUTTON_UpdateStates
           _USBCheckHIDRequest
             _USBHIDCBSetIdleRateHandler
             _USBHIDCBSetReportHandler
           i1_SYSTEM_Initialize
             i1_BUTTON_Enable
             i1_LED_Enable
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_KeyboardInit
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_LED_Off
           i1_LED_On
         _BUTTON_UpdateStates
         _USBCheckHIDRequest
           _USBHIDCBSetIdleRateHandler
           _USBHIDCBSetReportHandler
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_KeyboardInit
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _APP_LEDUpdateUSBStatus
           i1_LED_Off
           i1_LED_On
         _BUTTON_UpdateStates
         _USBCheckHIDRequest
           _USBHIDCBSetIdleRateHandler
           _USBHIDCBSetReportHandler
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_KeyboardInit
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _APP_LEDUpdateUSBStatus
         i1_LED_Off
         i1_LED_On
       _BUTTON_UpdateStates
       _USBCheckHIDRequest
         _USBHIDCBSetIdleRateHandler
         _USBHIDCBSetReportHandler
       i1_SYSTEM_Initialize
         i1_BUTTON_Enable
         i1_LED_Enable
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            20      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               20      F      1E       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            48      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               48     10      46       7       97.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            4F      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               4F      0       C       9       15.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 03 18:39:25 2019

                                _USB_SD_Ptr 10CA                                           pc 0002  
                               __CFG_CP$OFF 0000                                          l90 01A0  
                                        l92 01A8                                          l93 01B1  
                                        l95 01C4                                 ?_LED_Enable 0070  
                     ??_BUTTON_UpdateStates 0070                               _USBDeviceInit 01F1  
                        _USBCheckHIDRequest 05B5            __end_of_USBHIDCBSetReportHandler 0636  
      USER_USB_CALLBACK_EVENT_HANDLER@event 005F        USER_USB_CALLBACK_EVENT_HANDLER@pdata 0061  
                                       l111 026D                                         l103 0282  
                                       l113 0270                                         l105 0285  
                                       l115 027E                                         l107 0293  
                                       l135 01C8                                         l137 01CA  
                                       l139 01D7                 __end_of_USBStdGetDscHandler 0905  
                                       l380 01E8                                         l672 0043  
                                       l744 002E                                         l675 0065  
                                       l676 0077                                         _BDT 0020  
                                       l765 019D                                         _UIE 0E92  
                                       _UIR 0E90                      _APP_LEDUpdateUSBStatus 0C68  
                                _USBSuspend 0E78                        USBStdSetCfgHandler@i 0068  
                      USBStdSetCfgHandler@p 0065                 __end_ofi1_SYSTEM_Initialize 0DE9  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                            _USBDeviceTasks 0B8D                         ?_USBCheckHIDRequest 0070  
                            _USBDeviceState 005B                               _BUTTON_Enable 019E  
                                      S5267 03E5                                        S5269 03ED  
                     ??_USBCtrlTrfRxService 0072                    USBEnableEndpoint@options 0074  
                              __CFG_LVP$OFF 0000                             __end_of_LED_Off 027F  
                                      l4005 014C                                        l4007 0160  
                USBConfigureEndpoint@handle 0073                                        l4713 0273  
                                      l4721 02A3                                        l4707 0288  
                                      l4725 02AF                                        l4717 0297  
                                      l4813 01FC                                        l4735 02BC  
                                      l4729 02BB                                        l4841 0225  
                                      l4907 003B                                        l4773 0177  
                                      l4933 009C                                        l4757 01BA  
                                      l4829 0210                                        l4783 016A  
                                      l4943 00B4                                        l4951 00D6  
                                      l4919 0082                                        l4777 016E  
                                      l4937 00A1                                        l4929 008C  
                                      l4769 01CC                                        l4857 0236  
                                      l3995 010A                                        l3987 00FC  
                                      l4955 00E0                                        l4787 018A  
                                      l4899 01ED                                        u3335 02A0  
                                      u3355 02AC                                        u3515 006E  
                                      u3375 02B8                                        u3590 00C0  
                                      i1l31 0D58                                        u3575 00AF  
                                      u3495 004D                                        i1l26 0D50  
                                      i1l44 0D77                                        i1l36 0D60  
                                      i1l62 0DA1                                        i1l54 0D87  
                                      i1l72 0DB5                                        i1l49 0D7F  
                                      i1l90 0DEB                                        i1l67 0DAD  
                                      i1l92 0DF4                                        i1l77 0DC5  
                                      i1l93 0DFE                                        i1l95 0E12  
                     ??_USBCtrlTrfTxService 0070                                        _UCFG 0E91  
                                      _UEP0 0E98                                        _UEP1 0E99  
                                      _UEIE 0E97                                        _UEIR 0E93  
                                      _UCON 0E8E                                __CFG_WRT$OFF 0000  
    USBStdFeatureReqHandler@current_ep_data 0067                                        _pDst 0057  
                                      _main 0027                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                             _USBDeviceAttach 01D8  
                                      btemp 007E                               __CFG_BOREN$ON 0000  
                                      start 000A                               __CFG_IESO$OFF 0000  
                      ??_USBCheckHIDRequest 0072                  __end_of_USBCheckStdRequest 0895  
                    ??_USBCtrlTrfOutHandler 0076                               _LocalSOFCount 00C4  
                       USBDeviceInit@i_1020 00E0                   ??_USBStdFeatureReqHandler 007B  
                  ??_USBStdGetStatusHandler 0070                          __size_ofi1_LED_Off 0014  
                            ?_USBDeviceInit 0070                                       ?_main 0070  
                             __CFG_WDTE$OFF 0000           __size_of_USBCtrlEPServiceComplete 007D  
                          __end_ofi1_LED_On 0CD3                      __end_of_USBDeviceTasks 0C2D  
                 ?_USBCtrlEPServiceComplete 0070                                       i1l111 0CAD  
                                     i1l103 0CC1                                       i1l113 0CB0  
                                     i1l105 0CC4                                       i1l115 0CBE  
                                     i1l107 0CD2                                       i1l135 0E15  
                                     i1l137 0E18                                       i1l139 0E26  
                                     i1l331 0BA7                                       i1l405 09FF  
                                     i1l341 0BF3                                       i1l182 0C67  
                                     i1l342 0C2A                                       i1l343 0C27  
                                     i1l433 052D                                       i1l418 0F10  
                                     i1l602 0620                                       i1l530 0864  
                                     i1l532 0865                                       i1l541 0883  
                                     i1l518 0EE5                                       i1l470 0909  
                                     i1l473 0946                                       i1l474 0910  
                                     i1l475 0913                                       i1l491 0F82  
                                     i1l662 02CE                                       i1l566 0B56  
                                     i1l765 0DE8                                       _UADDR 0E96  
                                     _USTAT 0E8F                                  i1memset@p1 0074  
                              _outputReport 0120          __size_of_USBCtrlEPAllowStatusStage 0061  
        __end_of_USBHIDCBSetIdleRateHandler 062A                              __CFG_FCMEN$OFF 0000  
                _USBHIDCBSetIdleRateHandler 0621                              ?_BUTTON_Enable 0070  
           __end_of_USBCtrlEPAllowDataStage 0A90                                       _sd000 10D0  
                                     _sd001 103F                                       _sd002 109C  
            ?_USBIncrement1msInternalTimers 0070                   __size_of_BUTTON_IsPressed 0033  
                                     _timer 00CC                                       pclath 000A  
                       __size_of_LED_Enable 0013                                       status 0003  
                                     wtemp0 007E                            __end_ofi1_memset 09BB  
              __size_of_USBStdSetCfgHandler 0059                              __CFG_MCLRE$OFF 0000  
                           __initialization 000C                                __end_of_main 0031  
                            __CFG_LPBOR$OFF 0000                   __size_of_USBCtrlEPService 003F  
                                    ??_main 00EE                             ?_USBDeviceTasks 0070  
                               ?_USBSuspend 0070                                   ??_LED_Off 00DE  
                       __CFG_USBLSCLK$48MHz 0000                             i1_USBDeviceInit 0F89  
                  _USBHIDCBSetReportHandler 062A                     __end_of_USBDeviceAttach 01F1  
                                    i1S5271 03B5                                      i1S5281 03CF  
                                    i1S5293 0646                                      i1S5285 0636  
                                    i1S5277 0400                                      i1S5279 03F5  
                                    _ACTCON 039B                                      i1S5289 063E  
                         __end_ofi1_LED_Off 0CBF                      SYSTEM_Initialize@state 00DF  
                                    i1l3001 0302                               ?i1_LED_Enable 0070  
                                    i1l3101 0D70                                      i1l3005 062A  
                                    i1l3041 0CB3                                      i1l3105 0D7D  
                                    i1l3025 0E08                                      i1l3035 0CC7  
                                    i1l3203 02E3                                      i1l3123 0DA8  
                                    i1l3061 035A                                      i1l3053 034C  
                                    i1l3117 0D88                                      i1l3221 05CB  
                                    i1l3205 05B5                                      i1l3071 039C  
                                    i1l3119 0D97                                      i1l3135 0DB6  
                                    i1l3231 05E9                                      i1l3047 0E1B  
                                    i1l3073 03B0                                      i1l3081 0D45  
                                    i1l3233 05EA                                      i1l3217 05C2  
                                    i1l3225 05D6                                      i1l3171 0C77  
                                    i1l3083 0D49                                      i1l3243 0600  
                                    i1l3227 05E1                                      i1l4051 0FA6  
                                    i1l4035 0F94                                      i1l3325 0F0C  
                                    i1l3253 0613                                      i1l3261 0DC8  
                                    i1l4301 0C16                                      i1l3183 0C93  
                                    i1l3175 0C80                                      i1l3167 0C6E  
                                    i1l3087 0D56                                      i1l3239 05F5  
                                    i1l3511 08F8                                      i1l3431 0950  
                                    i1l3423 0A76                                      i1l4063 0FBA  
                                    i1l4303 0C21                                      i1l4223 0BA1  
                                    i1l4215 0B9A                                      i1l3337 0F28  
                                    i1l3345 0F39                                      i1l3361 081E  
                                    i1l3193 0CA0                                      i1l3249 060B  
                                    i1l3505 08F2                                      i1l3513 0905  
                                    i1l3347 0F3D                                      i1l3355 0F4E  
                                    i1l3371 0CD3                                      i1l3187 0C9C  
                                    i1l3179 0C8A                                      i1l3195 0CA6  
                                    i1l3099 0D61                                      i1l3275 0DDD  
                                    i1l3291 0C51                                      i1l3507 08F5  
                                    i1l3523 0922                                      i1l3419 0A63  
                                    i1l4243 0BB8                                      i1l3197 02C7  
                                    i1l3293 0C53                                      i1l3285 0C44  
                                    i1l3277 0C2D                                      i1l3613 0B5C  
                                    i1l3605 0B4A                                      i1l3541 0A90  
                                    i1l3533 093B                                      i1l3365 09B4  
                                    i1l4261 0BD5                                      i1l4237 0BB3  
                                    i1l3711 057B                                      i1l3287 0C47  
                                    i1l3279 0C35                                      i1l3551 0AA2  
                                    i1l3439 0958                                      i1l4079 0FCB  
                                    i1l3289 0C4C                                      i1l3617 0B75  
                                    i1l3553 0AA4                                      i1l3369 09AB  
                                    i1l3457 096E                                      i1l3641 09CE  
                                    i1l4249 0BC8                                      i1l3387 0CF6  
                                    i1l3723 05AD                                      i1l3811 04EA  
                                    i1l3619 0B7B                                      i1l3483 0895  
                                    i1l3627 09BB                                      i1l4275 0BEC  
                                    i1l4267 0BDB                                      i1l3581 0B06  
                                    i1l3573 0AEC                                      u211_25 0A6D  
                                    i1l3637 09CA                                      i1l4285 0BF9  
                                    i1l3815 04EF                                      i1l3591 0B1C  
                                    i1l3575 0AEF                                      i1l3567 0ACF  
                                    i1l3487 089E                                      i1l3479 099A  
                                    i1l3751 0879                                      i1l3735 086B  
                                    i1l4295 0C0A                                      i1l3841 0EA2  
                                    i1l5273 0C55                                      i1l3497 08D3  
                                    i1l3489 08A7                                      i1l3761 088D  
                                    i1l3737 086C                                      i1l3843 0EA5  
                                    i1l3683 051B                                      i1l3827 0519  
                                    i1l5291 0DBB                                      i1l5283 0D66  
                                    i1l5275 0C62                                      i1l3595 0B27  
                                    i1l3579 0AFC                                      i1l3499 08D6  
                                    i1l3747 0877                                      i1l3739 086D  
                                    i1l3659 0A0A                                      i1l3667 0A12  
                                    i1l3931 0F86                                      i1l3853 0EC8  
                                    i1l3829 0E88                                      i1l3589 0B16  
                                    i1l3749 0878                                      i1l3863 0EF5  
                                    i1l5287 0D8D                                      _LED_On 027F  
                                    i1l3865 0EF7                                      i1l3857 0ED8  
                                    i1l3697 0532                                      i1l3785 0821  
                                    i1l3699 0542                                      i1l2987 032F  
                                    i1l2989 0337                                      i1l2997 02FC  
                                    i1l3957 0F6E                                      i1l3975 0E5C  
                                    i1l3959 0F70                                      i1l3977 0E5D  
                                    i1l3979 0E5F                                      u174_25 0D3E  
                                    u191_25 02D8                                      u248_25 0529  
                                    _OSCCON 0099                             i1_BUTTON_Enable 0DE9  
              i1USBTransferOnePacket@handle 0079                              __CFG_PWRTE$OFF 0000  
                         _shortPacketStatus 0059                            _APP_KeyboardInit 02C7  
                           USBDeviceTasks@i 006D                 USBStdFeatureReqHandler@pUEP 0065  
                  USBTransferOnePacket@data 00DF                  USBCtrlTrfInHandler@lastDTS 0075  
                           ??_USBDeviceInit 00DE                              __CFG_STVREN$ON 0000  
                         _USBEnableEndpoint 02F6             __size_of_USBStdGetStatusHandler 004B  
                                    _memset 016C                                      _state1 00D2  
                                    _state2 00D0                                      _state3 00CE  
                        ?_USBEnableEndpoint 0074               __size_of_USBTransferOnePacket 0075  
                           ??_BUTTON_Enable 00DE                                 _OldSOFCount 00C2  
                       ??_USBEnableEndpoint 0075                          APP_KeyboardTasks@i 00ED  
                               _CtrlTrfData 0048                              ??i1_LED_Enable 0070  
        USBHIDCBSetIdleRateHandler@reportID 0071                        _controlTransferState 0058  
                         _SYSTEM_Initialize 017E                     __end_of__initialization 0024  
                i1USBTransferOnePacket@data 0071                          ?_SYSTEM_Initialize 0070  
                  __size_of_USBStallHandler 0020                                   ?i1_LED_On 0070  
                       __size_of_USBSuspend 0010                              __pcstackCOMMON 0070  
                 __end_of_USBEnableEndpoint 0313                               __end_of_sd000 10D4  
                             __end_of_sd001 1073                               __end_of_sd002 10B8  
                       ??_SYSTEM_Initialize 00DF                                   LED_On@led 00DE  
          __size_of_USBCtrlEPAllowDataStage 0058                             _active_protocol 00DC  
                              ??_LED_Enable 00DE               __size_of_USBConfigureEndpoint 002D  
                   __end_ofi1_USBDeviceInit 1000                 __end_of_USBCtrlTrfInHandler 0EFA  
                   ?_APP_LEDUpdateUSBStatus 0070                              _OPTION_REGbits 0095  
                                 ?i1_memset 0070                     __end_ofi1_BUTTON_Enable 0E13  
                  ??_USBCtrlTrfSetupHandler 007D                     _USBTicksSinceSuspendEnd 00D4  
                          ?_USBDeviceAttach 0070                   __end_of_SYSTEM_Initialize 019E  
                          _BUTTON_IsPressed 0294                      _USBStdGetStatusHandler 0905  
                                __pbssBANK0 0050                                  __pbssBANK1 00A8  
                                __pbssBANK2 0121                                     ?_LED_On 0070  
                              i1LED_Off@led 0070                          __end_of_LED_Enable 01D8  
               __size_of_USBWakeFromSuspend 0017                                 _pBDTEntryIn 00B8  
                                ??i1_LED_On 0070            __end_of_USBCtrlEPServiceComplete 0A38  
               __end_of_BUTTON_UpdateStates 0DC6                                  __pmaintext 0027  
                      USBCtrlTrfRxService@i 0074                       i1BUTTON_Enable@button 0070  
                             LED_Enable@led 00DE                             __CFG_PLLMULT$3x 0000  
            __end_of_APP_LEDUpdateUSBStatus 0CAB                                  __pintentry 0004  
                                   ?_memset 00DE                                  _device_dsc 10B8  
                          _USBCtrlEPService 0E27                                  _ep_data_in 00CA  
               __end_of_USBCtrlTrfRxService 05B5                          _USBCheckStdRequest 0854  
                         _configDescriptor1 1073                                     _LED_Off 026A  
                                ??i1_memset 0074      APP_KeyboardTasks@TimeDeltaMilliseconds 00EB  
               __end_of_USBCtrlTrfTxService 0F52                         _USBStdSetCfgHandler 0950  
                                   u278_2m0 0E58                 ?_USBHIDCBSetIdleRateHandler 0070  
                       ?_USBCheckStdRequest 0070                __size_of_USBStdGetDscHandler 0070  
                                   _UIEbits 0E92                                     _UIRbits 0E90  
              __size_ofi1_SYSTEM_Initialize 0023                             __size_of_LED_On 0015  
                  ??i1_USBTransferOnePacket 0074              APP_LEDUpdateUSBStatus@ledCount 00C0  
           ??_USBIncrement1msInternalTimers 0070                        ?_USBStdSetCfgHandler 0070  
               __size_of_USBCheckHIDRequest 006C                           _APP_KeyboardTasks 0031  
                         __end_of_hid_rpt01 103F                  __size_of_USBEnableEndpoint 001D  
                      ??_USBCheckStdRequest 007D               __size_of_USBCtrlTrfOutHandler 0031  
                        ?_APP_KeyboardTasks 0070                            ??_USBDeviceTasks 007D  
                ??_USBHIDCBSetReportHandler 0070                           ??_USBStallHandler 0070  
                          _keyboardIdleRate 00C6                        __end_ofi1_LED_Enable 0E27  
                          ?i1_USBDeviceInit 0070                             __size_of_memset 0012  
                 __end_of_configDescriptor1 109C                                     __ptext1 01F1  
                                   __ptext2 01D8                                     __ptext3 017E  
                                   __ptext4 01C5                                     __ptext5 019E  
                                   __ptext6 0031                                     __ptext7 016C  
                                   __ptext8 00F0                                     __ptext9 0294  
                                   _inPipes 00AF                 _USBDeferOUTDataStagePackets 00D5  
                       ??_APP_KeyboardTasks 00E9                                ??_USBSuspend 007B  
                  __end_of_APP_KeyboardInit 02F6                            ?i1_BUTTON_Enable 0070  
                        __end_of_USB_CD_Ptr 10D6                  __size_of_SYSTEM_Initialize 0020  
           __size_of_USBCtrlTrfSetupHandler 0033                                     clrloop0 064F  
                      end_of_initialization 0024                          __end_of_USB_SD_Ptr 10D0  
                       _pBDTEntryEP0OutNext 0050                                     memset@c 00DE  
                                   memset@n 00E0                                     memset@p 00E2  
                           _USB1msTickCount 0129                                   i1_LED_Off 0CAB  
                  ?_USBStdFeatureReqHandler 0070                   __end_of_APP_KeyboardTasks 00F0  
                     ??_USBStdSetCfgHandler 007B                          __end_of_USBSuspend 0E88  
                   _USBCtrlEPAllowDataStage 0A38                    _USBCtrlEPServiceComplete 09BB  
                _USBStatusStageEnabledFlag1 00D8                  _USBStatusStageEnabledFlag2 00D7  
                        USBEnableEndpoint@p 0077                                   _PORTBbits 000D  
                           i1LED_Enable@led 0070                            __CFG_FOSC$INTOSC 0000  
                                 _TRISBbits 008D                                   _TRISCbits 008E  
                        _BothEP0OutUOWNsSet 00D9                   USBStdSetCfgHandler@i_1771 0067  
                 USBConfigureEndpoint@EPNum 0072                  ?_USBCtrlEPAllowStatusStage 0070  
       USER_USB_CALLBACK_EVENT_HANDLER@size 0063                                   _USTATcopy 005C  
                  i1USBTransferOnePacket@ep 0078                __end_of_USBTransferOnePacket 0165  
                            __end_of_LED_On 0294             __size_ofi1_USBTransferOnePacket 0075  
                                ?i1_LED_Off 0070                       i1USBDeviceInit@i_1020 0072  
                        __CFG_PLLEN$ENABLED 0000                           __size_ofi1_LED_On 0014  
                    _USBCtrlTrfSetupHandler 0821                    __end_of_BUTTON_IsPressed 02C7  
                     __end_of_USBDeviceInit 026A       __end_of_USBIncrement1msInternalTimers 0E78  
    __size_of_USBIncrement1msInternalTimers 0012               _USBIncrement1msInternalTimers 0E66  
                                LED_Off@led 00DE                                   i1memset@c 0070  
                                 i1memset@n 0072                                   i1memset@p 0075  
        __size_of_USBHIDCBSetReportComplete 0006                              __end_of_memset 017E  
                ?_USBHIDCBSetReportComplete 0070                           _USBBusIsSuspended 00DA  
                       start_initialization 000C                     ?_USBStdGetStatusHandler 0070  
                     __end_of_BUTTON_Enable 01C5               USBCtrlTrfRxService@byteToRead 0075  
                            _oldInputReport 0121                           __size_ofi1_memset 0012  
              __end_of_USBConfigureEndpoint 0340             __end_of_USBStdFeatureReqHandler 0B8D  
                                  ??_LED_On 00DE           __end_of_USBCtrlEPAllowStatusStage 0D34  
                  __end_of_USBCtrlEPService 0E66                  __size_of_APP_KeyboardTasks 00BF  
                 ??_USBCtrlEPAllowDataStage 0073                              USBDeviceInit@i 00E1  
                            USBDeviceInit@p 00DE                       __size_ofi1_LED_Enable 0014  
                    _pBDTEntryEP0OutCurrent 005A                     USBTransferOnePacket@dir 00DE  
                   USBTransferOnePacket@len 00E1                         _USBStdGetDscHandler 0895  
                                  ??_memset 00E2                         i1_SYSTEM_Initialize 0DC6  
                    i1_USBTransferOnePacket 0340                      BUTTON_IsPressed@button 00DF  
                    _USBActiveConfiguration 005E              __end_of_USBStdGetStatusHandler 0950  
                 i1USBTransferOnePacket@dir 0070                   i1USBTransferOnePacket@len 0073  
                                  ?_LED_Off 0070           __end_of_USBHIDCBSetReportComplete 0819  
                                 ___latbits 0002                               __pcstackBANK0 005F  
                             __pcstackBANK1 00DE                __size_of_USBCtrlTrfInHandler 0072  
                      ?_USBStdGetDscHandler 0070                        ?i1_SYSTEM_Initialize 0070  
 __end_ofi1_APP_KeyboardProcessOutputReport 0821  __size_ofi1_APP_KeyboardProcessOutputReport 0008  
   __end_of_APP_KeyboardProcessOutputReport 016C    __size_of_APP_KeyboardProcessOutputReport 0007  
       ??i1_APP_KeyboardProcessOutputReport 0071          ?i1_APP_KeyboardProcessOutputReport 0070  
          ?_APP_KeyboardProcessOutputReport 0070           ??_APP_KeyboardProcessOutputReport 00DF  
         i1_APP_KeyboardProcessOutputReport 0819             _APP_KeyboardProcessOutputReport 0165  
                              i1_LED_Enable 0E13                  __end_of_USBWakeFromSuspend 0F89  
                           _USBStallHandler 0F52                                _pBDTEntryOut 00BC  
                               ??i1_LED_Off 0070                                 i1LED_On@led 0070  
                  __size_of_USBDeviceAttach 0019                                   _hid_rpt01 1000  
                                 _idle_rate 00DD                __size_of_BUTTON_UpdateStates 0092  
                                 __pswtext1 03E5                                   __pswtext2 03ED  
                                 __pswtext3 03B5                                   __pswtext4 0400  
                                 __pswtext5 03F5                                   __pswtext6 03CF  
                                 __pswtext7 0636                                   __pswtext8 063E  
                                 __pswtext9 0646                        _USBTransferOnePacket 00F0  
              __end_of_USBCtrlTrfOutHandler 051B                           ?_APP_KeyboardInit 0070  
                     ??_USBStdGetDscHandler 0070                                 _ep_data_out 00C8  
              __size_of_USBCtrlTrfRxService 009A               USBConfigureEndpoint@direction 0070  
                        ??_APP_KeyboardInit 007B                       ??i1_SYSTEM_Initialize 0071  
              __size_of_USBCtrlTrfTxService 0058                                    _LATCbits 010E  
                __end_of_USBCheckHIDRequest 0621                  ??_USBCtrlEPServiceComplete 0075  
                                 clear_ram0 064E                                    _PIE2bits 0092  
                                  i1_LED_On 0CBF                                    _PIR2bits 0012  
                                  _UEP0bits 0E98                  _USBDeferINDataStagePackets 00D6  
               __size_of_USBCheckStdRequest 0041                                    _UCONbits 0E8E  
                      _USBConfigureEndpoint 0313            __size_of_USBStdFeatureReqHandler 00FD  
                     ?_USBTransferOnePacket 00DE                           _SYS_InterruptHigh 0004  
                                  _WPUBbits 020D                                    i1_memset 09A9  
                              _RemoteWakeup 00DB                            __size_of_LED_Off 0015  
                        ?_SYS_InterruptHigh 0070                    __size_ofi1_USBDeviceInit 0077  
                   __end_of_USBStallHandler 0F72           __size_of_USBHIDCBSetReportHandler 000C  
                 ?_USBHIDCBSetReportHandler 0070                 ??_USBCtrlEPAllowStatusStage 0070  
               __end_of_USBStdSetCfgHandler 09A9                         ??_SYS_InterruptHigh 007E  
                  __size_ofi1_BUTTON_Enable 002A                          __end_of_device_dsc 10CA  
                  ??_APP_LEDUpdateUSBStatus 0071                     ?_USBCtrlTrfSetupHandler 0070  
                   USBStdGetStatusHandler@p 0070                      USBTransferOnePacket@ep 00E6  
                                  _SetupPkt 0040                       ?_USBConfigureEndpoint 0070  
                         ??_USBDeviceAttach 00DE                           ?_BUTTON_IsPressed 0070  
                 __end_of_SYS_InterruptHigh 000A                          ??_BUTTON_IsPressed 00DE  
                                _ANSELBbits 018D                 ??_USBHIDCBSetReportComplete 0071  
                   __size_of_USBDeviceTasks 00A0                                    __ptext10 0165  
                                  __ptext11 027F                                    __ptext20 0E27  
                                  __ptext12 026A                                    __ptext21 0821  
                                  __ptext30 0C2D                                    __ptext22 09BB  
                                  __ptext14 0B8D                                    __ptext31 0DC6  
                                  __ptext23 0A38                                    __ptext15 0F89  
                                  __ptext40 0340                                    __ptext32 0E13  
                                  __ptext24 0854                                    __ptext16 0F72  
                                  __ptext41 02F6                                    __ptext33 0DE9  
                                  __ptext25 0950                                    __ptext17 0E78  
                                  __ptext50 0CAB                                    __ptext42 0313  
                                  __ptext34 05B5                                    __ptext26 09A9  
                                  __ptext18 0F52                                    __ptext51 0EFA  
                                  __ptext43 04EA                                    __ptext35 062A  
                                  __ptext27 0905                                    __ptext19 0E66  
                                  __ptext44 051B                                    __ptext36 0621  
                                  __ptext28 0895                                    __ptext45 0CD3  
                                  __ptext37 0D34                                    __ptext29 0A90  
                                  __ptext46 0E88                                    __ptext38 0C68  
                                  __ptext47 0813                                    __ptext39 02C7  
                                  __ptext48 0819                                    __ptext49 0CBF  
                                  _keyboard 00B4              __end_of_USBCtrlTrfSetupHandler 0854  
                             __size_of_main 000A                           ?_USBCtrlEPService 0070  
                        ??_USBCtrlEPService 006A                         _USBCtrlTrfInHandler 0E88  
                               _inputReport 00A0                         BUTTON_Enable@button 00DE  
                                  _outPipes 00A8                        _USBCtrlTrfOutHandler 04EA  
                                  int$flags 007E                     ?i1_USBTransferOnePacket 0070  
                 _USBCtrlEPAllowStatusStage 0CD3                                  _LED_Enable 01C5  
                    ??_USBTransferOnePacket 00E2                   _USBDeferStatusStagePacket 0054  
                          i1USBDeviceInit@i 0073                            i1USBDeviceInit@p 0070  
                                _INTCONbits 000B                    i1SYSTEM_Initialize@state 0071  
                      ?_USBCtrlTrfInHandler 0070               USBCtrlTrfTxService@byteToSend 0072  
                                  memset@p1 00E3                ??_USBHIDCBSetIdleRateHandler 0071  
                          ?_USBStallHandler 0070                    USBStdFeatureReqHandler@p 0068  
                                  intlevel1 0000                      __size_of_USBDeviceInit 0079  
   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0C68    __size_of_USER_USB_CALLBACK_EVENT_HANDLER 003B  
          ?_USER_USB_CALLBACK_EVENT_HANDLER 005F           ??_USER_USB_CALLBACK_EVENT_HANDLER 007B  
           _USER_USB_CALLBACK_EVENT_HANDLER 0C2D                           ??i1_USBDeviceInit 0070  
                       _BUTTON_UpdateStates 0D34                   _USBHIDCBSetReportComplete 0813  
                         __CFG_CLKOUTEN$OFF 0000             __size_of_APP_LEDUpdateUSBStatus 0043  
            __end_ofi1_USBTransferOnePacket 03B5                      ??_USBConfigureEndpoint 0071  
                     ?_USBCtrlTrfOutHandler 0070                      __size_of_BUTTON_Enable 0027  
                         ??i1_BUTTON_Enable 0070                        __CFG_CPUDIV$NOCLKDIV 0000  
                       _USBCtrlTrfRxService 051B                          _USBWakeFromSuspend 0F72  
                   _USBStdFeatureReqHandler 0A90                         _USBCtrlTrfTxService 0EFA  
                      ?_BUTTON_UpdateStates 0070                  __size_of_SYS_InterruptHigh 0006  
       __size_of_USBHIDCBSetIdleRateHandler 0009                               __pstringtext1 10CA  
                             __pstringtext2 10D4                               __pstringtext3 1000  
                             __pstringtext4 103F                               __pstringtext5 1073  
                             __pstringtext6 109C                               __pstringtext7 10B8  
                             __pstringtext8 10D0                         ?_USBWakeFromSuspend 0070  
                     ??_USBCtrlTrfInHandler 0073                       _USBAlternateInterface 005D  
     USBHIDCBSetIdleRateHandler@newIdleRate 0070                         USBEnableEndpoint@ep 0079  
                           _endpoint_number 0056                        ?_USBCtrlTrfRxService 0070  
                  ?_USBCtrlEPAllowDataStage 0070                        ?_USBCtrlTrfTxService 0070  
                                _SOFCounter 0052                _USBStatusStageTimeoutCounter 0055  
                      ??_USBWakeFromSuspend 007B                  USBTransferOnePacket@handle 00E7  
APP_KeyboardTasks@needToSendNewReportPacket 00EA                                  _USB_CD_Ptr 10D4  
                 __size_of_APP_KeyboardInit 002F  
